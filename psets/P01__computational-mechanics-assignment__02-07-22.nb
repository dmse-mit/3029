(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    149894,       3040]
NotebookOptionsPosition[    139583,       2852]
NotebookOutlinePosition[    139978,       2868]
CellTagsIndexPosition[    139935,       2865]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["3.029 Spring 2022\[LineSeparator]Assignment 01\[LineSeparator]Due \
February 16th at 1pm", "Subtitle",
 CellChangeTimes->{{3.8525512993398438`*^9, 3.8525513206118402`*^9}, {
   3.852652054138073*^9, 3.8526520591301193`*^9}, {3.853194369726288*^9, 
   3.8531943739664793`*^9}, 3.8531971130005827`*^9, {3.853240371893588*^9, 
   3.853240377005457*^9}, {3.8532404097978973`*^9, 3.853240460486964*^9}, {
   3.853273267320517*^9, 
   3.853273267457324*^9}},ExpressionUUID->"42007c19-0c0f-4218-aef2-\
1a908e6c6098"],

Cell[CellGroupData[{

Cell["Computational Classical Mechanics", "Chapter",
 CellChangeTimes->{{3.853240520656044*^9, 
  3.8532405295924*^9}},ExpressionUUID->"12c75b55-10d9-4b59-99ef-b1c1b0a0ba7c"],

Cell[CellGroupData[{

Cell["General Instructions Reminder", "Section",
 CellChangeTimes->{{3.853240516496461*^9, 
  3.853240542688261*^9}},ExpressionUUID->"a3c857ef-11db-47ab-80d0-\
5f03d9469132"],

Cell[CellGroupData[{

Cell["Notebooks should be submitted to canvas", "Item",
 CellChangeTimes->{{3.853240538483585*^9, 3.853240576116683*^9}, {
  3.85324064537376*^9, 
  3.853240645374325*^9}},ExpressionUUID->"d3c25c6a-0000-48cf-a7c3-\
d5e22387f428"],

Cell["\<\
You can choose to submit either a Wolfram Notebook (.nb), or  a Jupyter \
Notebook (.ipynb)\
\>", "Subitem",
 CellChangeTimes->{{3.853240538483585*^9, 3.853240576116683*^9}, {
  3.853240648306451*^9, 3.8532407807728653`*^9}, {3.853241024048524*^9, 
  3.853241026611237*^9}, {3.8532658839458103`*^9, 
  3.8532658839465227`*^9}},ExpressionUUID->"c8bf06df-5049-41c8-928b-\
a06666be885e"],

Cell["\<\
Please name your notebook using the following \
notation:\[LineSeparator]3029__Assignment-01__LASTNAME_FIRSTNAME.nb\
\>", "Subitem",
 CellChangeTimes->{{3.853240538483585*^9, 3.853240576116683*^9}, {
  3.853240648306451*^9, 3.8532407807728653`*^9}, {3.853241024048524*^9, 
  3.853241024592207*^9}},ExpressionUUID->"2f34e1a9-7fc9-4097-8fda-\
509ba5d34f67"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Before submitting your notebook:", "Item",
 CellChangeTimes->{{3.853240538483585*^9, 3.8532406054226418`*^9}, {
  3.853240818155985*^9, 
  3.8532408196114902`*^9}},ExpressionUUID->"8dd4a2e1-eef8-48c6-86c4-\
e4d3ce5dae22"],

Cell[TextData[{
 "Make sure all your code runs from a fresh kennel \[LineSeparator]",
 StyleBox["Wolfram Notebook:",
  FontSlant->"Italic"],
 " Evaluation \[Rule] Quit Kernel, Evaluation \[Rule] Evaluate Notebook\
\[LineSeparator]",
 StyleBox["Jupyter Notebook:",
  FontSlant->"Italic"],
 " Kernel \[Rule] Restart & Run All"
}], "Subitem",
 CellChangeTimes->{{3.853240538483585*^9, 3.853240640677622*^9}, {
  3.8532409005102997`*^9, 3.853240917014426*^9}, {3.853240951318557*^9, 
  3.853240963863579*^9}},ExpressionUUID->"5291df55-810f-44d4-b5f3-\
7f0ad0f78c49"],

Cell[TextData[{
 "Delete all your output\[LineSeparator]",
 StyleBox["Wolfram Notebook:",
  FontSlant->"Italic"],
 " Cell \[Rule] Delete All Output\[LineSeparator]",
 StyleBox["Jupyter Notebook:",
  FontSlant->"Italic"],
 " Cell \[Rule] All Output \[Rule] Clear"
}], "Subitem",
 CellChangeTimes->{{3.853240538483585*^9, 3.853240638747705*^9}, {
  3.853240793293167*^9, 3.853240810469293*^9}, {3.853240971215457*^9, 
  3.853241002495934*^9}},ExpressionUUID->"974989ef-3d00-43c0-b7bb-\
1a0580ea5fc6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tips to maximize your score:", "Item",
 CellChangeTimes->{{3.853241059155366*^9, 
  3.853241069778792*^9}},ExpressionUUID->"642f49d7-f9c1-4bd6-966c-\
dad05216f903"],

Cell["\<\
Comment your code well using text cells/Markdown (not in-line comments)\
\>", "Subitem",
 CellChangeTimes->{{3.853241059155366*^9, 
  3.8532411167524767`*^9}},ExpressionUUID->"513042ee-47cd-41b2-b446-\
f074b571b0f0"],

Cell[CellGroupData[{

Cell["\<\
Don\[CloseCurlyQuote]t include extraneous code and narrative that does not \
contribute to the answer\
\>", "Subitem",
 CellChangeTimes->{{3.853241059155366*^9, 
  3.853241149428296*^9}},ExpressionUUID->"5ab8c044-39f1-40c3-99e6-\
ccf172f59b68"],

Cell["\<\
But feel free to keep a \[OpenCurlyQuote]scratch\[CloseCurlyQuote] notebook \
as you develop your solutions\
\>", "Subsubitem",
 CellChangeTimes->{{3.853241059155366*^9, 
  3.853241175557396*^9}},ExpressionUUID->"22da1d5c-09fe-44cf-ae93-\
acc993199124"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make your graphics aesthetically pleasing and easy to read", "Subitem",
 CellChangeTimes->{{3.853241059155366*^9, 
  3.853241196811839*^9}},ExpressionUUID->"c752676e-61c3-4d0e-994b-\
d3ab79fb2c45"],

Cell["Notably: label your axes and use legible font sizes", "Subsubitem",
 CellChangeTimes->{{3.853241059155366*^9, 
  3.853241216226267*^9}},ExpressionUUID->"a45c3e9a-c3f2-4876-bfea-\
65cb9cdfd1fd"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Double Pendulum & Chaotic Systems (25 points)", "Section",
 CellChangeTimes->{{3.8532404777591457`*^9, 3.853240478583297*^9}, {
  3.8532412548265533`*^9, 3.8532412682988853`*^9}, {3.853269694670594*^9, 
  3.853269694699741*^9}},ExpressionUUID->"43e0bcd1-ce20-4f3a-b15b-\
05eeaad9d66a"],

Cell[CellGroupData[{

Cell[TextData[{
 "In mathematics, ",
 StyleBox["chaotic systems ",
  FontSlant->"Italic"],
 "are those which show a sensitive dependence on initial conditions,"
}], "Item",
 CellChangeTimes->{{3.853266253472434*^9, 
  3.853266304461512*^9}},ExpressionUUID->"5c25c639-64e0-4f65-9bed-\
2709eed2196c"],

Cell["\<\
or in the words of Edward Lorenz\[LineSeparator]\[OpenCurlyDoubleQuote]Chaos: \
when the present determines the future, but the approximate present does not \
approximately determine the future\
\>", "Subitem",
 CellChangeTimes->{{3.853266253472434*^9, 3.85326630661065*^9}, {
  3.853266345882913*^9, 
  3.85326638697189*^9}},ExpressionUUID->"24d0ff06-c38e-421a-8b8b-\
ccec84e644b8"]
}, Open  ]],

Cell["\<\
The double pendulum is one of the simplest dynamical systems with chaotic \
solutions\
\>", "Item",
 CellChangeTimes->{{3.8532663934443913`*^9, 
  3.8532664198356247`*^9}},ExpressionUUID->"dbf56e0d-14ae-476e-8c06-\
13c438a2ef23"],

Cell[CellGroupData[{

Cell["\<\
Recall we investigated the dynamics of the double pendulum in lecture 02 \
using Hamiltonian mechanics\
\>", "Item",
 CellChangeTimes->{
  3.853266094587175*^9, {3.853266213714066*^9, 
   3.853266242373516*^9}},ExpressionUUID->"008cba05-4972-4804-87b6-\
6b1f70d56361"],

Cell[CellGroupData[{

Cell["To obtain animations such as the one below", "Subitem",
 CellChangeTimes->{
  3.853266094587175*^9, {3.853266213714066*^9, 
   3.853266251505728*^9}},ExpressionUUID->"0aa10070-d8c5-4092-8666-\
288d2f50a8d1"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
7nxKnTt3fvHFF+28IsugbhYQA52FEzGVbQl7EIc56PQxifcwDrRyIRYtIm+9
ZRuR0odz585VqlTpez27Ub/9RkyHU3KCCMwBKlGPSiHeDYuoqKs/zJ5Nghe2
ZBRPP63CHPCykDh0xw4D/iMYCpjUG2/QvHqmvU4RmIOqShw1ahTYe1pamvyX
sI9FLf3mG9KjR9AbZxrwha1tZ0PsdSZShVmx5TiXvcwBHC8hQe+HWXAsdIL+
wsJnzlD+XIh33yUvvGC0hRp4+eWXO3bsaNvluna16FCsWaM37Whenj21kgRh
DidOEENliqFCi1g0KOnzzzt8Gqtfv34NGjQo0GD8ENxhw2ihT02AS4MbwymI
jqZnk/Havp1u1+KX6BOd1tNecGcOsAYaW5++QNdduCD7oUuXwOEyDqBmTVXm
kDB69LFjx7KzsxUnLyBKGHE8+L59VAygKvEvngbaD8Jw8iTdzqabdPrw8cfF
blu/vrH5JYE7c4CD6Wupzp8/X7NmTdXMKvApiuzp/PnkqaeEO/eKcX3iCdo2
/8DExyzAuGP0mTDgxQJi4XRDaeBNVpaBe6amGptTqrCXOeCJ9Ou3U6fovDhy
xBjv3rhRtibz88+kRQu70sf16NGjffv2NlwIBuKxx7SNF9zilBQ6fLAL6LQt
W+i/0HB4FAjD6dPFFaAOYE7p52z+IAhzQJ8YWk9T4avvv08M5e6zhrjt2z8M
CzvZqhX1HaZNUy4arl5N2+N/eDDQ8fGUP0OfY1KfPVu03gJOiK6A3jhwgHoK
mC8O577izhygKg1NBEyfYvrk4kW69OdYDVx/uPdeVebQLKwQZcuWrVGjRsOG
DR944IlWrd588snPu3X78r33vv3667ETJ/6+aNGiTZs27doVe/Bg6pEjOVAt
c+ZQadETwACj5Hvnv/3NTK0P7sxB1bMeMWLEtddeq1qcAl1UbB0CP8Ct+OKL
IDbREIYPp+0BEfQD8AE8Ap4algJMMju78PFBM/EGf4W6gLWZPZsqEEM6E2No
MeWYjcwBQ2eUykITQrD17M5IANkuJiP4GeTBjg3uPn362FCJAC3p2lVjWsJT
iI2lwgAVB0GGVmRcC50AMwFhgN5bupRG30MYDOlM0A+LxRtFYA6YHTt3GvsK
pgyIlhJTp5JXXnEiFhGUAF6cXC/DiWCR7pjYX39NA/b8AOO1fz9tvH/lUQyg
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
cJmDCwkuc3AhwWUOcng8nqFDh06YMGHVqlWHDx++VNLL4pqCyxwYUlJSBg0a
lBWSCeB0w2UODOnp6QMHDswLjcpVZuEyB4ajR49+9tlnFzRSUZcCuMxBjuzs
7HvuuadSpUosCCQ8PLxOnTqPPPJIz549ISpTp07duHHj8ePH821PHocLxsfT
7PkCpDB2mUN8fHzv3r0jIyNvuumm7awes/OIixMh1anLHBiSk5PLlSs3duxY
PrePiSECeDEuc2DYtm0b+uGYb0ldZwBhEKBKt8scfOHxeDIyMnbs2DFnzpyR
I0e++eabbdu2veOOO6A6GKOATbn99tufeuqpN954Y8SIEbNnz46Ojj516pTH
xIDiKzNmkGrVSFgYfdWuTZYtC8IzGUBpZg5bt259/vnn8fh33nnnpEmTePqY
u3f7LcnpIFzmIOGdd96pXbt2Lpdk5Tt3ipAk3WUODPv370c/7ONV+TIqymUO
JQsFBQVwPTZt2jRt2rRhw4a9+uqrjz32WN26dcuUKcMYRaVKle65557nnnuu
f//+o0ePXrRoEaTrvLb+nzWrkDPIX+vXO/RIaiiFzAEju2TJklatWuHBmzdv
Pn/+/ALuaeh37BDBWLjMQUJqamr58uV/+uknDveGsRCgOJ/LHBhSUlLQD5s3
b+ZzewiDAHCZg3VcunTpyJEj6Mlff/110KBBL730EqxPzZo1paOv1atXf+CB
B7p06TJw4MBiQRSgjjVrqjCHpk05Pk6pYg4YhalTpzZu3BiP3K5du40bN5pZ
OAoGtm4VYYHaZQ5yvPfee7Vq1bro/C4SLyNVHC5zYIAziH5YunQph3tfueIy
h5DHhQsX4uLi4MyOGTPmgw8+6Nix43333VelShUpiOLhWrVUaANeZcpw3OMu
JcwB03/UqFF16tQpW7Zsjx49uK09+sOWLbxbQOEyBzlOnDhRsWLFH374wdG7
Xr5M6z0LAJc5MMC5iIiImDVrFod7wy7s2MHhvj5wmYPzyMzM3LVr119//fXL
0KHqzKFcOY7+Zsgzh/T09CFDhlStWvWaa67p378/t0gnDZw8Sb75hncjKFzm
oMCAAQNq1KjhaFx9YiLhskXiA5c5SID2GD9+PIcb799PJkzgcF8fCMoczp4V
4ZRB0OHxkNtvV2EOjz/OsVHCMYf0dJKdbcuVjhw50q9fvwoVKlSvXv2LL744
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

    "], {{0, 280.5}, {526.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96, 96}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
    MetaInformation -> <|
     "Exif" -> <|
       "ImageWidth" -> 702, "ImageLength" -> 374, "XResolution" -> 96, 
        "YResolution" -> 96, "ResolutionUnit" -> "Inch", "Software" -> 
        "Created with the Wolfram Language for Students - Personal Use Only : \
www.wolfram.com", "DateTime" -> 
        DateObject[{2022, 2, 2, 20, 16, 43.}, "Instant", "Gregorian", -5.], 
        "TimeZoneOffset" -> -5|>, 
      "Comments" -> <|
       "Software" -> 
        "Created with the Wolfram Language for Students - Personal Use Only : \
www.wolfram.com", "Creation Time" -> 
        DateObject[{2022, 2, 2, 20, 16, 43.}, "Instant"]|>|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{526.5, 280.5},
  PlotRange->{{0, 526.5}, {0, 280.5}}]], "Input",ExpressionUUID->"e397b1c6-\
d546-4277-a125-f6d9936e5b7b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Small-angle approximation (10 points)", "Subsection",
 CellChangeTimes->{{3.853266591453783*^9, 
  3.8532666131657543`*^9}},ExpressionUUID->"b5bf0a5e-f449-428f-a4bc-\
99acd1d4622d"],

Cell[TextData[{
 "Solve the double pendulum for small initial displacements (e.g. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Theta]", "1"], "=", 
    RowBox[{
     SubscriptBox["\[Theta]", "2"], "=", 
     RowBox[{"\[Pi]", "/", "36"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "736efebf-026a-4c3e-ad64-ae0579e29f14"],
 ")"
}], "Item",
 CellChangeTimes->{{3.853266617057197*^9, 3.853266652359188*^9}, {
  3.853266689014935*^9, 3.853266702797793*^9}, {3.853266770701836*^9, 
  3.853266794888392*^9}},ExpressionUUID->"05ca55e6-33d9-4532-a88e-\
52943c376574"],

Cell[CellGroupData[{

Cell[TextData[{
 "Animate your solution in time, like we did in class - with one additional \
panel plotting ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Theta]", "1"], "(", "t", ")"}], " ", "vs", " ", 
    RowBox[{
     SubscriptBox["\[Theta]", "2"], "(", "t", ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9dc5a275-7174-45e0-9bba-33972689c057"],
 " as the system evolves"
}], "Item",
 CellChangeTimes->{{3.853266617057197*^9, 3.853266652359188*^9}, {
  3.853266689014935*^9, 3.853266702797793*^9}, {3.853266770701836*^9, 
  3.8532668739419193`*^9}},ExpressionUUID->"e2f8aefa-ccd0-466b-af8a-\
9d389b12dd22"],

Cell["Hint: Look at ParametricPlot", "Subitem",
 CellChangeTimes->{{3.853266617057197*^9, 3.853266652359188*^9}, {
  3.853266689014935*^9, 3.853266702797793*^9}, {3.853266770701836*^9, 
  3.853266875184636*^9}},ExpressionUUID->"f3934391-5f80-4e81-b538-\
047b3c63178b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Do the same for successively larger and larger initial displacements \
\>", "Item",
 CellChangeTimes->{{3.853266617057197*^9, 3.853266652359188*^9}, {
  3.853266689014935*^9, 3.853266702797793*^9}, {3.853266770701836*^9, 
  3.853266887133499*^9}, {3.853267299053162*^9, 
  3.853267324824806*^9}},ExpressionUUID->"4bfc298e-6220-421a-b2cf-\
883a9be575c7"],

Cell["Comment on your visualization and results", "Subitem",
 CellChangeTimes->{{3.853266617057197*^9, 3.853266652359188*^9}, {
  3.853266689014935*^9, 3.853266702797793*^9}, {3.853266770701836*^9, 
  3.853266887133499*^9}, {3.8532673030088873`*^9, 
  3.853267307471299*^9}},ExpressionUUID->"43d60b8e-10b5-49b4-ac0f-\
ec54f1e09f3d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sensitivity to initial conditions (15 points)", "Subsection",
 CellChangeTimes->{{3.853266591453783*^9, 3.8532666131657543`*^9}, {
  3.853267342515853*^9, 
  3.853267350953331*^9}},ExpressionUUID->"ecb56026-a98b-4eba-841e-\
bb3981d3980f"],

Cell[CellGroupData[{

Cell["\<\
Solve two different sets of double pendulum with the following initial \
displacements (or another equally close set)\
\>", "Item",
 CellChangeTimes->{{3.853266617057197*^9, 3.853266652359188*^9}, {
  3.853266689014935*^9, 3.853266702797793*^9}, {3.853266770701836*^9, 
  3.853266794888392*^9}, {3.853267579963511*^9, 3.8532675994547863`*^9}, {
  3.8532676419000673`*^9, 
  3.853267661356118*^9}},ExpressionUUID->"be6d092e-12db-4758-932f-\
20ae8e4c5d53"],

Cell[TextData[{
 "Simulation 01: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Theta]", "1"], "=", 
     RowBox[{"\[Pi]", "/", "2"}]}], ",", 
    RowBox[{
     SubscriptBox["\[Theta]", "2"], "=", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "/", "2"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "96027d82-186d-4165-af94-eb416f5689af"]
}], "Subitem",
 CellChangeTimes->{{3.853266617057197*^9, 3.853266652359188*^9}, {
  3.853266689014935*^9, 3.853266702797793*^9}, {3.853266770701836*^9, 
  3.853266794888392*^9}, {3.853267579963511*^9, 
  3.853267623455639*^9}},ExpressionUUID->"42417f53-0b0e-4b8e-8e66-\
bd4e4c84a31a"],

Cell[TextData[{
 "Simulation 02: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Theta]", "1"], "=", 
     RowBox[{"\[Pi]", "/", "2"}]}], ",", 
    RowBox[{
     SubscriptBox["\[Theta]", "2"], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "/", "2"}], "+", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "54c191e5-4e4e-4817-b87d-fa77afbc8fa0"]
}], "Subitem",
 CellChangeTimes->{{3.853266617057197*^9, 3.853266652359188*^9}, {
  3.853266689014935*^9, 3.853266702797793*^9}, {3.853266770701836*^9, 
  3.853266794888392*^9}, {3.853267579963511*^9, 
  3.8532676650956583`*^9}},ExpressionUUID->"8fcc6eb0-cb6d-438e-ae93-\
8d0b657f1694"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Animate both sets of pendula in time (using different colors to differentiate \
them)\
\>", "Item",
 CellChangeTimes->{{3.853266617057197*^9, 3.853266652359188*^9}, {
  3.853266689014935*^9, 3.853266702797793*^9}, {3.853266770701836*^9, 
  3.853266794888392*^9}, {3.853267579963511*^9, 
  3.853267692815917*^9}},ExpressionUUID->"1d56652e-fc16-4da5-98cf-\
62b0bcdd95b1"],

Cell["\<\
Comment on how sensitive your simulations are to the perturbation we made in \
initial conditions\
\>", "Subitem",
 CellChangeTimes->{{3.853266617057197*^9, 3.853266652359188*^9}, {
  3.853266689014935*^9, 3.853266702797793*^9}, {3.853266770701836*^9, 
  3.853266794888392*^9}, {3.853267579963511*^9, 
  3.853267721247245*^9}},ExpressionUUID->"c7773654-114f-42ce-9015-\
6fd5841a202c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Find an appropriate metric to quantify how \[OpenCurlyDoubleQuote]different\
\[CloseCurlyDoubleQuote] the two solutions are and plot this over time\
\>", "Item",
 CellChangeTimes->{{3.853266617057197*^9, 3.853266652359188*^9}, {
  3.853266689014935*^9, 3.853266702797793*^9}, {3.853266770701836*^9, 
  3.853266794888392*^9}, {3.853267579963511*^9, 
  3.853267830217009*^9}},ExpressionUUID->"2ac975b4-090c-4a95-b089-\
c374fa71b0ad"],

Cell["\<\
Hint: Think about Log-Log, Log-Linear, Linear-Log plots to show the \
difference clearly\
\>", "Subitem",
 CellChangeTimes->{{3.853266617057197*^9, 3.853266652359188*^9}, {
  3.853266689014935*^9, 3.853266702797793*^9}, {3.853266770701836*^9, 
  3.853266794888392*^9}, {3.853267579963511*^9, 
  3.853267871735382*^9}},ExpressionUUID->"003388f3-4826-4509-bb0b-\
5f181d5e46fb"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Normal Modes (75 points)", "Section",
 CellChangeTimes->{{3.8532412739712276`*^9, 3.853241279554948*^9}, {
  3.853265895149686*^9, 3.853265898957658*^9}, {3.853269698075617*^9, 
  3.853269698171422*^9}},ExpressionUUID->"c9f0885e-e31c-4490-98f6-\
37ada42ada59"],

Cell["\<\
We\[CloseCurlyQuote]ll investigate the normal modes of coupled oscillators \
confined on a ring\
\>", "Item",
 CellChangeTimes->{{3.8532698434740868`*^9, 
  3.8532698735251904`*^9}},ExpressionUUID->"49b886ed-996c-4169-945f-\
b65ae59326b3"],

Cell[CellGroupData[{

Cell[TextData[{
 "We will use the angles ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "i"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1d752e64-c880-4e73-8698-4e424d09f116"],
 " as our generalized coordinates"
}], "Item",
 CellChangeTimes->{{3.8532698434740868`*^9, 3.853269869077587*^9}, {
  3.853269899789222*^9, 
  3.853269974626355*^9}},ExpressionUUID->"284c9a00-daeb-4c75-87bd-\
36edd910f8bd"],

Cell[CellGroupData[{

Cell["\<\
And consider evenly-spaced oscillators as our equilibrium conditions\
\>", "Subitem",
 CellChangeTimes->{{3.8532698434740868`*^9, 3.853269869077587*^9}, {
  3.853269899789222*^9, 
  3.853270001770669*^9}},ExpressionUUID->"f258f69d-8d21-474a-a6a8-\
e4eac20f2329"],

Cell[CellGroupData[{

Cell["E.g. for 5 oscillators we would have something like", "Subsubitem",
 CellChangeTimes->{{3.8532698434740868`*^9, 3.853269869077587*^9}, {
  3.853269899789222*^9, 
  3.8532700421352587`*^9}},ExpressionUUID->"c280c554-a2bd-4f67-9c7f-\
6d3f43a3edba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"equilibriumPositionsFive", "=", 
  RowBox[{"Most", "[", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", 
     RowBox[{"2", "\[Pi]"}], ",", 
     RowBox[{"2", 
      RowBox[{"\[Pi]", "/", "5"}]}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.853270048073146*^9, 3.853270082557535*^9}, {
  3.8532702253692913`*^9, 3.853270232217553*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"0bac830c-7628-45e1-8435-41fe9737a79a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], "5"], ",", 
   FractionBox[
    RowBox[{"4", " ", "\[Pi]"}], "5"], ",", 
   FractionBox[
    RowBox[{"6", " ", "\[Pi]"}], "5"], ",", 
   FractionBox[
    RowBox[{"8", " ", "\[Pi]"}], "5"]}], "}"}]], "Output",
 CellChangeTimes->{{3.853270057974165*^9, 3.853270082907217*^9}, 
   3.853270232634983*^9, 3.853270465281476*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"09fc8b0d-3600-4f43-820e-0068b3abf91b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here\[CloseCurlyQuote]s a simple utility function to draw these", "Item",
 CellChangeTimes->{{3.853270093020247*^9, 
  3.853270152312216*^9}},ExpressionUUID->"f0f48d52-ab17-448b-94c8-\
acd09d76f85c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"coupledOscillators", "[", 
   RowBox[{"positions_", ",", 
    RowBox[{"{", 
     RowBox[{"r_", ",", "\[Delta]r_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Red", ",", 
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", "r"}], "]"}], ",", "Black", ",",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"r", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "#", "]"}], ",", 
             RowBox[{"Sin", "[", "#", "]"}]}], "}"}]}], ",", 
          RowBox[{"2", "\[Delta]r"}]}], "]"}], "&"}], "/@", "positions"}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"r", "+", 
        RowBox[{"2", "\[Delta]r"}]}], ")"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "150"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8532701638249083`*^9, 3.8532701699690104`*^9}, {
  3.853270244498101*^9, 3.853270254322751*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"6793cc0d-0b0f-4806-a5fb-548476677310"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"coupledOscillators", "[", 
  RowBox[{"equilibriumPositionsFive", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0.075"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.853270171514655*^9, 3.853270204560791*^9}, 
   3.853270236628113*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"60681d52-1b07-4814-a165-f4ee89a2055d"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0, 0], CircleBox[{0, 0}, 1]}, 
   {GrayLevel[0], DiskBox[{1, 0}, 0.15], 
    DiskBox[NCache[{
      Rational[1, 4] (-1 + 5^Rational[1, 2]), (Rational[5, 8] + 
        Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      0.30901699437494745`, 0.9510565162951535}], 0.15], 
    DiskBox[NCache[{
      Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
        Rational[-1, 8] 5^Rational[1, 2])^
       Rational[1, 2]}, {-0.8090169943749475, 0.5877852522924731}], 0.15], 
    DiskBox[NCache[{
      Rational[1, 4] (-1 - 5^
        Rational[1, 2]), -(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
        Rational[1, 2]}, {-0.8090169943749475, -0.5877852522924731}], 0.15], 
    DiskBox[NCache[{
      Rational[1, 4] (-1 + 
        5^Rational[1, 2]), -(Rational[5, 8] + 
         Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      0.30901699437494745`, -0.9510565162951535}], 0.15]}},
  ImageSize->150,
  PlotRange->{{-1.15, 1.15}, {-1.15, 1.15}}]], "Output",
 CellChangeTimes->{{3.8532701972501917`*^9, 3.8532702047949657`*^9}, {
   3.853270237496126*^9, 3.8532702549709597`*^9}, 3.8532704664574423`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"8c798708-62a4-460f-b591-f7678021af00"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "In what follows, start with ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["N", "TI"], "\[LongEqual]", "3"}], TraditionalForm], 
     "errors" -> {}, "input" -> "N=3", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4268d449-1f28-457b-86d7-9ebe5e008e63"],
 " (it\[CloseCurlyQuote]ll be easier to work out the math, and it generalizes \
easily to larger N)"
}], "Item",
 CellChangeTimes->{{3.853271203095295*^9, 
  3.8532712375720367`*^9}},ExpressionUUID->"124e70b0-f5f8-4dcb-bad5-\
ab7993ed90b9"],

Cell[CellGroupData[{

Cell["Lagrangian & Hamiltonian (10 points)", "Subsection",
 CellChangeTimes->{{3.8532702684651203`*^9, 
  3.8532702858099737`*^9}},ExpressionUUID->"513d40ed-d5e5-47d8-8e6e-\
1f7f504c947b"],

Cell[TextData[{
 "Write down the system Lagrangian (in terms of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "i"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3532a498-54ae-4e23-b13c-f54b4db04acd"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Theta]", "."], "i"], TraditionalForm]],ExpressionUUID->
  "c474ca90-1240-4ab0-b532-3b72dfa16ab2"],
 ")"
}], "Item",
 CellChangeTimes->{{3.853270287354541*^9, 
  3.853270345408495*^9}},ExpressionUUID->"835d9181-249e-49fb-b384-\
229682e51031"],

Cell[CellGroupData[{

Cell[TextData[{
 "Write down the system Hamiltonian (in terms of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "i"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "00cf0a17-25e4-4a28-b2af-54e5c462fb76"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Theta]", "."], "i"], TraditionalForm]],ExpressionUUID->
  "e1b95f14-40c4-4b87-80c0-f8e1f6324667"],
 ")"
}], "Item",
 CellChangeTimes->{{3.853270287354541*^9, 3.853270299649826*^9}, {
  3.853270350746006*^9, 
  3.85327036310325*^9}},ExpressionUUID->"83e92e8c-4533-496b-9195-\
2ddbbb8065cf"],

Cell[TextData[{
 "Express the canonical momenta ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "i"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "65b2a8b0-9525-469c-bfc8-495dbca1cad5"],
 " in terms of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "i"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "76f4a711-3cbc-4239-ad67-284fc8ee6bf0"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Theta]", "."], "i"], TraditionalForm]],ExpressionUUID->
  "066f05a1-329f-4892-bb55-b16e7b424846"]
}], "Subitem",
 CellChangeTimes->{{3.853270287354541*^9, 3.853270299649826*^9}, {
  3.853270350746006*^9, 
  3.8532704046553993`*^9}},ExpressionUUID->"a846ea9a-ceb4-4b1b-852b-\
3d4d104df2c8"],

Cell[TextData[{
 "Use these substitutions to write down the canonical Hamiltonian (in terms \
of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "i"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "77858c54-6ade-4848-995d-818b8086f3f0"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "i"], TraditionalForm]],ExpressionUUID->
  "b0f06630-c439-4e59-aa47-abcbef1a4d84"],
 ")"
}], "Subitem",
 CellChangeTimes->{{3.853270287354541*^9, 3.853270299649826*^9}, {
  3.853270350746006*^9, 3.853270442357314*^9}, {3.853270795427103*^9, 
  3.853270795431715*^9}},ExpressionUUID->"7315c78d-5a5d-40fe-a48b-\
533cacd5a234"],

Cell["\<\
Comment on your result - was there an easier way to get these?\
\>", "Subitem",
 CellChangeTimes->{{3.853270287354541*^9, 3.853270299649826*^9}, {
  3.853270350746006*^9, 3.853270442357314*^9}, {3.853270796279117*^9, 
  3.853270809015148*^9}},ExpressionUUID->"0a686913-6ee0-4c15-bd41-\
124a2a22a9b4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equations of Motion (10 points)", "Subsection",
 CellChangeTimes->{{3.853270830183256*^9, 
  3.853270904176499*^9}},ExpressionUUID->"52cc196f-874c-4184-ac51-\
5090a996afaa"],

Cell[CellGroupData[{

Cell["Write down Hamilton\[CloseCurlyQuote]s equations of motion", "Item",
 CellChangeTimes->{{3.853270287354541*^9, 3.853270345408495*^9}, {
  3.853270885088337*^9, 
  3.853270921197465*^9}},ExpressionUUID->"79e4580d-dc4a-43f2-9796-\
0bdc80cf386e"],

Cell["Hint: That\[CloseCurlyQuote]s 2 equations for each oscillator", \
"Subitem",
 CellChangeTimes->{{3.853270287354541*^9, 3.853270345408495*^9}, {
  3.853270885088337*^9, 
  3.853270948325034*^9}},ExpressionUUID->"bc84984e-9d23-474c-a713-\
c95954386408"]
}, Open  ]],

Cell["\<\
Combine Hamilton\[CloseCurlyQuote]s equations to derive the equations of \
motion\
\>", "Item",
 CellChangeTimes->{{3.853270287354541*^9, 3.853270345408495*^9}, {
  3.853270885088337*^9, 
  3.853270977300797*^9}},ExpressionUUID->"18002655-cb75-4403-a37f-\
cff08f6ec97e"],

Cell[BoxData[
 RowBox[{"\t", 
  TemplateBox[<|"boxes" -> FormBox[
      RowBox[{
        FractionBox[
         RowBox[{
           SuperscriptBox[
            StyleBox["d", "TI"], "2"], 
           SubscriptBox["\[Theta]", 
            StyleBox["i", "TI"]]}], 
         RowBox[{
           StyleBox["d", "TI"], 
           SuperscriptBox[
            StyleBox["t", "TI"], "2"]}]], "\[LongEqual]", "-", 
        FractionBox["1", 
         SubscriptBox[
          StyleBox["m", "TI"], 
          StyleBox["i", "TI"]]], 
        FractionBox[
         RowBox[{"\[PartialD]", 
           StyleBox["H", "TI"]}], 
         RowBox[{"\[PartialD]", 
           SubscriptBox["\[Theta]", 
            StyleBox["i", "TI"]]}]]}], TraditionalForm], "errors" -> {}, 
    "input" -> 
    "\\frac{d^2 \\theta_i}{dt^2} = -\\frac{1}{m_i}\\frac{\\partial \
H}{\\partial \\theta_i}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.853271046377873*^9, 
  3.8532710467959557`*^9}},ExpressionUUID->"668422c8-6197-4013-b9d0-\
54d53b78b4a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Educated Guess (15 points)", "Subsection",
 CellChangeTimes->{{3.853270830183256*^9, 3.853270904176499*^9}, {
  3.853271064610079*^9, 3.853271072674526*^9}, {3.8532718146747503`*^9, 
  3.8532718147382193`*^9}},ExpressionUUID->"512507b2-bf37-44f8-8c77-\
1a0713c71f06"],

Cell[CellGroupData[{

Cell["\<\
Make an educated guess (ansatz) as to kind of solutions we expect to get\
\>", "Item",
 CellChangeTimes->{{3.853271074014968*^9, 
  3.85327110575707*^9}},ExpressionUUID->"8b237744-3685-4343-826c-\
b26823085517"],

Cell["\<\
Hint: We\[CloseCurlyQuote]ve seen masses on springs evolve periodically in \
time\
\>", "Subitem",
 CellChangeTimes->{{3.853271074014968*^9, 
  3.853271143802949*^9}},ExpressionUUID->"6d7f0e79-7fae-43b5-8717-\
2f7e35b075f0"]
}, Open  ]],

Cell[TextData[{
 "Substitute your guess into the equations of motion above to obtain ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["N", "TI"], TraditionalForm], "errors" -> {}, "input" -> "N", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "45dffe53-48e6-44cb-ab5c-b992d4b8e332"],
 " equations of motion"
}], "Item",
 CellChangeTimes->{{3.853271074014968*^9, 3.853271105042653*^9}, {
  3.8532711458430033`*^9, 3.853271156427362*^9}, {3.85327119298975*^9, 
  3.853271197483251*^9}, {3.8532712435239363`*^9, 3.853271248100636*^9}, {
  3.853271416318858*^9, 
  3.8532714163194733`*^9}},ExpressionUUID->"06e0f8cf-9576-43da-873e-\
a8cc651f7818"],

Cell[CellGroupData[{

Cell[TextData[{
 "You should have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        StyleBox["N", "TI"], TraditionalForm], "errors" -> {}, "input" -> "N",
       "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], " "}], TraditionalForm]],ExpressionUUID->
  "6c9f7dbd-0ed7-4f48-8748-f82611a6d1e6"],
 " equations of motion, each depending on a subset of your ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["N", "TI"], TraditionalForm], "errors" -> {}, "input" -> "N", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "fbeaa59c-00d5-48a5-a2dd-140fa0a3f464"],
 " variables"
}], "Item",
 CellChangeTimes->{{3.853271074014968*^9, 3.853271105042653*^9}, {
  3.8532711458430033`*^9, 3.853271156427362*^9}, {3.85327119298975*^9, 
  3.853271197483251*^9}, {3.8532712435239363`*^9, 3.853271248100636*^9}, {
  3.8532714206306257`*^9, 
  3.85327147739158*^9}},ExpressionUUID->"3cc764f2-f69c-49bf-aeb8-\
56835f32ac60"],

Cell[CellGroupData[{

Cell[TextData[{
 "Express this as matrix of equations, such that when dotted with your \
variables it recovers your ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["N", "TI"], TraditionalForm], "errors" -> {}, "input" -> "N", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d050fe49-621f-47a6-a6c6-5a0fa9e0559c"],
 " equations"
}], "Subitem",
 CellChangeTimes->{{3.853271074014968*^9, 3.853271105042653*^9}, {
  3.8532711458430033`*^9, 3.853271156427362*^9}, {3.85327119298975*^9, 
  3.853271197483251*^9}, {3.8532712435239363`*^9, 3.853271248100636*^9}, {
  3.8532714206306257`*^9, 3.8532714223503532`*^9}, {3.8532714871508408`*^9, 
  3.8532715463412733`*^9}},ExpressionUUID->"36bbe8c9-8aca-43cb-93e5-\
0b5107026259"],

Cell[CellGroupData[{

Cell["E.g. if your equations were (this is for demonstration only)", \
"Subsubitem",
 CellChangeTimes->{{3.853271074014968*^9, 3.853271105042653*^9}, {
  3.8532711458430033`*^9, 3.853271156427362*^9}, {3.85327119298975*^9, 
  3.853271197483251*^9}, {3.8532712435239363`*^9, 3.853271248100636*^9}, {
  3.8532714206306257`*^9, 3.8532714223503532`*^9}, {3.8532714871508408`*^9, 
  3.853271619576682*^9}, {3.853271655560256*^9, 
  3.8532716629685707`*^9}},ExpressionUUID->"738eed44-2dc6-4570-bc80-\
fa0b382d130b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dummyEquations", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]1", "+", 
       RowBox[{"2", "\[Theta]2"}]}], "==", "0"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{
       RowBox[{"2", "\[Theta]1"}], "+", 
       RowBox[{"3", "\[Theta]2"}]}], "==", "0"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.853271624849435*^9, 3.853271670145464*^9}, {
  3.853271730161722*^9, 3.8532717338417053`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"b1c2e181-2fc1-40aa-a90d-38e61c225d62"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Then you can obtain your matrix using", "Subsubitem",
 CellChangeTimes->{{3.853271672046081*^9, 3.853271679464633*^9}, {
  3.853271748272933*^9, 
  3.853271748585767*^9}},ExpressionUUID->"8f99d793-2af0-4630-ac42-\
03813aa15be1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"variables", "=", 
   RowBox[{"{", 
    RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"matrix", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"Last", "[", 
     RowBox[{"CoefficientArrays", "[", 
      RowBox[{"dummyEquations", ",", "variables"}], "]"}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"matrix", ".", "variables"}]}], "Input",
 CellChangeTimes->{{3.853271698723196*^9, 3.853271805909107*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"460bfa01-e0e2-4332-954d-54729062f70e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2"},
     {"2", "3"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.853271708176594*^9, 3.853271806125545*^9}},
 CellLabel->
  "Out[36]//MatrixForm=",ExpressionUUID->"436866f1-2ed0-4545-a90a-\
a802533480a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Theta]1", "+", 
    RowBox[{"2", " ", "\[Theta]2"}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", "\[Theta]1"}], "+", 
    RowBox[{"3", " ", "\[Theta]2"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.853271708176594*^9, 3.8532718061277857`*^9}},
 CellLabel->"Out[37]=",ExpressionUUID->"af641997-d436-49cb-8bb2-829f38e915e6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Eigenvalue Problem (25 points)", "Subsection",
 CellChangeTimes->{{3.853271889810873*^9, 
  3.8532719085470057`*^9}},ExpressionUUID->"b15a9a55-2af5-46c4-8b59-\
f052f696403e"],

Cell[CellGroupData[{

Cell["\<\
Inspecting your matrix you should see that it has the form of an eigenvalue \
problem\
\>", "Item",
 CellChangeTimes->{{3.853271915863739*^9, 
  3.853271964137327*^9}},ExpressionUUID->"5075021a-88e9-47df-8cca-\
1f7f0d258581"],

Cell[CellGroupData[{

Cell[TextData[{
 "I.e. it looks like ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         RowBox[{"(", 
           RowBox[{
             StyleBox["A", "TI"], "-", "\[Lambda]", 
             StyleBox["I", "TI"]}], ")"}], 
         StyleBox["x", "TI"], "\[LongEqual]", "0"}], TraditionalForm], 
     "errors" -> {}, "input" -> "(A-\\lambda I)x =0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "5b894a1f-9688-42d0-b286-3e11232ab3bc"]
}], "Subitem",
 CellChangeTimes->{{3.853271915863739*^9, 
  3.853271994810614*^9}},ExpressionUUID->"4f3cabc1-cec2-4e2a-97c2-\
2d77370506c3"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["A", "TI"], TraditionalForm], "errors" -> {}, "input" -> "A", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "ace390e5-0a18-4b9c-9ef4-fb0d0f3c5a52"],
 " is your matrix, ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["I", "TI"], TraditionalForm], "errors" -> {}, "input" -> "I", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d99e9e6b-122d-4c92-a98f-81c8ed04db67"],
 " is the identity, ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["x", "TI"], TraditionalForm], "errors" -> {}, "input" -> "x", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "7fda1d86-d049-48c0-b20b-9356ef060d6f"],
 " are your variables, and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["\[Lambda]", TraditionalForm], "errors" -> {}, "input" -> 
     "\\lambda", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a9d1dcaa-280f-4f5c-84c0-b9d29e34a50c"],
 "  is the eigenvalue"
}], "Subsubitem",
 CellChangeTimes->{{3.853271915863739*^9, 
  3.853272072794842*^9}},ExpressionUUID->"1a5e20c8-0de4-4066-8510-\
655aa24346c8"]
}, Open  ]]
}, Open  ]],

Cell["\<\
One way to solve this would be to set the determinant of the matrix you \
computed above to zero\
\>", "Item",
 CellChangeTimes->{{3.853271915863739*^9, 
  3.853272136188025*^9}},ExpressionUUID->"90627775-8b9f-42eb-8617-\
768855a05240"],

Cell[CellGroupData[{

Cell[TextData[{
 "A different way, would be to define a new matrix by adding ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[Lambda]", 
         StyleBox["I", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\lambda I", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "8952c210-a0e7-4b55-9048-60b7e5288922"],
 " and using Eigensystem"
}], "Item",
 CellChangeTimes->{{3.853271915863739*^9, 
  3.853272181442251*^9}},ExpressionUUID->"4f70930b-f6ab-4ed9-8b03-\
74767ceefe96"],

Cell[TextData[{
 "Hint: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[Lambda]", 
         StyleBox["I", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\lambda I", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4320e5bc-1bea-44f0-beac-103415eec9ce"],
 " will be the common element along your matrix\[CloseCurlyQuote]s diagonal"
}], "Subitem",
 CellChangeTimes->{{3.853271915863739*^9, 3.853272205270813*^9}, {
  3.853272290380636*^9, 
  3.853272290381503*^9}},ExpressionUUID->"c8ca28ed-912e-404e-808e-\
0eeee273e735"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Once you have this matrix, evaluate it numerically (e.g. pick the spring \
constant ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[Kappa]", "\[LongEqual]", "1"}], TraditionalForm], 
     "errors" -> {}, "input" -> "\\kappa=1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "953c3593-c530-415a-97c1-5f1180199145"],
 " and set all masses to 1)\[LineSeparator]and then pass it in the utility \
function below"
}], "Item",
 CellChangeTimes->{{3.853271915863739*^9, 3.853272205270813*^9}, {
  3.853272291183123*^9, 3.853272335167878*^9}, {3.853272432368888*^9, 
  3.853272528743627*^9}},ExpressionUUID->"3d5b70d5-e1cf-4c66-b234-\
bbec10a86828"],

Cell[BoxData[
 RowBox[{
  RowBox[{"orthogonalEigenSystem", "[", 
   RowBox[{"numericalMatrix_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"MatrixQ", "[", 
       RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"evals", ",", "evecs"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"evals", ",", "evecs"}], "}"}], "=", 
      RowBox[{"Eigensystem", "[", "numericalMatrix", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"evals", ",", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Orthogonalize", "/@", 
          RowBox[{"FindClusters", "[", 
           RowBox[{"evals", "\[Rule]", "evecs"}], "]"}]}], ",", "1"}], 
        "]"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.853272345696301*^9, 3.853272353432749*^9}, {
  3.853272392241733*^9, 3.853272412315579*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"a1e44315-55e1-4f9a-a894-bf73082fbb79"],

Cell[TextData[{
 "The function will return a list of two elements:\[LineSeparator]the first \
will be a list of the ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["N", "TI"], TraditionalForm], "errors" -> {}, "input" -> "N", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a2860078-8bff-4170-8326-e12cb8248cde"],
 " eigenvalues\[LineSeparator]the second will be a matrix where the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["i", "th"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "38c1359f-8a2d-4c4d-bb9f-c715688e47a8"],
 " row is the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["i", "th"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "dc5be0c6-5e98-414b-bb8c-a9bf9b4994d4"],
 " eigenvector"
}], "Subitem",
 CellChangeTimes->{{3.853272532068275*^9, 3.8532726315461884`*^9}, 
   3.8532726731310863`*^9},ExpressionUUID->"50aeec7c-b273-40b3-b776-\
1b1586e1c685"],

Cell["\<\
Note: this is to ensure your eigenvectors are orthogonal - If you find \
yourself stuck at this point, please ask!\
\>", "Subitem",
 CellChangeTimes->{{3.853272532068275*^9, 3.8532725640579653`*^9}, {
  3.853272720832831*^9, 
  3.8532727208336973`*^9}},ExpressionUUID->"e9548caa-a197-4b86-b640-\
0b48b2eca48b"]
}, Open  ]],

Cell["Comment on your eigenvalues!", "Item",
 CellChangeTimes->{{3.853272532068275*^9, 3.8532725640579653`*^9}, {
  3.853272721875519*^9, 
  3.853272728427554*^9}},ExpressionUUID->"6f0d8b3a-f4ce-4b58-af58-\
d33e584a9385"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization (15 points)", "Subsection",
 CellChangeTimes->{{3.853271889810873*^9, 3.8532719085470057`*^9}, {
  3.853272719259943*^9, 
  3.853272748555972*^9}},ExpressionUUID->"bb88f1fa-0303-44fe-8065-\
7a6bbef2b38c"],

Cell["\<\
Substitute your solutions back into your the educated guess and animate your \
result as a function of time!\
\>", "Item",
 CellChangeTimes->{
  3.853272750385537*^9, {3.853272831876865*^9, 
   3.8532728793613987`*^9}},ExpressionUUID->"55b5a17f-3603-4e39-a6e5-\
51d15beaed7c"],

Cell[CellGroupData[{

Cell["Here are a number of hints:", "Item",
 CellChangeTimes->{
  3.853272750385537*^9, {3.853272831876865*^9, 
   3.853272899941337*^9}},ExpressionUUID->"b2e23eb0-7e23-4687-9b6c-\
d5ad9e236832"],

Cell["\<\
You should find that for one of the eigenvalue solutions, your ansatz is \
non-unique. \[LineSeparator]Don\[CloseCurlyQuote]t worry, this is correct - \
and thinking about what that eigenvalue means physically will help you find a \
workaround\
\>", "Subitem",
 CellChangeTimes->{
  3.853272750385537*^9, {3.853272831876865*^9, 
   3.8532729909237843`*^9}},ExpressionUUID->"67f1e2d4-0120-4f11-8d66-\
1d405c837986"],

Cell["\<\
Your solutions should be complex in character - which part should you use? \
Real or Imaginary? (Pick the one which agrees with your initial conditions \
for t=0)\
\>", "Subitem",
 CellChangeTimes->{
  3.853272750385537*^9, {3.853272831876865*^9, 3.853273009574689*^9}, {
   3.853273064196217*^9, 
   3.853273138844369*^9}},ExpressionUUID->"a254b360-7b9c-4d56-b477-\
c28f4cb3f6d1"],

Cell["Please ask if you get stuck!", "Subitem",
 CellChangeTimes->{
  3.853272750385537*^9, {3.853272831876865*^9, 3.853273009574689*^9}, {
   3.853273064196217*^9, 
   3.853273165311936*^9}},ExpressionUUID->"0bdf6721-715d-4ec9-bc15-\
c6e7940ec18e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 786},
WindowMargins->{{1440, Automatic}, {0, Automatic}},
FrontEndVersion->"13.0 for Linux x86 (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"30b2d7ba-bc49-4b67-bb71-984c96fabb2f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 515, 8, 117, "Subtitle",ExpressionUUID->"42007c19-0c0f-4218-aef2-1a908e6c6098"],
Cell[CellGroupData[{
Cell[1098, 32, 174, 2, 69, "Chapter",ExpressionUUID->"12c75b55-10d9-4b59-99ef-b1c1b0a0ba7c"],
Cell[CellGroupData[{
Cell[1297, 38, 174, 3, 68, "Section",ExpressionUUID->"a3c857ef-11db-47ab-80d0-5f03d9469132"],
Cell[CellGroupData[{
Cell[1496, 45, 229, 4, 32, "Item",ExpressionUUID->"d3c25c6a-0000-48cf-a7c3-d5e22387f428"],
Cell[1728, 51, 394, 8, 26, "Subitem",ExpressionUUID->"c8bf06df-5049-41c8-928b-a06666be885e"],
Cell[2125, 61, 365, 7, 45, "Subitem",ExpressionUUID->"2f34e1a9-7fc9-4097-8fda-509ba5d34f67"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2527, 73, 227, 4, 32, "Item",ExpressionUUID->"8dd4a2e1-eef8-48c6-86c4-e4d3ce5dae22"],
Cell[2757, 79, 562, 13, 64, "Subitem",ExpressionUUID->"5291df55-810f-44d4-b5f3-7f0ad0f78c49"],
Cell[3322, 94, 498, 12, 64, "Subitem",ExpressionUUID->"974989ef-3d00-43c0-b7bb-1a0580ea5fc6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3857, 111, 170, 3, 32, "Item",ExpressionUUID->"642f49d7-f9c1-4bd6-966c-dad05216f903"],
Cell[4030, 116, 226, 5, 26, "Subitem",ExpressionUUID->"513042ee-47cd-41b2-b446-f074b571b0f0"],
Cell[CellGroupData[{
Cell[4281, 125, 254, 6, 26, "Subitem",ExpressionUUID->"5ab8c044-39f1-40c3-99e6-ccf172f59b68"],
Cell[4538, 133, 263, 6, 25, "Subsubitem",ExpressionUUID->"22da1d5c-09fe-44cf-ae93-acc993199124"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4838, 144, 203, 3, 26, "Subitem",ExpressionUUID->"c752676e-61c3-4d0e-994b-d3ab79fb2c45"],
Cell[5044, 149, 199, 3, 25, "Subsubitem",ExpressionUUID->"a45c3e9a-c3f2-4876-bfea-65cb9cdfd1fd"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5304, 159, 291, 4, 68, "Section",ExpressionUUID->"43e0bcd1-ce20-4f3a-b15b-05eeaad9d66a"],
Cell[CellGroupData[{
Cell[5620, 167, 298, 8, 32, "Item",ExpressionUUID->"5c25c639-64e0-4f65-9bed-2709eed2196c"],
Cell[5921, 177, 393, 8, 45, "Subitem",ExpressionUUID->"24d0ff06-c38e-421a-8b8b-ccec84e644b8"]
}, Open  ]],
Cell[6329, 188, 239, 6, 32, "Item",ExpressionUUID->"dbf56e0d-14ae-476e-8c06-13c438a2ef23"],
Cell[CellGroupData[{
Cell[6593, 198, 278, 7, 32, "Item",ExpressionUUID->"008cba05-4972-4804-87b6-6b1f70d56361"],
Cell[CellGroupData[{
Cell[6896, 209, 213, 4, 26, "Subitem",ExpressionUUID->"0aa10070-d8c5-4092-8666-288d2f50a8d1"],
Cell[7112, 215, 98319, 1620, 293, "Input",ExpressionUUID->"e397b1c6-d546-4277-a125-f6d9936e5b7b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[105480, 1841, 187, 3, 54, "Subsection",ExpressionUUID->"b5bf0a5e-f449-428f-a4bc-99acd1d4622d"],
Cell[105670, 1846, 604, 16, 32, "Item",ExpressionUUID->"05ca55e6-33d9-4532-a88e-52943c376574"],
Cell[CellGroupData[{
Cell[106299, 1866, 670, 17, 32, "Item",ExpressionUUID->"e2f8aefa-ccd0-466b-af8a-9d389b12dd22"],
Cell[106972, 1885, 268, 4, 26, "Subitem",ExpressionUUID->"f3934391-5f80-4e81-b538-047b3c63178b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107277, 1894, 363, 7, 32, "Item",ExpressionUUID->"4bfc298e-6220-421a-b2cf-883a9be575c7"],
Cell[107643, 1903, 332, 5, 26, "Subitem",ExpressionUUID->"43d60b8e-10b5-49b4-ac0f-ec54f1e09f3d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[108024, 1914, 244, 4, 54, "Subsection",ExpressionUUID->"ecb56026-a98b-4eba-841e-bb3981d3980f"],
Cell[CellGroupData[{
Cell[108293, 1922, 464, 9, 32, "Item",ExpressionUUID->"be6d092e-12db-4758-932f-20ae8e4c5d53"],
Cell[108760, 1933, 678, 19, 26, "Subitem",ExpressionUUID->"42417f53-0b0e-4b8e-8e66-bd4e4c84a31a"],
Cell[109441, 1954, 760, 22, 26, "Subitem",ExpressionUUID->"8fcc6eb0-cb6d-438e-ae93-8d0b657f1694"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110238, 1981, 379, 8, 32, "Item",ExpressionUUID->"1d56652e-fc16-4da5-98cf-62b0bcdd95b1"],
Cell[110620, 1991, 394, 8, 26, "Subitem",ExpressionUUID->"c7773654-114f-42ce-9015-6fd5841a202c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111051, 2004, 441, 8, 32, "Item",ExpressionUUID->"2ac975b4-090c-4a95-b089-c374fa71b0ad"],
Cell[111495, 2014, 385, 8, 26, "Subitem",ExpressionUUID->"003388f3-4826-4509-bb0b-5f181d5e46fb"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[111941, 2029, 266, 4, 68, "Section",ExpressionUUID->"c9f0885e-e31c-4490-98f6-37ada42ada59"],
Cell[112210, 2035, 249, 6, 32, "Item",ExpressionUUID->"49b886ed-996c-4169-945f-b65ae59326b3"],
Cell[CellGroupData[{
Cell[112484, 2045, 436, 12, 32, "Item",ExpressionUUID->"284c9a00-daeb-4c75-87bd-36edd910f8bd"],
Cell[CellGroupData[{
Cell[112945, 2061, 272, 6, 26, "Subitem",ExpressionUUID->"f258f69d-8d21-474a-a6a8-e4eac20f2329"],
Cell[CellGroupData[{
Cell[113242, 2071, 252, 4, 25, "Subsubitem",ExpressionUUID->"c280c554-a2bd-4f67-9c7f-6d3f43a3edba"],
Cell[CellGroupData[{
Cell[113519, 2079, 443, 10, 29, "Input",ExpressionUUID->"0bac830c-7628-45e1-8435-41fe9737a79a"],
Cell[113965, 2091, 499, 13, 49, "Output",ExpressionUUID->"09fc8b0d-3600-4f43-820e-0068b3abf91b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[114537, 2112, 205, 3, 32, "Item",ExpressionUUID->"f0f48d52-ab17-448b-94c8-acd09d76f85c"],
Cell[114745, 2117, 1511, 43, 113, "Input",ExpressionUUID->"6793cc0d-0b0f-4806-a5fb-548476677310"],
Cell[CellGroupData[{
Cell[116281, 2164, 340, 7, 29, "Input",ExpressionUUID->"60681d52-1b07-4814-a165-f4ee89a2055d"],
Cell[116624, 2173, 1250, 25, 167, "Output",ExpressionUUID->"8c798708-62a4-460f-b591-f7678021af00"]
}, Open  ]]
}, Open  ]],
Cell[117901, 2202, 608, 15, 33, "Item",ExpressionUUID->"124e70b0-f5f8-4dcb-bad5-ab7993ed90b9"],
Cell[CellGroupData[{
Cell[118534, 2221, 188, 3, 54, "Subsection",ExpressionUUID->"513d40ed-d5e5-47d8-8e6e-1f7f504c947b"],
Cell[118725, 2226, 551, 17, 32, "Item",ExpressionUUID->"835d9181-249e-49fb-b384-229682e51031"],
Cell[CellGroupData[{
Cell[119301, 2247, 600, 18, 32, "Item",ExpressionUUID->"83e92e8c-4533-496b-9195-2ddbbb8065cf"],
Cell[119904, 2267, 763, 23, 26, "Subitem",ExpressionUUID->"a846ea9a-ceb4-4b1b-852b-3d4d104df2c8"],
Cell[120670, 2292, 650, 18, 26, "Subitem",ExpressionUUID->"7315c78d-5a5d-40fe-a48b-533cacd5a234"],
Cell[121323, 2312, 310, 6, 26, "Subitem",ExpressionUUID->"0a686913-6ee0-4c15-bd41-124a2a22a9b4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[121682, 2324, 179, 3, 54, "Subsection",ExpressionUUID->"52cc196f-874c-4184-ac51-5090a996afaa"],
Cell[CellGroupData[{
Cell[121886, 2331, 249, 4, 32, "Item",ExpressionUUID->"79e4580d-dc4a-43f2-9796-0bdc80cf386e"],
Cell[122138, 2337, 257, 5, 26, "Subitem",ExpressionUUID->"bc84984e-9d23-474c-a713-c95954386408"]
}, Open  ]],
Cell[122410, 2345, 280, 7, 32, "Item",ExpressionUUID->"18002655-cb75-4403-a37f-cff08f6ec97e"],
Cell[122693, 2354, 1068, 30, 47, "DisplayFormulaNumbered",ExpressionUUID->"668422c8-6197-4013-b9d0-54d53b78b4a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123798, 2389, 273, 4, 54, "Subsection",ExpressionUUID->"512507b2-bf37-44f8-8c77-1a0713c71f06"],
Cell[CellGroupData[{
Cell[124096, 2397, 221, 5, 32, "Item",ExpressionUUID->"8b237744-3685-4343-826c-b26823085517"],
Cell[124320, 2404, 234, 6, 26, "Subitem",ExpressionUUID->"6d7f0e79-7fae-43b5-8717-2f7e35b075f0"]
}, Open  ]],
Cell[124569, 2413, 723, 16, 32, "Item",ExpressionUUID->"06e0f8cf-9576-43da-873e-a8cc651f7818"],
Cell[CellGroupData[{
Cell[125317, 2433, 1022, 25, 32, "Item",ExpressionUUID->"3cc764f2-f69c-49bf-aeb8-56835f32ac60"],
Cell[CellGroupData[{
Cell[126364, 2462, 799, 17, 27, "Subitem",ExpressionUUID->"36bbe8c9-8aca-43cb-93e5-0b5107026259"],
Cell[CellGroupData[{
Cell[127188, 2483, 509, 8, 25, "Subsubitem",ExpressionUUID->"738eed44-2dc6-4570-bc80-fa0b382d130b"],
Cell[127700, 2493, 614, 16, 92, "Input",ExpressionUUID->"b1c2e181-2fc1-40aa-a90d-38e61c225d62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128351, 2514, 234, 4, 25, "Subsubitem",ExpressionUUID->"8f99d793-2af0-4630-ac42-03813aa15be1"],
Cell[CellGroupData[{
Cell[128610, 2522, 610, 15, 71, "Input",ExpressionUUID->"460bfa01-e0e2-4332-954d-54729062f70e"],
Cell[129223, 2539, 644, 19, 62, "Output",ExpressionUUID->"436866f1-2ed0-4545-a90a-a802533480a6"],
Cell[129870, 2560, 375, 9, 33, "Output",ExpressionUUID->"af641997-d436-49cb-8bb2-829f38e915e6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[130330, 2578, 180, 3, 54, "Subsection",ExpressionUUID->"b15a9a55-2af5-46c4-8b59-f052f696403e"],
Cell[CellGroupData[{
Cell[130535, 2585, 235, 6, 32, "Item",ExpressionUUID->"5075021a-88e9-47df-8cca-1f7f0d258581"],
Cell[CellGroupData[{
Cell[130795, 2595, 653, 17, 28, "Subitem",ExpressionUUID->"4f3cabc1-cec2-4e2a-97c2-2d77370506c3"],
Cell[131451, 2614, 1368, 37, 27, "Subsubitem",ExpressionUUID->"1a5e20c8-0de4-4066-8510-655aa24346c8"]
}, Open  ]]
}, Open  ]],
Cell[132846, 2655, 246, 6, 32, "Item",ExpressionUUID->"90627775-8b9f-42eb-8617-768855a05240"],
Cell[CellGroupData[{
Cell[133117, 2665, 561, 14, 33, "Item",ExpressionUUID->"4f70930b-f6ab-4ed9-8b03-74767ceefe96"],
Cell[133681, 2681, 611, 15, 28, "Subitem",ExpressionUUID->"c8ca28ed-912e-404e-808e-0eeee273e735"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134329, 2701, 736, 16, 54, "Item",ExpressionUUID->"3d5b70d5-e1cf-4c66-b234-bbec10a86828"],
Cell[135068, 2719, 1062, 28, 71, "Input",ExpressionUUID->"a1e44315-55e1-4f9a-a894-bf73082fbb79"],
Cell[136133, 2749, 996, 26, 65, "Subitem",ExpressionUUID->"50aeec7c-b273-40b3-b776-1b1586e1c685"],
Cell[137132, 2777, 320, 7, 26, "Subitem",ExpressionUUID->"e9548caa-a197-4b86-b640-0b48b2eca48b"]
}, Open  ]],
Cell[137467, 2787, 221, 4, 32, "Item",ExpressionUUID->"6f0d8b3a-f4ce-4b58-af58-d33e584a9385"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137725, 2796, 224, 4, 54, "Subsection",ExpressionUUID->"bb88f1fa-0303-44fe-8065-7a6bbef2b38c"],
Cell[137952, 2802, 286, 7, 32, "Item",ExpressionUUID->"55b5a17f-3603-4e39-a6e5-51d15beaed7c"],
Cell[CellGroupData[{
Cell[138263, 2813, 195, 4, 32, "Item",ExpressionUUID->"b2e23eb0-7e23-4687-9b6c-d5ad9e236832"],
Cell[138461, 2819, 424, 9, 45, "Subitem",ExpressionUUID->"67f1e2d4-0120-4f11-8d66-1d405c837986"],
Cell[138888, 2830, 391, 9, 26, "Subitem",ExpressionUUID->"a254b360-7b9c-4d56-b477-c28f4cb3f6d1"],
Cell[139282, 2841, 249, 5, 26, "Subitem",ExpressionUUID->"0bdf6721-715d-4ec9-bc15-c6e7940ec18e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

