"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[674],{1152:function(e,t,a){a(7757),a(7294),a(9483),a(9669)},2790:function(e,t,a){var n=a(5068),r=a(7294),i=a(1146);r.Component},9430:function(e,t,a){a.r(t),a.d(t,{contentTitle:function(){return m},default:function(){return v},frontMatter:function(){return g},metadata:function(){return p},toc:function(){return y}});var n=a(7462),r=a(3366),i=a(7294),o=a(3905),l=(a(2790),a(1152),a(2543));function s(e,t){const a=e.module();return a.variable(t()).define(["md"],(function(e){return e`# Color Legend

A simple legend for a [color scale](/@d3/color-schemes). Supports [continuous](/@d3/continuous-scales), [sequential](/@d3/sequential-scales), [diverging](/@d3/diverging-scales), [quantize, quantile, threshold](/@d3/quantile-quantize-and-threshold-scales) and [ordinal](/@d3/d3-scaleordinal) scales. To use:

~~~js
import {Legend, Swatches} from "@d3/color-legend"
~~~

Then call the legend function as shown below. (For ordinal scales, also consider the swatches function.)`})),a.variable(t()).define(["Legend","d3"],(function(e,t){return e(t.scaleSequential([0,100],t.interpolateViridis),{title:"Temperature (\xb0F)"})})),a.variable(t()).define(["Legend","d3"],(function(e,t){return e(t.scaleSequentialSqrt([0,1],t.interpolateTurbo),{title:"Speed (kts)"})})),a.variable(t()).define(["Legend","d3"],(function(e,t){return e(t.scaleDiverging([-.1,0,.1],t.interpolatePiYG),{title:"Daily change",tickFormat:"+%"})})),a.variable(t()).define(["Legend","d3"],(function(e,t){return e(t.scaleDivergingSqrt([-.1,0,.1],t.interpolateRdBu),{title:"Daily change",tickFormat:"+%"})})),a.variable(t()).define(["Legend","d3"],(function(e,t){return e(t.scaleSequentialLog([1,100],t.interpolateBlues),{title:"Energy (joules)",ticks:10})})),a.variable(t()).define(["Legend","d3"],(function(e,t){return e(t.scaleSequentialQuantile(t.range(100).map((()=>Math.random()**2)),t.interpolateBlues),{title:"Quantile",tickFormat:".2f"})})),a.variable(t()).define(["Legend","d3"],(function(e,t){return e(t.scaleSqrt([-100,0,100],["blue","white","red"]),{title:"Temperature (\xb0C)"})})),a.variable(t()).define(["Legend","d3"],(function(e,t){return e(t.scaleQuantize([1,10],t.schemePurples[9]),{title:"Unemployment rate (%)"})})),a.variable(t()).define(["Legend","d3"],(function(e,t){return e(t.scaleQuantile(t.range(1e3).map(t.randomNormal(100,20)),t.schemeSpectral[9]),{title:"Height (cm)",tickFormat:".0f"})})),a.variable(t()).define(["Legend","d3"],(function(e,t){return e(t.scaleThreshold([2.5,3.1,3.5,3.9,6,7,8,9.5],t.schemeRdBu[9]),{title:"Unemployment rate (%)",tickSize:0})})),a.variable(t()).define(["Legend","d3"],(function(e,t){return e(t.scaleOrdinal(["<10","10-19","20-29","30-39","40-49","50-59","60-69","70-79","\u226580"],t.schemeSpectral[10]),{title:"Age (years)",tickSize:0})})),a.variable(t()).define(["md"],(function(e){return e`But wait, thereâ€™s more!

How about swatches for ordinal color scales? Both variable-width swatches and [column layout](https://developer.mozilla.org/en-US/docs/Web/CSS/columns) are supported.`})),a.variable(t()).define(["Swatches","d3"],(function(e,t){return e(t.scaleOrdinal(["blueberries","oranges","apples"],t.schemeCategory10))})),a.variable(t()).define(["Swatches","d3"],(function(e,t){return e(t.scaleOrdinal(["Wholesale and Retail Trade","Manufacturing","Leisure and hospitality","Business services","Construction","Education and Health","Government","Finance","Self-employed","Other"],t.schemeTableau10),{columns:"180px"})})),a.variable(t()).define(["md"],(function(e){return e`---

## Implementation`})),a.variable(t("Legend")).define("Legend",["d3"],(function(e){return function(t,{title:a,tickSize:n=6,width:r=320,height:i=44+n,marginTop:o=18,marginRight:l=0,marginBottom:s=16+n,marginLeft:c=0,ticks:d=r/64,tickFormat:u,tickValues:f}={}){function h(e,t=256){const a=document.createElement("canvas");a.width=t,a.height=1;const n=a.getContext("2d");for(let r=0;r<t;++r)n.fillStyle=e(r/(t-1)),n.fillRect(r,0,1,1);return a}const g=e.create("svg").attr("width",r).attr("height",i).attr("viewBox",[0,0,r,i]).style("overflow","visible").style("display","block");let m,p=e=>e.selectAll(".tick line").attr("y1",o+s-i);if(t.interpolate){const a=Math.min(t.domain().length,t.range().length);m=t.copy().rangeRound(e.quantize(e.interpolate(c,r-l),a)),g.append("image").attr("x",c).attr("y",o).attr("width",r-c-l).attr("height",i-o-s).attr("preserveAspectRatio","none").attr("xlink:href",h(t.copy().domain(e.quantize(e.interpolate(0,1),a))).toDataURL())}else if(t.interpolator){if(m=Object.assign(t.copy().interpolator(e.interpolateRound(c,r-l)),{range:()=>[c,r-l]}),g.append("image").attr("x",c).attr("y",o).attr("width",r-c-l).attr("height",i-o-s).attr("preserveAspectRatio","none").attr("xlink:href",h(t.interpolator()).toDataURL()),!m.ticks){if(void 0===f){const a=Math.round(d+1);f=e.range(a).map((n=>e.quantile(t.domain(),n/(a-1))))}"function"!=typeof u&&(u=e.format(void 0===u?",f":u))}}else if(t.invertExtent){const a=t.thresholds?t.thresholds():t.quantiles?t.quantiles():t.domain(),n=void 0===u?e=>e:"string"==typeof u?e.format(u):u;m=e.scaleLinear().domain([-1,t.range().length-1]).rangeRound([c,r-l]),g.append("g").selectAll("rect").data(t.range()).join("rect").attr("x",((e,t)=>m(t-1))).attr("y",o).attr("width",((e,t)=>m(t)-m(t-1))).attr("height",i-o-s).attr("fill",(e=>e)),f=e.range(a.length),u=e=>n(a[e],e)}else m=e.scaleBand().domain(t.domain()).rangeRound([c,r-l]),g.append("g").selectAll("rect").data(t.domain()).join("rect").attr("x",m).attr("y",o).attr("width",Math.max(0,m.bandwidth()-1)).attr("height",i-o-s).attr("fill",t),p=()=>{};return g.append("g").attr("transform",`translate(0,${i-s})`).call(e.axisBottom(m).ticks(d,"string"==typeof u?u:void 0).tickFormat("function"==typeof u?u:void 0).tickSize(n).tickValues(f)).call(p).call((e=>e.select(".domain").remove())).call((e=>e.append("text").attr("x",c).attr("y",o+s-i-6).attr("fill","currentColor").attr("text-anchor","start").attr("font-weight","bold").attr("class","title").text(a))),g.node()}})),a.variable(t("legend")).define("legend",["Legend"],(function(e){return function({color:t,...a}){return e(t,a)}})),a.variable(t("Swatches")).define("Swatches",["d3","htl"],(function(e,t){return function(a,{columns:n=null,format:r,unknown:i,swatchSize:o=15,swatchWidth:l=o,swatchHeight:s=o,marginLeft:c=0}={}){const d=`-swatches-${Math.random().toString(16).slice(2)}`,u=null==i?void 0:a.unknown(),f=null==u||u===e.scaleImplicit?[]:[u],h=a.domain().concat(f);return void 0===r&&(r=e=>e===u?i:e),null!==n?t.html`<div style="display: flex; align-items: center; margin-left: ${+c}px; min-height: 33px; font: 10px sans-serif;">
  <style>

.${d}-item {
  break-inside: avoid;
  display: flex;
  align-items: center;
  padding-bottom: 1px;
}

.${d}-label {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: calc(100% - ${+l}px - 0.5em);
}

.${d}-swatch {
  width: ${+l}px;
  height: ${+s}px;
  margin: 0 0.5em 0 0;
}

  </style>
  <div style=${{width:"100%",columns:n}}>${h.map((e=>{const n=`${r(e)}`;return t.html`<div class=${d}-item>
      <div class=${d}-swatch style=${{background:a(e)}}></div>
      <div class=${d}-label title=${n}>${n}</div>
    </div>`}))}
  </div>
</div>`:t.html`<div style="display: flex; align-items: center; min-height: 33px; margin-left: ${+c}px; font: 10px sans-serif;">
  <style>

.${d} {
  display: inline-flex;
  align-items: center;
  margin-right: 1em;
}

.${d}::before {
  content: "";
  width: ${+l}px;
  height: ${+s}px;
  margin-right: 0.5em;
  background: var(--color);
}

  </style>
  <div>${h.map((e=>t.html`<span class="${d}" style="--color: ${a(e)}">${r(e)}</span>`))}</div>`}})),a.variable(t("swatches")).define("swatches",["Swatches"],(function(e){return function({color:t,...a}){return e(t,a)}})),a}function c(e,t){const a=e.module();a.variable(t()).define(["md"],(function(e){return e`# Surface Energy - 3.001 Demo
#### Georgios Varnavides, Amina Matt, Craig Carter`})),a.variable(t()).define(["md"],(function(e){return e`Let's investigate this surface-energy effect by looking at larger interacting systems.
For example, some atoms on a square lattice.`})),a.variable(t("square_surface_energy")).define("square_surface_energy",["d3","DOM","chart_param","square_lattice","draw_nodes","colorScale","mutable static_bulk_energy"],(function(e,t,a,n,r,i,o){const l=e.select(t.svg(a.width,a.height)),s=n.map((e=>Object.create(e)));l.attr("viewBox",[-10,-10,20,20]),e.forceSimulation(s).force("lennard-jones-BH",e.forceLennardJonesPotential().theta(0)).alphaDecay(0).velocityDecay(0).dt(.0125).tick().stop();const[c,d]=r(l,s,null,!1,!1,i);return o.value=e.sum(s.map((e=>e.energy))),l.node()})),a.variable(t()).define(["legend","colorScale","chart_param"],(function(e,t,a){return e({color:t,title:"Lennard-Jones energy 2D",width:a.width/2})})),a.variable(t()).define(["md"],(function(e){return e`We've again colored each atom by their total energy, with red being 'higher' energy and dark blue being 'lower' energy. It's evident that the atoms on the surface have a higher energy! 

We can think about this by counting 'satisfied' and 'dangling' bonds. The atoms inside the 'bulk' of the particle all have 4 nearest neighbors (blue), the atoms on the edges of the particle have 3 nearest neighbors (green), while the atoms in the corners of the particle only have two nearest neighbors (orange).`})),a.variable(t()).define(["md"],(function(e){return e`### Surface energy anisotropy
We started with a square-particle above, and found that energy is related to its geometry and nearest-neighbour configurations.  

What can this tell us about the directional anisotropy of the particle's facets? E.g. are 90 degree facets higher or lower energy than 45 degree facets? Let's find out!`})),a.variable(t("surface_energy_slide_graphic")).define("surface_energy_slide_graphic",["d3","DOM","chart_param","theta_in_deg","slice_particle","square_lattice","draw_nodes","colorScale"],(function(e,t,a,n,r,i,o,l){const s=e.select(t.svg(a.width,a.height)),c=n/180*Math.PI,[d,u]=r(i,c);s.attr("viewBox",[-10,-10,20,20]),e.forceSimulation(d).force("lennard-jones-BH",e.forceLennardJonesPotential().theta(0)).alphaDecay(0).velocityDecay(0).dt(0).tick().stop(),e.forceSimulation(u).force("lennard-jones-BH",e.forceLennardJonesPotential().theta(0)).alphaDecay(0).velocityDecay(0).dt(0).tick().stop(),d.forEach((e=>{e.x-=Math.sin(c),e.y+=Math.cos(c)})),u.forEach((e=>{e.x+=Math.sin(c),e.y-=Math.cos(c)}));const[f,h]=o(s,[...d,...u],null,!1,!1,l);return s.append("line").style("stroke","black").style("stroke-width",.05).style("stroke-dasharray",.25).attr("x1",12.5*Math.cos(c)).attr("y1",12.5*Math.sin(c)).attr("x2",-12.5*Math.cos(c)).attr("y2",-12.5*Math.sin(c)),s.node()})),a.variable(t("viewof theta_in_deg")).define("viewof theta_in_deg",["Inputs"],(function(e){return e.range([-90,90],{label:"Slice angle",value:-30})})),a.variable(t("theta_in_deg")).define("theta_in_deg",["Generators","viewof theta_in_deg"],((e,t)=>e.input(t))),a.variable(t()).define(["md"],(function(e){return e`Try moving the slice angle slider above, which splits our square particle down the middle. Can you guess which angles will lead to higher/lower energy facets?

The surface energy is given by the additional energy the sliced particle has, as compared to the bulk energy of the particle before slicing:`})),a.variable(t()).define(["tex"],(function(e){return e.block`\frac{E_{\mathrm{particle}} - N E_{\mathrm{bulk}}}{2 A}`})),a.variable(t()).define(["tex","md"],(function(e,t){return t`where ${e`N`}, ${e`A`} are the number of particles and area of the cleaved surface respectively.  
We can write a function to compute the surface energy for a particular orientation:`})),a.variable(t()).define(["theta_in_deg","compute_average_energy","square_lattice","md"],(function(e,t,a,n){return n`For example cleaving along ${e}Â° leads to a (dimensionless) surface energy cost of ${t(a,e)}

\`\`\`javascript
compute_average_energy(square_lattice,theta_in_deg)
\`\`\`
${t(a,e)}`})),a.variable(t()).define(["md"],(function(e){return e`Let's do this for all angles in the range [-180Â°,180Â°] and plot the surface energy as a polar plot!`})),a.variable(t("surface_energy_plot")).define("surface_energy_plot",["Plot","surface_energy_data","polar_grid_data"],(function(e,t,a){return e.plot({x:{axis:null},y:{axis:null},marks:[e.ruleX([0],{stroke:"black"}),e.ruleY([0],{stroke:"black"}),e.dot(t,{x:"x",y:"y",fill:"steelblue",r:7.5}),e.line(a,{x:e=>5*e.x,y:e=>5*e.y,strokeDasharray:5,strokeWidth:1}),e.line(a,{x:e=>15*e.x,y:e=>15*e.y,strokeDasharray:5,strokeWidth:1}),e.line(a,{x:e=>25*e.x,y:e=>25*e.y,strokeDasharray:5,strokeWidth:1}),e.line(a,{x:e=>35*e.x,y:e=>35*e.y,strokeDasharray:5,strokeWidth:1}),e.line(a,{x:e=>45*e.x,y:e=>45*e.y,strokeDasharray:5,strokeWidth:1})],width:400,height:400,marginLeft:25,marginTop:25,marginRight:25,marginBottom:25})})),a.variable(t()).define(["md"],(function(e){return e`Note that:
1. Our surface energy plot has (as expected) square symmetry
2. 90Â° facets are indeed the lowest energy surfaces`})),a.variable(t()).define(["md"],(function(e){return e`### Lattice Instabilities
The square lattice we've constructed above however, cannot be stabilized purely by central forces (like the Lennard-Jones) and is mechanically unstable in 2D.

It turns out, any slight perturbation (here due to our surface-energy terms, but the same would also happen due to thermal fluctuations in large ('infinite') lattices), will lead to the atoms re-arranging in a 2D closed-packed arrangement!`})),a.variable(t("viewof restart_button_square")).define("viewof restart_button_square",["Inputs"],(function(e){return e.button("(re)Start Simulation")})),a.variable(t("restart_button_square")).define("restart_button_square",["Generators","viewof restart_button_square"],((e,t)=>e.input(t))),a.variable(t("square_instability_animation")).define("square_instability_animation",["d3","DOM","chart_param","square_lattice","restart_button_square","draw_nodes","colorScale","invalidation"],(function(e,t,a,n,r,i,o,l){const s=e.select(t.svg(a.width,a.height)),c=n.map((e=>Object.create(e))),d=r;let u=0;s.attr("viewBox",[-10,-10,20,20]);const f=e.forceSimulation(c).force("lennard-jones-BH",e.forceLennardJonesPotential().theta(.25).distanceMax(1.5)).alphaDecay(0).velocityDecay(0).dt(.0125),[h,g]=i(s,c,null,!1,!1,o);return f.on("tick",(()=>{(u++>250||0==d)&&f.stop(),h.attr("cx",(e=>e.x)).attr("cy",(e=>e.y)).attr("fill",(e=>o(e.energy)))})),l.then((()=>f.stop())),s.node()})),a.variable(t()).define(["legend","colorScale","chart_param"],(function(e,t,a){return e({color:t,title:"Lennard-Jones energy 2D",width:a.width/2})})),a.variable(t()).define(["md"],(function(e){return e`__Note:__ Most atoms (especially in the corners) have re-arranged themselves to have ~6 nearest neighbors!`})),a.variable(t()).define(["md"],(function(e){return e`---

---

---
`})),a.variable(t()).define(["md"],(function(e){return e`## Utility Functions`})),a.variable(t("d3")).define("d3",["require"],(function(e){return e("d3@6","d3-force-md@2.2.2")}));const n=e.module(s);return a.import("legend",n),a.variable(t("colorScale")).define("colorScale",["d3"],(function(e){return e.scaleSequential(e.interpolateTurbo).domain([-7,-2])})),a.variable(t("square_lattice")).define("square_lattice",(function(){return[...Array(289)].map(((e,t)=>({x:.975*(t%17-8),y:.975*(Math.floor(t/17)-8)})))})),a.variable(t("chart_param")).define("chart_param",(function(){return{width:900,height:500,margin:{top:10,right:10,bottom:10,left:10,center:150}}})),a.variable(t("draw_nodes")).define("draw_nodes",(function(){return(e,t,a,n,r,i)=>{null==i&&(i=e=>null);let o=null;a&&(o=e.selectAll(".edge").data(a).enter().append("line").classed("edge",!0).attr("x1",(e=>t[e.source].x)).attr("y1",(e=>t[e.source].y)).attr("x2",(e=>t[e.target].x)).attr("y2",(e=>t[e.target].y)).style("stroke",r?"#bbb":"none"));return[e.selectAll(".node").data(t).enter().append("circle").classed("node",!0).attr("cx",(e=>e.x)).attr("cy",(e=>e.y)).attr("fill",(e=>i(e.energy))).attr("r",(e=>n?e.r:.5)),o]}})),a.define("initial static_bulk_energy",(function(){return null})),a.variable(t("mutable static_bulk_energy")).define("mutable static_bulk_energy",["Mutable","initial static_bulk_energy"],((e,t)=>new e(t))),a.variable(t("static_bulk_energy")).define("static_bulk_energy",["mutable static_bulk_energy"],(e=>e.generator)),a.variable(t("slice_particle")).define("slice_particle",(function(){return(e,t)=>{const a=e.map((e=>Object.create(e)));let n,r;return n=a.filter((e=>Math.tan(t%Math.PI)*(e.x+1e-6)<e.y)),r=a.filter((e=>!n.includes(e))),[n,r]}})),a.variable(t("compute_average_energy")).define("compute_average_energy",["slice_particle","square_lattice","d3","static_bulk_energy"],(function(e,t,a,n){return(r,i)=>{const o=i/180*Math.PI,[l,s]=e(t,o);return a.forceSimulation(l).force("lennard-jones-BH",a.forceLennardJonesPotential().theta(0)).alphaDecay(0).velocityDecay(0).dt(0).tick().stop(),a.forceSimulation(s).force("lennard-jones-BH",a.forceLennardJonesPotential().theta(0)).alphaDecay(0).velocityDecay(0).dt(0).tick().stop(),(a.sum([...l,...s].map((e=>e.energy)))-n)/2}})),a.variable(t("surface_energy_data_quarter")).define("surface_energy_data_quarter",["d3","compute_average_energy","square_lattice"],(function(e,t,a){return e.range(0,90,7.5).map((e=>({theta:e,energy:t(a,e)})))})),a.variable(t("surface_energy_data")).define("surface_energy_data",["d3","surface_energy_data_quarter"],(function(e,t){return e.range(0,360,7.5).map(((e,a)=>({x:t[a%t.length].energy*Math.cos(e*Math.PI/180),y:t[a%t.length].energy*Math.sin(e*Math.PI/180)})))})),a.variable(t("polar_grid_data")).define("polar_grid_data",["d3"],(function(e){return e.range(0,360,1).map((e=>({x:Math.cos(e*Math.PI/180),y:Math.sin(e*Math.PI/180)})))})),a}var d=function(){var e=(0,i.useRef)();return(0,i.useEffect)((function(){var t=new l.r_;return t.module(c,l.lj.into(e.current)),function(){return t.dispose()}}),[]),i.createElement(i.Fragment,null,i.createElement("div",{ref:e}),i.createElement("p",null,"Credit: ",i.createElement("a",{href:"https://observablehq.com/@gvarnavi/surfarce-energy-lj"},"Surface Energy - 3.001 Demo by Georgios Varnavides")))},u=a(9877),f=a(8215),h=["components"],g={id:"surface-energy-lj",sidebar_position:3,title:"Surface Energy",hide_title:!0},m=void 0,p={unversionedId:"demo/surface-energy-lj",id:"demo/surface-energy-lj",title:"Surface Energy",description:"",source:"@site/docs/3001-demo/surface-energy.mdx",sourceDirName:"3001-demo",slug:"/demo/surface-energy-lj",permalink:"/3029/docs/demo/surface-energy-lj",editUrl:"https://github.com/dmse-mit/3029/edit/main/website/docs/3001-demo/surface-energy.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"surface-energy-lj",sidebar_position:3,title:"Surface Energy",hide_title:!0},sidebar:"tutorialSidebar",previous:{title:"1D Lattice Vibrations",permalink:"/3029/docs/demo/lattice-vibrations-lj"},next:{title:"Molecular Dynamics",permalink:"/3029/docs/demo/molecular-dynamics-lj"}},y=[],b={toc:y};function v(e){var t=e.components,a=(0,r.Z)(e,h);return(0,o.kt)("wrapper",(0,n.Z)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(u.Z,{lazy:!0,mdxType:"Tabs"},(0,o.kt)(f.Z,{value:"observable",label:"JS - Observable",default:!0,mdxType:"TabItem"},(0,o.kt)(d,{mdxType:"SurfaceEnergyLj"}))))}v.isMDXComponent=!0}}]);