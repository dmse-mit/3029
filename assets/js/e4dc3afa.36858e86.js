"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[350],{3891:function(e,t,i){i.r(t),i.d(t,{contentTitle:function(){return p},default:function(){return g},frontMatter:function(){return h},metadata:function(){return v},toc:function(){return b}});var n=i(7462),a=i(3366),r=i(7294),o=i(3905),l=(i(2790),i(8306),i(2543));function s(e,t){const i=e.module();return i.variable(t()).define(["md"],(function(e){return e`# Color Legend

A simple legend for a [color scale](/@d3/color-schemes). Supports [continuous](/@d3/continuous-scales), [sequential](/@d3/sequential-scales), [diverging](/@d3/diverging-scales), [quantize, quantile, threshold](/@d3/quantile-quantize-and-threshold-scales) and [ordinal](/@d3/d3-scaleordinal) scales. To use:

~~~js
import {Legend, Swatches} from "@d3/color-legend"
~~~

Then call the legend function as shown below. (For ordinal scales, also consider the swatches function.)`})),i.variable(t()).define(["Legend","d3"],(function(e,t){return e(t.scaleSequential([0,100],t.interpolateViridis),{title:"Temperature (\xb0F)"})})),i.variable(t()).define(["Legend","d3"],(function(e,t){return e(t.scaleSequentialSqrt([0,1],t.interpolateTurbo),{title:"Speed (kts)"})})),i.variable(t()).define(["Legend","d3"],(function(e,t){return e(t.scaleDiverging([-.1,0,.1],t.interpolatePiYG),{title:"Daily change",tickFormat:"+%"})})),i.variable(t()).define(["Legend","d3"],(function(e,t){return e(t.scaleDivergingSqrt([-.1,0,.1],t.interpolateRdBu),{title:"Daily change",tickFormat:"+%"})})),i.variable(t()).define(["Legend","d3"],(function(e,t){return e(t.scaleSequentialLog([1,100],t.interpolateBlues),{title:"Energy (joules)",ticks:10})})),i.variable(t()).define(["Legend","d3"],(function(e,t){return e(t.scaleSequentialQuantile(t.range(100).map((()=>Math.random()**2)),t.interpolateBlues),{title:"Quantile",tickFormat:".2f"})})),i.variable(t()).define(["Legend","d3"],(function(e,t){return e(t.scaleSqrt([-100,0,100],["blue","white","red"]),{title:"Temperature (\xb0C)"})})),i.variable(t()).define(["Legend","d3"],(function(e,t){return e(t.scaleQuantize([1,10],t.schemePurples[9]),{title:"Unemployment rate (%)"})})),i.variable(t()).define(["Legend","d3"],(function(e,t){return e(t.scaleQuantile(t.range(1e3).map(t.randomNormal(100,20)),t.schemeSpectral[9]),{title:"Height (cm)",tickFormat:".0f"})})),i.variable(t()).define(["Legend","d3"],(function(e,t){return e(t.scaleThreshold([2.5,3.1,3.5,3.9,6,7,8,9.5],t.schemeRdBu[9]),{title:"Unemployment rate (%)",tickSize:0})})),i.variable(t()).define(["Legend","d3"],(function(e,t){return e(t.scaleOrdinal(["<10","10-19","20-29","30-39","40-49","50-59","60-69","70-79","\u226580"],t.schemeSpectral[10]),{title:"Age (years)",tickSize:0})})),i.variable(t()).define(["md"],(function(e){return e`But wait, thereâ€™s more!

How about swatches for ordinal color scales? Both variable-width swatches and [column layout](https://developer.mozilla.org/en-US/docs/Web/CSS/columns) are supported.`})),i.variable(t()).define(["Swatches","d3"],(function(e,t){return e(t.scaleOrdinal(["blueberries","oranges","apples"],t.schemeCategory10))})),i.variable(t()).define(["Swatches","d3"],(function(e,t){return e(t.scaleOrdinal(["Wholesale and Retail Trade","Manufacturing","Leisure and hospitality","Business services","Construction","Education and Health","Government","Finance","Self-employed","Other"],t.schemeTableau10),{columns:"180px"})})),i.variable(t()).define(["md"],(function(e){return e`---

## Implementation`})),i.variable(t("Legend")).define("Legend",["d3"],(function(e){return function(t,{title:i,tickSize:n=6,width:a=320,height:r=44+n,marginTop:o=18,marginRight:l=0,marginBottom:s=16+n,marginLeft:c=0,ticks:d=a/64,tickFormat:u,tickValues:m}={}){function f(e,t=256){const i=document.createElement("canvas");i.width=t,i.height=1;const n=i.getContext("2d");for(let a=0;a<t;++a)n.fillStyle=e(a/(t-1)),n.fillRect(a,0,1,1);return i}const h=e.create("svg").attr("width",a).attr("height",r).attr("viewBox",[0,0,a,r]).style("overflow","visible").style("display","block");let p,v=e=>e.selectAll(".tick line").attr("y1",o+s-r);if(t.interpolate){const i=Math.min(t.domain().length,t.range().length);p=t.copy().rangeRound(e.quantize(e.interpolate(c,a-l),i)),h.append("image").attr("x",c).attr("y",o).attr("width",a-c-l).attr("height",r-o-s).attr("preserveAspectRatio","none").attr("xlink:href",f(t.copy().domain(e.quantize(e.interpolate(0,1),i))).toDataURL())}else if(t.interpolator){if(p=Object.assign(t.copy().interpolator(e.interpolateRound(c,a-l)),{range:()=>[c,a-l]}),h.append("image").attr("x",c).attr("y",o).attr("width",a-c-l).attr("height",r-o-s).attr("preserveAspectRatio","none").attr("xlink:href",f(t.interpolator()).toDataURL()),!p.ticks){if(void 0===m){const i=Math.round(d+1);m=e.range(i).map((n=>e.quantile(t.domain(),n/(i-1))))}"function"!=typeof u&&(u=e.format(void 0===u?",f":u))}}else if(t.invertExtent){const i=t.thresholds?t.thresholds():t.quantiles?t.quantiles():t.domain(),n=void 0===u?e=>e:"string"==typeof u?e.format(u):u;p=e.scaleLinear().domain([-1,t.range().length-1]).rangeRound([c,a-l]),h.append("g").selectAll("rect").data(t.range()).join("rect").attr("x",((e,t)=>p(t-1))).attr("y",o).attr("width",((e,t)=>p(t)-p(t-1))).attr("height",r-o-s).attr("fill",(e=>e)),m=e.range(i.length),u=e=>n(i[e],e)}else p=e.scaleBand().domain(t.domain()).rangeRound([c,a-l]),h.append("g").selectAll("rect").data(t.domain()).join("rect").attr("x",p).attr("y",o).attr("width",Math.max(0,p.bandwidth()-1)).attr("height",r-o-s).attr("fill",t),v=()=>{};return h.append("g").attr("transform",`translate(0,${r-s})`).call(e.axisBottom(p).ticks(d,"string"==typeof u?u:void 0).tickFormat("function"==typeof u?u:void 0).tickSize(n).tickValues(m)).call(v).call((e=>e.select(".domain").remove())).call((e=>e.append("text").attr("x",c).attr("y",o+s-r-6).attr("fill","currentColor").attr("text-anchor","start").attr("font-weight","bold").attr("class","title").text(i))),h.node()}})),i.variable(t("legend")).define("legend",["Legend"],(function(e){return function({color:t,...i}){return e(t,i)}})),i.variable(t("Swatches")).define("Swatches",["d3","htl"],(function(e,t){return function(i,{columns:n=null,format:a,unknown:r,swatchSize:o=15,swatchWidth:l=o,swatchHeight:s=o,marginLeft:c=0}={}){const d=`-swatches-${Math.random().toString(16).slice(2)}`,u=null==r?void 0:i.unknown(),m=null==u||u===e.scaleImplicit?[]:[u],f=i.domain().concat(m);return void 0===a&&(a=e=>e===u?r:e),null!==n?t.html`<div style="display: flex; align-items: center; margin-left: ${+c}px; min-height: 33px; font: 10px sans-serif;">
  <style>

.${d}-item {
  break-inside: avoid;
  display: flex;
  align-items: center;
  padding-bottom: 1px;
}

.${d}-label {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: calc(100% - ${+l}px - 0.5em);
}

.${d}-swatch {
  width: ${+l}px;
  height: ${+s}px;
  margin: 0 0.5em 0 0;
}

  </style>
  <div style=${{width:"100%",columns:n}}>${f.map((e=>{const n=`${a(e)}`;return t.html`<div class=${d}-item>
      <div class=${d}-swatch style=${{background:i(e)}}></div>
      <div class=${d}-label title=${n}>${n}</div>
    </div>`}))}
  </div>
</div>`:t.html`<div style="display: flex; align-items: center; min-height: 33px; margin-left: ${+c}px; font: 10px sans-serif;">
  <style>

.${d} {
  display: inline-flex;
  align-items: center;
  margin-right: 1em;
}

.${d}::before {
  content: "";
  width: ${+l}px;
  height: ${+s}px;
  margin-right: 0.5em;
  background: var(--color);
}

  </style>
  <div>${f.map((e=>t.html`<span class="${d}" style="--color: ${i(e)}">${a(e)}</span>`))}</div>`}})),i.variable(t("swatches")).define("swatches",["Swatches"],(function(e){return function({color:t,...i}){return e(t,i)}})),i}function c(e,t){const i=e.module();i.variable(t()).define(["md"],(function(e){return e`# Lattice Vibrations - 3.001 Demo
#### Georgios Varnavides, Amina Matt, Craig Carter`})),i.variable(t()).define(["md"],(function(e){return e`Let's start by looking at a (finite) one-dimensional lattice with fixed ends. We will consider two treatments:
1. Small amplitude vibrations
  - atoms interact only with their nearest neighbors
  - as if they're masses attached with springs (Harmonic approximation)
2. Larger amplitude vibrations (atoms interact via the Lennard-Jones potential)`})),i.variable(t()).define(["num_of_atoms","oscillation_magnitude_static","md"],(function(e,t,i){return i`### 1. Harmonic Approximation
We make a one-dimensional lattice with ${e+1} atoms and start the simulation by displacing the atoms using an initial sine-wave pattern.

__Note:__ We're exaggerating the displacements by a factor of ${Math.round(1/t)} for visual clarity.`})),i.variable(t("viewof restart_button_1d")).define("viewof restart_button_1d",["Inputs"],(function(e){return e.button("(re)Start Simulation")})),i.variable(t("restart_button_1d")).define("restart_button_1d",["Generators","viewof restart_button_1d"],((e,t)=>e.input(t))),i.variable(t("harmonic_animation")).define("harmonic_animation",["d3","DOM","chart_param","one_dimensional_lattice","one_dimensional_lattice_links","restart_button_1d","num_of_atoms","draw_nodes","oscillation_direction","oscillation_magnitude_static","invalidation"],(function(e,t,i,n,a,r,o,l,s,c,d){const u=e.select(t.svg(i.width,i.width/8)),m=n.map((e=>Object.create(e))),f=a.map((e=>Object.create(e))),h=r;let p=0;u.attr("viewBox",[-2.5,-2.5,o+5,5]);const v=e.forceSimulation(m).force("link",e.forceLink(f).distance(1).iterations(0)).alphaDecay(0).velocityDecay(0).dt(.5),[b,_]=l(u,m,null,!1,!1);return b.attr("opacity",(e=>null==e.fx?.5:1)).attr("fill",(e=>null==e.fx?"gray":"black")),v.on("tick",(()=>{(p++>750||0==h)&&v.stop(),"horizontal"==s?b.attr("cx",(e=>e.x+(e.x-e.index)/c)).attr("cy",(e=>e.y)):b.attr("cx",(e=>e.index)).attr("cy",(e=>(e.x-e.index)/c))})),d.then((()=>v.stop())),u.node()})),i.variable(t()).define(["md"],(function(e){return e`We chose an initial sine-wave displacement in anticipation of the behaviour being periodic in space (and time). In particular, we moved each atom from its equilibrium position by the function:`})),i.variable(t("sine_wave_plot")).define("sine_wave_plot",["Plot","chart_param","sine_wave"],(function(e,t,i){return e.plot({width:t.width,height:t.width/8,marginRight:40,x:{grid:!0,label:"Normalized position along chain \u2192"},y:{grid:!0,label:"\u2191 Normalized displacement"},marks:[e.line(i,{x:"x",y:"y"})]})})),i.variable(t()).define(["md"],(function(e){return e`What if we started with fewer/more 'nodes' along our initial displacement?
Change the value fo the sub-harmonic mode below to see how this influences the vibrations!`})),i.variable(t("viewof sub_harmonic")).define("viewof sub_harmonic",["Inputs"],(function(e){return e.range([1,6],{step:1,label:"Sub-harmonic",value:3})})),i.variable(t("sub_harmonic")).define("sub_harmonic",["Generators","viewof sub_harmonic"],((e,t)=>e.input(t))),i.variable(t()).define(["md"],(function(e){return e`The visualization using horizontal displacements is hard to see. Let's instead plot the displacements of each atom away from its equilibrium position vertically. 

__Note:__ The physics is still in the horizontal direction!`})),i.variable(t("viewof oscillation_direction")).define("viewof oscillation_direction",["Inputs"],(function(e){return e.radio(["horizontal","vertical"],{label:"Oscillation direction",value:"horizontal"})})),i.variable(t("oscillation_direction")).define("oscillation_direction",["Generators","viewof oscillation_direction"],((e,t)=>e.input(t))),i.variable(t()).define(["md"],(function(e){return e`### Dispersion Relations
We were running the above simulation for a fixed time, but notice how the behaviour is periodic in time. Let's write a helper function to extract that period and stop the simulation.

The function __compute_single_period()__ calculates one period of oscillation given a particular sub-harmonic mode number:`})),i.variable(t()).define(["compute_single_period","num_of_atoms","sub_harmonic","md"],(function(e,t,i,n){return n`For example it takes ${e(t,i)} (dimensionless) time-units to do a single periodic oscillation for the ${i}th sub-harmonic mode for ${t} atoms!

\`\`\`javascript
compute_single_period(num_of_atoms,sub_harmonic)
\`\`\`
${e(t,i)}`})),i.variable(t()).define(["num_of_atoms","tex","md"],(function(e,t,i){return i`Let's do this for all sub-harmonic modes in the range [${-e/2-5},${e+5}]   
and plot the frequency ${t`\left(\frac{2\pi}{\mathrm{period}}\right)`} against the wave-vector ${t`\left( \frac{2 \pi \times \mathrm{sub-harmonic\;mode}}{\mathrm{number\;of\;atoms}}\right)`}  
for each sub-harmonic mode:`})),i.variable(t("viewof dispersion_plot")).define("viewof dispersion_plot",["mouseover_selection","vl","dispersion_data","chart_param"],(function(e,t,i,n){let a=e;return t.markCircle({size:50}).data(i).params(a).encode(t.x().fieldQ("wavevector"),t.y().fieldQ("frequency"),t.color().if(a,t.value("steelblue")).value("lightgrey")).width(n.width/2).render()})),i.variable(t("dispersion_plot")).define("dispersion_plot",["Generators","viewof dispersion_plot"],((e,t)=>e.input(t))),i.variable(t()).define(["md"],(function(e){return e`What we just plotted is called a dispersion relation. 

Let's get a sense of what it means for our lattice vibrations. Try hovering over one of the points in the dispersion plot and notice how the wavelength (inversely related to the wavevector) and frequency (inversely related to the period) change below!`})),i.variable(t("dispersion_animation")).define("dispersion_animation",["d3","DOM","chart_param","make_one_dimensional_lattice","num_of_atoms","dispersion_subharmonic","oscillation_magnitude_static","draw_nodes","oscillation_direction","oscillation_magnitude","invalidation"],(function(e,t,i,n,a,r,o,l,s,c,d){const u=e.select(t.svg(i.width,i.width/8)),[m,f]=n(a,r,o);let h=0;u.attr("viewBox",[-2.5,-2.5,a+5,5]);const p=e.forceSimulation(m).force("link",e.forceLink(f).distance(1).iterations(0)).alphaDecay(0).velocityDecay(0).dt(.25),[v,b]=l(u,m,null,!1,!1);return v.attr("opacity",(e=>null==e.fx?.5:1)).attr("fill",(e=>null==e.fx?"gray":"black")),p.on("tick",(()=>{h++>750&&p.stop(),"horizontal"==s?v.attr("cx",(e=>e.x+(e.x-e.index)/c)).attr("cy",(e=>e.y)):v.attr("cx",(e=>e.index)).attr("cy",(e=>(e.x-e.index)/c))})),d.then((()=>p.stop())),u.node()})),i.variable(t()).define(["dispersion_subharmonic","tex","md"],(function(e,t,i){return i`Sub-harmonic mode:${e}

The dispersion behaviour is periodic in the domain ${t`\left(-\frac{\pi}{a},\frac{\pi}{a}\right)`}, where _a_ is the lattice spacing (${t`a=1`} in our case).

This periodic domain is called the __first Brillouin zone__ and it turns out to be a very useful property in materials science.`})),i.variable(t()).define(["md"],(function(e){return e`### 2. Lennard Jones Vibrations
Let's run the same 1D-lattice simulation using the Lennard-Jones potential instead.
This means our particles interact according to second, third, etc. nearest neighbor interactions - making the behaviour nonlinear!`})),i.variable(t("viewof restart_button_1d_lj")).define("viewof restart_button_1d_lj",["Inputs"],(function(e){return e.button("(re)Start Simulation")})),i.variable(t("restart_button_1d_lj")).define("restart_button_1d_lj",["Generators","viewof restart_button_1d_lj"],((e,t)=>e.input(t))),i.variable(t("lennard_jones_animation")).define("lennard_jones_animation",["d3","DOM","chart_param","restart_button_1d_lj","make_one_dimensional_lattice","num_of_atoms","sub_harmonic","oscillation_magnitude","draw_nodes","colorScale1D","oscillation_direction","invalidation"],(function(e,t,i,n,a,r,o,l,s,c,d,u){const m=e.select(t.svg(i.width,i.height/3)),f=n,[h,p]=a(r,o,l);let v=0;m.attr("viewBox",[-2.5,-2.5,r+5,5]);const b=e.forceSimulation(h).force("lennard-jones-BH",e.forceLennardJonesPotential().theta(.25)).alphaDecay(0).velocityDecay(0).dt(.025),[_,g]=s(m,h,null,!1,!1,c);return b.on("tick",(()=>{(v++>750||0==f)&&b.stop(),"horizontal"==d?_.attr("cx",(e=>e.x+(e.x-e.index)/l)).attr("cy",(e=>e.y)).attr("fill",(e=>c(e.energy))):_.attr("cx",(e=>e.index)).attr("cy",(e=>(e.x-e.index)/l)).attr("fill",(e=>c(e.energy)))})),u.then((()=>b.stop())),m.node()})),i.variable(t("viewof oscillation_magnitude")).define("viewof oscillation_magnitude",["Inputs"],(function(e){return e.range([.0125,.05],{step:.0125,label:"Oscillation Magnitude",value:.0125})})),i.variable(t("oscillation_magnitude")).define("oscillation_magnitude",["Generators","viewof oscillation_magnitude"],((e,t)=>e.input(t))),i.variable(t()).define(["md"],(function(e){return e`The larger the initial oscillation magnitude - the further away from the harmonic approximation we sample, and thus the more nonlinear behaviour. Try running the simulation above using larger and larger oscillation magnitudes.  

__Note:__ The actual oscillation is normalized to be the same in all cases (to allow easier comparison), but notice how the vibrations quickly become nonlinear for larger values!`})),i.variable(t()).define(["legend","colorScale1D","chart_param"],(function(e,t,i){return e({color:t,title:"Lennard-Jones energy 1D",width:i.width/2})})),i.variable(t()).define(["md"],(function(e){return e`__Note:__ Finally, notice we've colored each atom according to their Lennard-Jones potential energy.
The colors fluctuate as atoms move from high (red) to low (blue) energies, but our fixed edge atoms appear to be mostly in a state of higher energy.

This because they only have one nearest neighbor (as opposed to two like the 'bulk' atoms), and give us a hint as to the physical origin of surface tension!`})),i.variable(t()).define(["md"],(function(e){return e`---

---

---
`})),i.variable(t()).define(["md"],(function(e){return e`## Utility Functions`})),i.variable(t("d3")).define("d3",["require"],(function(e){return e("d3@6","d3-force-md@2.2.2")}));const n=e.module(s);return i.import("legend",n),i.variable(t("sine_wave")).define("sine_wave",["sub_harmonic"],(function(e){return[...Array(201)].map(((t,i)=>({x:i/200,y:Math.sin(e*(2*Math.PI*i)/200)})))})),i.variable(t("num_of_atoms")).define("num_of_atoms",(function(){return 50})),i.variable(t("oscillation_magnitude_static")).define("oscillation_magnitude_static",(function(){return.0125})),i.variable(t("one_dimensional_lattice")).define("one_dimensional_lattice",["num_of_atoms","oscillation_magnitude_static","sub_harmonic"],(function(e,t,i){return[...Array(e+1)].map(((n,a)=>({x:a+t*Math.sin(i*(2*Math.PI*a)/e),y:0,fy:0}))).map((t=>0==t.x||t.x==e?{x:t.x,fx:t.x,y:t.y,fy:t.y}:t))})),i.variable(t("one_dimensional_lattice_links")).define("one_dimensional_lattice_links",["num_of_atoms"],(function(e){return[...Array(e)].map(((e,t)=>({source:t,target:t+1})))})),i.variable(t("make_one_dimensional_lattice")).define("make_one_dimensional_lattice",(function(){return function(e,t,i){return[[...Array(e+1)].map(((n,a)=>({x:a+i*Math.sin(t*(2*Math.PI*a)/e),y:0,fy:0}))).map((t=>0==t.x||t.x==e?{x:t.x,fx:t.x,y:t.y,fy:t.y}:t)),[...Array(e)].map(((e,t)=>({source:t,target:t+1})))]}})),i.variable(t("chart_param")).define("chart_param",(function(){return{width:900,height:500,margin:{top:10,right:10,bottom:10,left:10,center:150}}})),i.variable(t("draw_nodes")).define("draw_nodes",(function(){return(e,t,i,n,a,r)=>{null==r&&(r=e=>null);let o=null;i&&(o=e.selectAll(".edge").data(i).enter().append("line").classed("edge",!0).attr("x1",(e=>t[e.source].x)).attr("y1",(e=>t[e.source].y)).attr("x2",(e=>t[e.target].x)).attr("y2",(e=>t[e.target].y)).style("stroke",a?"#bbb":"none"));return[e.selectAll(".node").data(t).enter().append("circle").classed("node",!0).attr("cx",(e=>e.x)).attr("cy",(e=>e.y)).attr("fill",(e=>r(e.energy))).attr("r",(e=>n?e.r:.5)),o]}})),i.variable(t("compute_single_period")).define("compute_single_period",["oscillation_magnitude_static","make_one_dimensional_lattice","d3"],(function(e,t,i){return function(n,a,r,o,l){if(0==a||Math.abs(a)==n)return 1/0;Math.abs(a)==n/2&&(a+=1),null==r&&(r=e),null==o&&(o=.0075),null==l&&(l=5e3);let s,c,d=[r],u=0;[s,c]=t(n,a,r);const m=s.map((e=>Object.create(e))),f=c.map((e=>Object.create(e))),h=i.forceSimulation(m).force("link",i.forceLink(f).distance(1).iterations(0)).alphaDecay(0).velocityDecay(0).dt(o);do{u++,h.tick();const e=m.map((e=>e.x-e.index));d.push(e.reduce(((e,t)=>e+t*t)))}while(u<l&&d[u]-d[u-1]<0);return h.stop(),(u-1)*o}})),i.variable(t("dispersion_data")).define("dispersion_data",["d3","num_of_atoms","compute_single_period"],(function(e,t,i){return e.range(-t/2-5,t+5).map((e=>({wavevector:2*Math.PI*e/t,frequency:2*Math.PI/i(t,e)})))})),i.variable(t("mouseover_selection")).define("mouseover_selection",["vl"],(function(e){return e.selectPoint().on("mouseover").fields("wavevector").nearest("true")})),i.variable(t("dispersion_mouseover")).define("dispersion_mouseover",["Generators","mouseover_selection","dispersion_plot"],(function(e,t,i){return e.observe((e=>{e([]);const n=t.name(),a=(t,i)=>e(i?.vlPoint?.or??[]);return i.addSignalListener(n,a),()=>i.removeSignalListener(n,a)[0]}))})),i.variable(t("dispersion_subharmonic")).define("dispersion_subharmonic",["dispersion_mouseover","num_of_atoms"],(function(e,t){return 0==e.length?0:"wavevector"in e[0]?Math.round(e[0].wavevector*t/(2*Math.PI)):0})),i.variable(t("colorScale1D")).define("colorScale1D",["d3"],(function(e){return e.scaleSequential(e.interpolateTurbo).domain([-3.075,-3.025])})),i}var d=function(){var e=(0,r.useRef)();return(0,r.useEffect)((function(){var t=new l.r_;return t.module(c,l.lj.into(e.current)),function(){return t.dispose()}}),[]),r.createElement(r.Fragment,null,r.createElement("div",{ref:e}),r.createElement("p",null,"Credit: ",r.createElement("a",{href:"https://observablehq.com/@gvarnavi/lattice-vibrations-lj"},"Lattice Vibrations - 3.001 Demo by Georgios Varnavides")))},u=i(9877),m=i(8215),f=["components"],h={id:"lattice-vibrations-lj",sidebar_position:2,title:"1D Lattice Vibrations",hide_title:!0},p=void 0,v={unversionedId:"demo/lattice-vibrations-lj",id:"demo/lattice-vibrations-lj",title:"1D Lattice Vibrations",description:"",source:"@site/docs/3001-demo/lattice-vibrations.mdx",sourceDirName:"3001-demo",slug:"/demo/lattice-vibrations-lj",permalink:"/3029/docs/demo/lattice-vibrations-lj",editUrl:"https://github.com/dmse-mit/3029/edit/main/website/docs/3001-demo/lattice-vibrations.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"lattice-vibrations-lj",sidebar_position:2,title:"1D Lattice Vibrations",hide_title:!0},sidebar:"tutorialSidebar",previous:{title:"Lennard Jones Potential",permalink:"/3029/docs/demo/lennard-jones-potential"},next:{title:"Surface Energy",permalink:"/3029/docs/demo/surface-energy-lj"}},b=[],_={toc:b};function g(e){var t=e.components,i=(0,a.Z)(e,f);return(0,o.kt)("wrapper",(0,n.Z)({},_,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(u.Z,{lazy:!0,mdxType:"Tabs"},(0,o.kt)(m.Z,{value:"observable",label:"JS - Observable",default:!0,mdxType:"TabItem"},(0,o.kt)(d,{mdxType:"LatticeVibrationsLj"}))))}g.isMDXComponent=!0}}]);