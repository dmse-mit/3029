(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    454599,       9451]
NotebookOptionsPosition[    433490,       9081]
NotebookOutlinePosition[    434010,       9099]
CellTagsIndexPosition[    433967,       9096]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["3.029 Spring 2022\[LineSeparator]Lectures 11 - 03/07/2022", "Subtitle",
 CellChangeTimes->{{3.8525512993398438`*^9, 3.8525513206118402`*^9}, {
   3.852652054138073*^9, 3.8526520591301193`*^9}, {3.853194369726288*^9, 
   3.8531943739664793`*^9}, 3.8531971130005827`*^9, {3.853361889945813*^9, 
   3.853361893353859*^9}, {3.854455749568426*^9, 3.8544557604776297`*^9}, {
   3.8545621484661007`*^9, 3.8545621501697083`*^9}, {3.85499650158072*^9, 
   3.854996504060568*^9}, {3.855176893175762*^9, 3.855176906151746*^9}, {
   3.855604699389501*^9, 
   3.855604707177799*^9}},ExpressionUUID->"4381c544-06bb-45cb-b796-\
8a5b9e6f5286"],

Cell[CellGroupData[{

Cell["Polymer Reptation", "Chapter",
 CellChangeTimes->{{3.852551340964005*^9, 3.852551346980482*^9}, 
   3.8526520737398577`*^9, {3.853194378006518*^9, 3.853194381142681*^9}, {
   3.853361935778483*^9, 3.853361942498363*^9}, {3.854456274982847*^9, 
   3.854456277927383*^9}, {3.8544565045315533`*^9, 3.854456514672267*^9}, 
   3.854562160779923*^9, {3.854996506556843*^9, 3.854996508477077*^9}, {
   3.854996641253805*^9, 3.854996643918687*^9}, {3.855604708758831*^9, 
   3.855604727103332*^9}, {3.855660670350954*^9, 
   3.855660672414981*^9}},ExpressionUUID->"e381d1e9-cca8-4125-b6a7-\
989ce835ed6e"],

Cell["\<\
Last week, we saw how we could model \[OpenCurlyDoubleQuote]stiff\
\[CloseCurlyDoubleQuote] polymers as correlated random walks\
\>", "Item",
 CellChangeTimes->{
  3.854477893774478*^9, {3.854478372417194*^9, 3.854478373564378*^9}, {
   3.854534827207877*^9, 3.854534844513954*^9}, {3.854996537677141*^9, 
   3.854996605550372*^9}, {3.855042873617885*^9, 3.855042874969273*^9}, {
   3.855604739271578*^9, 
   3.855604794684745*^9}},ExpressionUUID->"61eea390-b8f3-43d8-830b-\
8e45ed101a45"],

Cell[CellGroupData[{

Cell["\<\
This week, we\[CloseCurlyQuote]ll extend our exploration to polymer dynamics \
and growth\
\>", "Item",
 CellChangeTimes->{
  3.854477893774478*^9, {3.854478372417194*^9, 3.854478373564378*^9}, {
   3.854534827207877*^9, 3.854534877299165*^9}, {3.854996626765793*^9, 
   3.8549966723106623`*^9}, {3.855604796774249*^9, 3.855604816156654*^9}, {
   3.855604889750051*^9, 
   3.8556048959080973`*^9}},ExpressionUUID->"18ec1409-9f09-4991-a303-\
03ce8205c570"],

Cell["\<\
In particular, we\[CloseCurlyQuote]ll investigate reptation and step-growth \
polymerization\
\>", "Subitem",
 CellChangeTimes->{
  3.854477893774478*^9, {3.854478372417194*^9, 3.854478373564378*^9}, {
   3.854534827207877*^9, 3.854534877299165*^9}, {3.854996626765793*^9, 
   3.8549966723106623`*^9}, {3.855604796774249*^9, 3.855604816156654*^9}, {
   3.855604889750051*^9, 3.8556049030483294`*^9}, {3.855604954815361*^9, 
   3.855604959569641*^9}},ExpressionUUID->"9c2324da-17f6-4ffe-9d92-\
2a4eaff28473"]
}, Open  ]],

Cell["\<\
This will set us up well to explore molecular dynamics next week\
\>", "Item",
 CellChangeTimes->{
  3.854477893774478*^9, {3.854478372417194*^9, 3.854478373564378*^9}, {
   3.854534827207877*^9, 3.854534877299165*^9}, {3.854996626765793*^9, 
   3.8549966723106623`*^9}, {3.855604796774249*^9, 3.855604816156654*^9}, {
   3.855604889750051*^9, 3.8556049030483294`*^9}, {3.855604954815361*^9, 
   3.8556049819234962`*^9}, {3.855660696405477*^9, 
   3.855660696542614*^9}},ExpressionUUID->"842b4a17-62f2-4692-b9ad-\
44495c5a9784"],

Cell[CellGroupData[{

Cell["Polymer Microstructures", "Section",
 CellChangeTimes->{{3.855169784789427*^9, 
  3.855169791113618*^9}},ExpressionUUID->"04d5505a-0510-49bb-afe2-\
315110da04bb"],

Cell["\<\
We start by  generating non-intersecting polymer chains with correlations in \
2D\
\>", "Item",
 CellChangeTimes->{{3.855055477266987*^9, 3.855055477585175*^9}, {
  3.8551698050037327`*^9, 3.8551698485482492`*^9}, {3.8556050347688847`*^9, 
  3.855605040459993*^9}},ExpressionUUID->"2efb080c-6960-42ef-be3d-\
19201bc63efa"],

Cell["We\[CloseCurlyQuote]ll then try assembling a number of them together", \
"Item",
 CellChangeTimes->{{3.855055477266987*^9, 3.855055477585175*^9}, {
  3.8551698050037327`*^9, 
  3.8551698822979393`*^9}},ExpressionUUID->"b96b53d9-b234-43d0-8b8b-\
2a08472b36f4"],

Cell[CellGroupData[{

Cell["\<\
First - let\[CloseCurlyQuote]s write a simple function to return a polymer \
with N molecular units and some correlation\
\>", "Item",
 CellChangeTimes->{{3.8551699344312077`*^9, 3.855169948725903*^9}, {
  3.8551699969141073`*^9, 3.855170022324267*^9}, {3.8551700534317493`*^9, 
  3.855170053433975*^9}},ExpressionUUID->"03b414f1-ffd0-4184-b4f8-\
3b471682a2a8"],

Cell[CellGroupData[{

Cell["It will be convenient to define a \[OpenCurlyDoubleQuote]correlation\
\[CloseCurlyDoubleQuote] variable", "Subitem",
 CellChangeTimes->{{3.8551699344312077`*^9, 3.855169948725903*^9}, {
  3.8551699969141073`*^9, 3.855170022324267*^9}, {3.85517005504324*^9, 
  3.855170075994033*^9}},ExpressionUUID->"563a07e7-86c5-4830-bfec-\
f3dbf49abfea"],

Cell["\<\
Which has a value of 1 when the polymer is \[OpenCurlyDoubleQuote]maximally\
\[CloseCurlyDoubleQuote] correlated (i.e. the next bond angle is chosen from \
a range {0,0})\
\>", "Subsubitem",
 CellChangeTimes->{{3.8551699344312077`*^9, 3.855169948725903*^9}, {
  3.8551699969141073`*^9, 3.855170022324267*^9}, {3.85517005504324*^9, 
  3.855170128407077*^9}},ExpressionUUID->"119d7a78-170c-4fda-9357-\
72c55c6262ae"],

Cell["\<\
and a value of 0 when the polymer is uncorrelated (i.e. the next bond angle \
is chosen from the full range of angles {-\[Pi],\[Pi]})\
\>", "Subsubitem",
 CellChangeTimes->{{3.8551699344312077`*^9, 3.855169948725903*^9}, {
  3.8551699969141073`*^9, 3.855170022324267*^9}, {3.85517005504324*^9, 
  3.85517014191908*^9}, {3.855650732695359*^9, 
  3.855650732697319*^9}},ExpressionUUID->"2a285c02-c1cf-4176-8c6f-\
df077c99b84f"],

Cell[CellGroupData[{

Cell["\<\
In-fact the maximum range is restricted further to avoid self-intersection at \
the trimer-level\
\>", "Subsubitem",
 CellChangeTimes->{{3.8551699344312077`*^9, 3.855169948725903*^9}, {
  3.8551699969141073`*^9, 3.855170022324267*^9}, {3.85517005504324*^9, 
  3.85517014191908*^9}, {3.855650734263754*^9, 3.8556507352074013`*^9}, {
  3.855650854523974*^9, 3.8556508884652987`*^9}, {3.855651485632777*^9, 
  3.855651533078475*^9}},ExpressionUUID->"a9743dca-59d4-40b9-8cab-\
2d1c8f00addf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"AngleVector", "[", "\[Alpha]", "]"}], ",", 
          RowBox[{"1", "/", "2"}]}], "]"}], ",", "Dashed", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"AngleVector", "[", "\[Alpha]", "]"}]}], "}"}], "]"}]}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", 
          RowBox[{"1", "/", "3"}], ",", "0"}], "]"}], ",", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"AngleVector", "[", 
           RowBox[{"\[Theta]", "+", "\[Alpha]", "+", "\[Pi]"}], "]"}], ",", 
          RowBox[{"1", "/", "2"}]}], "]"}], ",", "Dashed", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"AngleVector", "[", 
            RowBox[{"\[Theta]", "+", "\[Alpha]", "+", "\[Pi]"}], "]"}]}], 
          "}"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", 
       RowBox[{"-", "\[Pi]"}], ",", "\"\<Reference Frame Angle\>\""}], "}"}], 
     ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "\"\<Relative Angle\>\""}], "}"}], 
     ",", 
     RowBox[{
      RowBox[{"-", "2"}], 
      RowBox[{"\[Pi]", "/", "3"}]}], ",", 
     RowBox[{"2", 
      RowBox[{"\[Pi]", "/", "3"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Paneled", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.855651544881599*^9, 3.8556516549321537`*^9}, {
  3.855651685068461*^9, 3.85565172541282*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"eb2b5e35-2f66-4525-9f31-cb8f5f4c27f3"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]$$ = -3.141592653589793, \
$CellContext`\[Theta]$$ = 0.6534512719466771, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], -Pi, "Reference Frame Angle"}, -Pi, 
      Pi}, {{
       Hold[$CellContext`\[Theta]$$], 0, "Relative Angle"}, Rational[-2, 3] 
      Pi, Rational[2, 3] Pi}}, Typeset`size$$ = {
    360., {104., 108.71541750529627`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Alpha]$$ = -Pi, $CellContext`\[Theta]$$ = 
        0}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{{Blue, 
          Circle[
           AngleVector[$CellContext`\[Alpha]$$], 1/2], Dashed, 
          Line[{{0, 0}, 
            AngleVector[$CellContext`\[Alpha]$$]}]}, {Orange, 
          Circle[{0, 0}, 1/2]}, {
          RGBColor[0, 1/3, 0], 
          Circle[
           
           AngleVector[$CellContext`\[Theta]$$ + $CellContext`\[Alpha]$$ + 
            Pi], 1/2], Dashed, 
          Line[{{0, 0}, 
            
            AngleVector[$CellContext`\[Theta]$$ + $CellContext`\[Alpha]$$ + 
             Pi]}]}}], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, -Pi, 
          "Reference Frame Angle"}, -Pi, 
         Pi}, {{$CellContext`\[Theta]$$, 0, "Relative Angle"}, 
         Rational[-2, 3] Pi, Rational[2, 3] Pi}}, 
      "Options" :> {Paneled -> False}, "DefaultOptions" :> {}],
     ImageSizeCache->{380., {151.1875, 156.8125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8556516148904543`*^9, 3.855651655404014*^9, 
  3.855651692088161*^9, 3.8556517531689177`*^9, 3.8556529494162188`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"63960f82-d2ab-43de-a0b2-af3e97331baa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Rescale", "[", 
   RowBox[{"correlation", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], 
       RowBox[{"\[Pi]", "/", "3"}]}], ",", "0"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8556517591963053`*^9, 3.855651762387834*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"4999d29b-f304-4b91-9d11-b31a032cde22"],

Cell[BoxData[
 RowBox[{
  FractionBox["2", "3"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "correlation"}], ")"}], " ", "\[Pi]"}]], "Output",\

 CellChangeTimes->{3.855651762695632*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"a7e4124c-b47d-45eb-a81f-786dce00f758"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"angularRange", "[", "correlation_", "]"}], ":=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "}"}], 
   RowBox[{"(", 
    RowBox[{"1", "-", "correlation"}], ")"}], "2", 
   RowBox[{"\[Pi]", "/", "3"}]}]}]], "Input",
 CellChangeTimes->{{3.8551701478728456`*^9, 3.85517016521255*^9}, {
  3.855651777774321*^9, 3.855651793828869*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"308348b8-b4e0-45f2-8b65-42575a10f798"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"angularRange", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.8551702499717484`*^9, 3.855170250929719*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"d6159b43-10fe-4d60-8964-30a16e1ad1a0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]"}], "3"]}], ",", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], "3"]}], "}"}]], "Output",
 CellChangeTimes->{3.855170251320455*^9, 3.855651798081056*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"0ea2def5-b0ac-4f17-9618-c543ca27bef7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"angularRange", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.855170252626934*^9, 3.855170256337867*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"5a81c74e-ab15-4d24-9e1c-dc3910371bcf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.855170256635038*^9, 3.855651799137692*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"836dc7bc-9e60-49b8-908f-79e106fb4133"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let\[CloseCurlyQuote]s write a simple visualization function to help us \
debug", "Item",
 CellChangeTimes->{{3.855170462075508*^9, 3.855170479114221*^9}, {
  3.855605158702141*^9, 
  3.855605158703394*^9}},ExpressionUUID->"51a9e389-ec0d-439a-96f3-\
5def3bca10f9"],

Cell[CellGroupData[{

Cell["We\[CloseCurlyQuote]ll color the end-points with a different color", \
"Subitem",
 CellChangeTimes->{{3.855170462075508*^9, 3.855170479114221*^9}, {
  3.85560516027365*^9, 
  3.855605168831605*^9}},ExpressionUUID->"22aaa1c7-8a85-4802-a005-\
9a457267ef4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"chainGraphic", "[", "sortedParticles_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"start", ",", "end", ",", "rest", ",", 
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "sortedParticles", "]"}]}], ",", 
      RowBox[{"r", "=", 
       RowBox[{"1", "/", "2"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "start", "}"}], ",", "rest", ",", 
        RowBox[{"{", "end", "}"}]}], "}"}], "=", 
      RowBox[{"TakeList", "[", 
       RowBox[{"sortedParticles", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"n", "-", "2"}], ",", "1"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"FaceForm", "[", "None", "]"}], ",", 
         RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Disk", "[", 
            RowBox[{"#", ",", "r"}], "]"}], "&"}], "/@", "rest"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"FaceForm", "[", "LightGray", "]"}], ",", 
         RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Disk", "[", 
            RowBox[{"#", ",", "r"}], "]"}], "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{"start", ",", "end"}], "}"}]}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.855170509054762*^9, 3.8551705996014833`*^9}, {
  3.855170638710741*^9, 3.855170769356772*^9}, {3.855170799392784*^9, 
  3.855170806037201*^9}, {3.8556050942518473`*^9, 3.855605116152178*^9}, {
  3.855605201453353*^9, 3.855605243037595*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"2e6f8871-e0e0-4ff7-ba09-ec3a585e3405"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["And write a simple function like the one we had last lecture", "Item",
 CellChangeTimes->{{3.855170815893482*^9, 3.8551708235030127`*^9}, {
  3.855605135781611*^9, 
  3.855605142238537*^9}},ExpressionUUID->"dcf0d183-00de-4f6e-a831-\
f25cb1de24e8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"correlatedPolymerChain2D", "[", 
   RowBox[{"numberUnits_", ",", "correlation_"}], "]"}], ":=", 
  RowBox[{"AnglePath", "[", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"angularRange", "[", "correlation", "]"}], ",", 
     RowBox[{"numberUnits", "-", "1"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.855170276365431*^9, 3.855170310502318*^9}, {
  3.855170407854434*^9, 3.855170449215931*^9}, {3.855176547818182*^9, 
  3.855176547905655*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"bf2ef67c-5e08-49b3-b3ea-c1f280bafbf5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"chainGraphic", "[", 
   RowBox[{"correlatedPolymerChain2D", "[", 
    RowBox[{"12", ",", "0.4"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8551704328646393`*^9, 3.8551704569690447`*^9}, {
   3.855170712351966*^9, 3.855170713831161*^9}, {3.855170771888652*^9, 
   3.85517077223708*^9}, {3.8556060101693907`*^9, 3.85560601525144*^9}, 
   3.8556518303026342`*^9},
 CellLabel->"In[59]:=",ExpressionUUID->"7dda1576-035b-4473-b3c8-0d3e3fe66295"],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[GrayLevel[0]], FaceForm[None], 
    DiskBox[{0.5374700817057466, 0.8432828180813469}, NCache[
     Rational[1, 2], 0.5]], 
    DiskBox[{1.535289853371128, 0.7772850660465546}, NCache[
     Rational[1, 2], 0.5]], 
    DiskBox[{2.5350510103568427, 0.799139790537733}, NCache[
     Rational[1, 2], 0.5]], 
    DiskBox[{3.1998256230065536, 0.052095806306264425}, NCache[
     Rational[1, 2], 0.5]], 
    DiskBox[{2.749431290479705, -0.8407339340293131}, NCache[
     Rational[1, 2], 0.5]], 
    DiskBox[{1.753150690275274, -0.7545656936138427}, NCache[
     Rational[1, 2], 0.5]], 
    DiskBox[{1.2365595352797372, 0.10166650537214339}, NCache[
     Rational[1, 2], 0.5]], 
    DiskBox[{0.24454321823764347, 0.22777608757048448}, NCache[
     Rational[1, 2], 0.5]], 
    DiskBox[{-0.680257678807017, -0.1526753558824103}, NCache[
     Rational[1, 2], 0.5]], 
    DiskBox[{-1.5931021027088001, 0.2556321970129797}, NCache[
     Rational[1, 2], 0.5]]}, 
   {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[0.85]], 
    DiskBox[{0., 0.}, NCache[Rational[1, 2], 0.5]], 
    DiskBox[{-2.382730006555984, 0.8692181921806517}, NCache[
     Rational[1, 2], 0.5]]}}]], "Output",
 CellChangeTimes->{{3.855170439588182*^9, 3.8551704504943743`*^9}, 
   3.8551707141294203`*^9, {3.855170751787085*^9, 3.855170827811674*^9}, {
   3.8551709043284607`*^9, 3.8551709066785097`*^9}, {3.855176549837455*^9, 
   3.855176562060981*^9}, {3.855651810960516*^9, 3.855651837007524*^9}},
 CellLabel->"Out[59]=",ExpressionUUID->"fd728a26-5b6a-43c1-b779-f6b62f22ddb9"]
}, Open  ]],

Cell["\<\
It\[CloseCurlyQuote]s clear this naive approach very quickly leads to \
self-intersections\
\>", "Subitem",
 CellChangeTimes->{{3.855170835395461*^9, 
  3.855170856893993*^9}},ExpressionUUID->"fa44311f-c1b7-41d9-879c-\
d419c1cd893f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Let\[CloseCurlyQuote]s instead write a function to append one particle at a \
time\
\>", "Item",
 CellChangeTimes->{{3.855170859599896*^9, 3.8551708621115427`*^9}, {
  3.8551709107928743`*^9, 3.855170922367889*^9}, {3.8556060320419827`*^9, 
  3.855606034863059*^9}},ExpressionUUID->"5a25ceb4-e13e-480d-8f9d-\
0aa5b2a1c55f"],

Cell["while checking for collisions", "Subitem",
 CellChangeTimes->{{3.855170859599896*^9, 3.8551708621115427`*^9}, {
  3.8551709107928743`*^9, 
  3.855170927049366*^9}},ExpressionUUID->"925857f2-5cce-4f0d-9733-\
a5232de19e87"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Our first step is to write a collision-detection function", "Item",
 CellChangeTimes->{{3.855171116646644*^9, 3.8551711280666723`*^9}, {
  3.855171313048789*^9, 
  3.855171313050551*^9}},ExpressionUUID->"d509b70b-7e59-4731-aa57-\
827d0697e7b1"],

Cell["\<\
The simplest idea is to compute the distance b/w all the particles\
\>", "Subitem",
 CellChangeTimes->{{3.855171116646644*^9, 3.8551711280666723`*^9}, {
  3.855171314143138*^9, 3.855171341669619*^9}, {3.855171545684564*^9, 
  3.855171549554865*^9}},ExpressionUUID->"8bbe50b0-91aa-43a4-ad40-\
0fbfecb3ffff"],

Cell[CellGroupData[{

Cell["And check no-distances are less the bond length", "Subitem",
 CellChangeTimes->{{3.855171116646644*^9, 3.8551711280666723`*^9}, {
  3.855171314143138*^9, 3.855171341669619*^9}, {3.855171545684564*^9, 
  3.855171559041312*^9}, {3.855649298193787*^9, 
  3.8556493119200363`*^9}},ExpressionUUID->"83b9dd9a-9a01-433a-88bf-\
4cec2c2edde0"],

Cell[CellGroupData[{

Cell["Distance between two particles", "Subsubitem",
 CellChangeTimes->{{3.855171116646644*^9, 3.8551711280666723`*^9}, {
  3.855171314143138*^9, 
  3.8551713477058573`*^9}},ExpressionUUID->"21e74ef2-7f51-4ecc-898b-\
419c6b018118"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EuclideanDistance", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x1", ",", "y1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x2", ",", "y2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.855171348249366*^9, 3.855171357232445*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"2b21cf9c-b12c-4733-81b8-f28c4e0db3ba"],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"x1", "-", "x2"}], "]"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"y1", "-", "y2"}], "]"}], "2"]}]]], "Output",
 CellChangeTimes->{3.8551713591606083`*^9, 3.855651842631192*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"99f10841-3955-44c6-ae3a-8018f6164a87"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distances between all particles", "Subsubitem",
 CellChangeTimes->{{3.855171361683619*^9, 
  3.8551713755774403`*^9}},ExpressionUUID->"dab50571-8ba6-4932-afb0-\
350fae154137"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Outer", "[", 
   RowBox[{"EuclideanDistance", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x1", ",", "y1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x2", ",", "y2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x3", ",", "y3"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x1", ",", "y1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x2", ",", "y2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x3", ",", "y3"}], "}"}]}], "}"}], ",", "1"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.855171377394758*^9, 3.855171403595928*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"c1f72e76-3831-4451-984b-e87175af3f89"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"x1", "-", "x2"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"y1", "-", "y2"}], "]"}], "2"]}]], 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"x1", "-", "x3"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"y1", "-", "y3"}], "]"}], "2"]}]]},
     {
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", "x1"}], "+", "x2"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", "y1"}], "+", "y2"}], "]"}], "2"]}]], "0", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"x2", "-", "x3"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"y2", "-", "y3"}], "]"}], "2"]}]]},
     {
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", "x1"}], "+", "x3"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", "y1"}], "+", "y3"}], "]"}], "2"]}]], 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", "x2"}], "+", "x3"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", "y2"}], "+", "y3"}], "]"}], "2"]}]], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.855171397028607*^9, 3.855171404112627*^9}},
 CellLabel->
  "Out[52]//MatrixForm=",ExpressionUUID->"5bb537cb-c644-49d3-8862-\
f4a40e7b29b9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
This is rather wasteful since the \[OpenCurlyDoubleQuote]Distance Matrix\
\[CloseCurlyDoubleQuote] is symmetric, so we only need to compute half-of it\
\>", "Subitem",
 CellChangeTimes->{{3.855171413951977*^9, 
  3.8551714683617487`*^9}},ExpressionUUID->"4a98de8f-503a-4828-b2c9-\
1833b8be67e6"],

Cell["\<\
In-fact less than half, N(N-1)/2 entries, since the diagonal is by definition \
0\
\>", "Subsubitem",
 CellChangeTimes->{{3.855171413951977*^9, 
  3.855171501778103*^9}},ExpressionUUID->"8a9a4e64-1f81-42f8-aac9-\
d0f76da551f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
If you\[CloseCurlyQuote]re curious about all the ways to calculate pairwise \
distances in the WL - there\[CloseCurlyQuote]s a nice SE post about it here:\
\>", "Subitem",
 CellChangeTimes->{{3.855171533708517*^9, 3.8551715406524353`*^9}, {
  3.855171615302339*^9, 
  3.8551716390462008`*^9}},ExpressionUUID->"e4bfdeb7-bb77-4442-8258-\
1564b1135cf4"],

Cell["\<\
https://mathematica.stackexchange.com/questions/21861/fastest-way-to-\
calculate-matrix-of-pairwise-distances\
\>", "Subsubitem",
 CellChangeTimes->{{3.855171533708517*^9, 3.8551715406524353`*^9}, {
  3.855171615302339*^9, 
  3.855171639589957*^9}},ExpressionUUID->"59ef05d3-8d20-453e-8e48-\
9adeaaaf2b87"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The built-in `DistanceMatrix` function is actually reasonably fast (on \
numeric points using EuclideanDistance)\
\>", "Subitem",
 CellChangeTimes->{{3.855171645877561*^9, 3.855171683388433*^9}, {
  3.8556493354563227`*^9, 
  3.855649343856559*^9}},ExpressionUUID->"b5ebd8ee-1d45-4d21-ba1c-\
3300d5e63acd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"DistanceMatrix", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x1", ",", "y1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x2", ",", "y2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x3", ",", "y3"}], "}"}]}], "}"}], ",", 
    RowBox[{"DistanceFunction", "\[Rule]", "EuclideanDistance"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.855171692075467*^9, 3.855171709642509*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"4426b8ea-fe8a-4d66-8439-64eebc08bb04"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      SqrtBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"x1", "-", "x2"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"y1", "-", "y2"}], "]"}], "2"]}], "]"}]], 
      SqrtBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"x1", "-", "x3"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"y1", "-", "y3"}], "]"}], "2"]}], "]"}]]},
     {
      SqrtBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"x1", "-", "x2"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"y1", "-", "y2"}], "]"}], "2"]}], "]"}]], "0", 
      SqrtBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"x2", "-", "x3"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"y2", "-", "y3"}], "]"}], "2"]}], "]"}]]},
     {
      SqrtBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"x1", "-", "x3"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"y1", "-", "y3"}], "]"}], "2"]}], "]"}]], 
      SqrtBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"x2", "-", "x3"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"y2", "-", "y3"}], "]"}], "2"]}], "]"}]], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.855171699828109*^9, 3.855171711337804*^9}},
 CellLabel->
  "Out[55]//MatrixForm=",ExpressionUUID->"0610cf9f-6eb8-4cfd-93c6-\
585edc13ada0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
One quick common trick on Distance matrices is that often times if we want to \
compare distances we can just use SquaredEuclideanDistance and compare \
against bond_length^2\
\>", "Item",
 CellChangeTimes->{{3.855172998398219*^9, 
  3.855173054378327*^9}},ExpressionUUID->"74fb40b8-3ec6-4825-b14f-\
994d0dd7efa9"],

Cell["\<\
This saves us having to compute the outermost square root in all the entries \
above!\
\>", "Subitem",
 CellChangeTimes->{{3.855172998398219*^9, 
  3.855173071160063*^9}},ExpressionUUID->"c8bb78a8-f9b2-4736-bea2-\
a2642c43802d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["However, this still does more work than we need it to", "Item",
 CellChangeTimes->{{3.855172964439636*^9, 
  3.855172981715353*^9}},ExpressionUUID->"a7f9105e-695b-4d91-a1d3-\
3b736d2be275"],

Cell["\<\
Remember we\[CloseCurlyQuote]ll actually be building this polymer chain \
incrementally\
\>", "Subitem",
 CellChangeTimes->{{3.855172964439636*^9, 3.855172996687158*^9}, {
  3.855173075432047*^9, 
  3.855173076391027*^9}},ExpressionUUID->"ab8b38bd-5fc3-4e2b-b740-\
9d36f6ccc402"],

Cell[CellGroupData[{

Cell["\<\
I.e. we only need to check if the point we\[CloseCurlyQuote]re trying to add \
collides with any of the existing points\
\>", "Subitem",
 CellChangeTimes->{{3.855172964439636*^9, 3.855172996687158*^9}, {
  3.855173075432047*^9, 
  3.855173097915821*^9}},ExpressionUUID->"9963ab39-0fc3-412c-9f53-\
4e134ca8cebe"],

Cell["Since the previous points have already been checked", "Subsubitem",
 CellChangeTimes->{{3.855172964439636*^9, 3.855172996687158*^9}, {
  3.855173075432047*^9, 
  3.855173107152231*^9}},ExpressionUUID->"11fcbd68-45dc-42aa-9476-\
0289bcf2eb4a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can do this efficiently using `Nearest`", "Item",
 CellChangeTimes->{{3.8551731146295424`*^9, 3.855173124111429*^9}, {
  3.855175294465577*^9, 
  3.855175294468445*^9}},ExpressionUUID->"ffb4a1a2-80c9-4ae6-8f46-\
ecd8c453b33c"],

Cell["\<\
This uses a KDtree implementation - ask me about it if \
there\[CloseCurlyQuote]s time!\
\>", "Subitem",
 CellChangeTimes->{{3.8551731146295424`*^9, 3.855173124111429*^9}, {
  3.8551754135161037`*^9, 
  3.855175448899599*^9}},ExpressionUUID->"e65dfc59-4a73-48e1-8c25-\
9335a5139171"],

Cell[CellGroupData[{

Cell["\<\
Essentially we\[CloseCurlyQuote]ll build a fast look-up table of the existing \
particles - and then find the nearest particle to our candidate\
\>", "Subitem",
 CellChangeTimes->{{3.8551731146295424`*^9, 3.855173124111429*^9}, {
  3.8551754135161037`*^9, 3.8551754665340357`*^9}, {3.855175537238364*^9, 
  3.855175547025716*^9}},ExpressionUUID->"b6ea28b2-fa22-4971-a283-\
38aaa020e8e7"],

Cell[CellGroupData[{

Cell["\<\
If that distance is less than the bond angle - there\[CloseCurlyQuote]s a \
collision\
\>", "Subsubitem",
 CellChangeTimes->{{3.8551731146295424`*^9, 3.855173124111429*^9}, {
  3.8551754135161037`*^9, 3.8551754665340357`*^9}, {3.855175537238364*^9, 
  3.85517556277394*^9}},ExpressionUUID->"140dc154-9610-4496-81ad-\
a8cf67e785f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"collisionQ", "[", 
    RowBox[{"nf_NearestFunction", ",", 
     RowBox[{"bondLength_", ":", "1"}]}], "]"}], "[", "candidatePt_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"First", "[", 
     RowBox[{"nf", "[", "candidatePt", "]"}], "]"}], "[", "\"\<Distance\>\"", 
    "]"}], "<", "bondLength"}]}]], "Input",
 CellChangeTimes->{{3.8551755638708143`*^9, 3.8551756172011957`*^9}, {
  3.855175657847682*^9, 3.855175684775823*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"37b34dfd-448b-4ef3-b904-7254ce45d127"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"chainSoFar", "=", 
   RowBox[{"correlatedPolymerChain2D", "[", 
    RowBox[{"8", ",", "0.4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chainGraphic", "[", "chainSoFar", "]"}], "//", 
  "Graphics"}]}], "Input",
 CellChangeTimes->{{3.855175714527519*^9, 3.855175761447603*^9}, 
   3.855176357848618*^9, {3.855651853543713*^9, 3.855651887442375*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"ab4ed817-95cc-466c-be30-9739dba354a0"],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[GrayLevel[0]], FaceForm[None], 
    DiskBox[{0.9419514286997183, 0.335749171213511}, NCache[
     Rational[1, 2], 0.5]], 
    DiskBox[{1.8315147844048763, 0.7925609882526268}, NCache[
     Rational[1, 2], 0.5]], 
    DiskBox[{2.3096282717472465, 1.670859054527008}, NCache[
     Rational[1, 2], 0.5]], 
    DiskBox[{1.669750274531253, 2.4393355659955427}, NCache[
     Rational[1, 2], 0.5]], 
    DiskBox[{0.7364203018652277, 2.0803158421317463}, NCache[
     Rational[1, 2], 0.5]], 
    DiskBox[{-0.18087992028336797, 2.4785121535739005}, NCache[
     Rational[1, 2], 0.5]]}, 
   {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[0.85]], 
    DiskBox[{0., 0.}, NCache[Rational[1, 2], 0.5]], 
    DiskBox[{-0.8578486263622284, 1.7425003527242717}, NCache[
     Rational[1, 2], 0.5]]}}]], "Output",
 CellChangeTimes->{{3.855175716476143*^9, 3.85517572085576*^9}, 
   3.855175761811511*^9, {3.855176350406396*^9, 3.8551763607120247`*^9}, 
   3.855176405378482*^9, {3.855651848654295*^9, 3.8556518934360037`*^9}},
 CellLabel->"Out[93]=",ExpressionUUID->"641d151b-a812-400f-b78e-7c1e03aca386"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let\[CloseCurlyQuote]s debug this visually", "Item",
 CellChangeTimes->{{3.855176015174363*^9, 
  3.855176025290181*^9}},ExpressionUUID->"0c3eea75-d221-459a-a7f7-\
c668205e13fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"nf", "=", 
      RowBox[{"Nearest", "[", 
       RowBox[{"chainSoFar", "->", "All"}], "]"}]}], ",", "lastAngle", ",", 
     "newAngle", ",", "candidate", ",", 
     RowBox[{"angleRange", "=", 
      RowBox[{"angularRange", "[", "0.4", "]"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lastAngle", "=", 
     RowBox[{"ArcTan", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"chainSoFar", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], "-", 
        RowBox[{"chainSoFar", "[", 
         RowBox[{"[", 
          RowBox[{"-", "2"}], "]"}], "]"}]}], ")"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"newAngle", "=", 
     RowBox[{
      RowBox[{"RandomReal", "[", "angleRange", "]"}], "+", "lastAngle"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"candidate", "=", 
     RowBox[{
      RowBox[{"Last", "[", "chainSoFar", "]"}], "+", 
      RowBox[{"AngleVector", "[", "newAngle", "]"}]}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Echo", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"collisionQ", "[", "nf", "]"}], "[", "candidate", "]"}], ",", 
      "\"\<Collision: \>\""}], "]"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"chainGraphic", "[", 
      RowBox[{"Append", "[", 
       RowBox[{"chainSoFar", ",", "candidate"}], "]"}], "]"}], "//", 
     "Graphics"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.855175730008643*^9, 3.8551757988876743`*^9}, {
   3.855175840897139*^9, 3.8551760028773003`*^9}, 3.8551763740448217`*^9, {
   3.855649527658527*^9, 3.8556495571389513`*^9}, {3.855651868903458*^9, 
   3.855651872905374*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"f89a77a9-502a-46b1-9925-df7d186b22d1"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Collision: \"\>",
   "EchoLabel"], "  ", "True"}]], "Echo",
 CellChangeTimes->{
  3.855651902615234*^9},ExpressionUUID->"c4a16e18-14a8-4545-88ad-\
2f76c1668ddb"],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[GrayLevel[0]], FaceForm[None], 
    DiskBox[{0.9419514286997183, 0.335749171213511}, NCache[
     Rational[1, 2], 0.5]], 
    DiskBox[{1.8315147844048763, 0.7925609882526268}, NCache[
     Rational[1, 2], 0.5]], 
    DiskBox[{2.3096282717472465, 1.670859054527008}, NCache[
     Rational[1, 2], 0.5]], 
    DiskBox[{1.669750274531253, 2.4393355659955427}, NCache[
     Rational[1, 2], 0.5]], 
    DiskBox[{0.7364203018652277, 2.0803158421317463}, NCache[
     Rational[1, 2], 0.5]], 
    DiskBox[{-0.18087992028336797, 2.4785121535739005}, NCache[
     Rational[1, 2], 0.5]], 
    DiskBox[{-0.8578486263622284, 1.7425003527242717}, NCache[
     Rational[1, 2], 0.5]]}, 
   {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[0.85]], 
    DiskBox[{0., 0.}, NCache[Rational[1, 2], 0.5]], 
    DiskBox[{-0.5110571382089791, 0.804558103039114}, NCache[
     Rational[1, 2], 0.5]]}}]], "Output",
 CellChangeTimes->{{3.8551759741466*^9, 3.855176011981022*^9}, {
  3.855176364587446*^9, 3.855176412014719*^9}, {3.855651873295289*^9, 
  3.855651902645954*^9}},
 CellLabel->
  "Out[101]=",ExpressionUUID->"1c29a4b2-8503-4cdf-9883-3df3fd647278"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.855175688209146*^9, 3.855175689231073*^9}, 
   3.855175772781782*^9},ExpressionUUID->"6af4cf97-1696-4149-a13b-\
8496cf9f681e"]
}, Open  ]],

Cell["Seems to work!", "Item",
 CellChangeTimes->{{3.85517602773013*^9, 
  3.855176032502554*^9}},ExpressionUUID->"6fddc9a9-8c2c-4486-a58b-\
2ba332b5b21a"],

Cell[CellGroupData[{

Cell["Let\[CloseCurlyQuote]s write this into a function", "Item",
 CellChangeTimes->{{3.85517602773013*^9, 
  3.8551760389061747`*^9}},ExpressionUUID->"576090e0-1693-4ec4-a28d-\
c7f61b43728d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"addCorrelatedParticleToChain", "[", "correlation_", "]"}], "[", 
   "chainSoFar_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nf", "=", 
        RowBox[{"Nearest", "[", 
         RowBox[{"chainSoFar", "->", "All"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"angleRange", "=", 
        RowBox[{"angularRange", "[", "correlation", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"lastAngle", "=", 
        RowBox[{"ArcTan", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"chainSoFar", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], "-", 
           RowBox[{"chainSoFar", "[", 
            RowBox[{"[", 
             RowBox[{"-", "2"}], "]"}], "]"}]}], ")"}]}]}], ",", 
       "\[IndentingNewLine]", "newAngle", ",", "candidate", ",", 
       "collision"}], "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newAngle", "=", 
       RowBox[{
        RowBox[{"RandomReal", "[", "angleRange", "]"}], "+", "lastAngle"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"candidate", "=", 
       RowBox[{
        RowBox[{"Last", "[", "chainSoFar", "]"}], "+", 
        RowBox[{"AngleVector", "[", "newAngle", "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"collision", "=", 
       RowBox[{
        RowBox[{"collisionQ", "[", "nf", "]"}], "[", "candidate", "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"collision", ",", "chainSoFar", ",", 
        RowBox[{"Append", "[", 
         RowBox[{"chainSoFar", ",", "candidate"}], "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "chainSoFar", "]"}], ">", "1"}]}]}]], "Input",
 CellChangeTimes->{{3.855176055300205*^9, 3.855176089203601*^9}, {
  3.855176128459762*^9, 3.855176286375539*^9}, {3.855176342480711*^9, 
  3.855176345047715*^9}, {3.855176401456999*^9, 3.85517640189648*^9}, {
  3.855651912879446*^9, 3.8556519140626993`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"fcb4fd9e-1f28-46be-823e-2ed17b23cf1b"],

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{
   RowBox[{"chainGraphic", "[", "chainSoFar", "]"}], "//", "Graphics"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.855176297495584*^9, 3.855176304248053*^9}, {
  3.855651924638322*^9, 3.8556519278083687`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"b34351c4-f264-4e83-9606-ff821bd6db36"],

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"chainSoFar", "=", 
     RowBox[{
      RowBox[{"addCorrelatedParticleToChain", "[", "0.4", "]"}], "[", 
      "chainSoFar", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Pause", "[", "0.5", "]"}]}], ",", 
   RowBox[{"{", "10", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.855176288399749*^9, 3.855176324966488*^9}, 
   3.855176385401825*^9, 3.8551764198693047`*^9},
 CellLabel->
  "In[104]:=",ExpressionUUID->"afa5d57a-fd33-40de-860b-6fc959de186b"]
}, Open  ]],

Cell["Great, works as expected!", "Item",
 CellChangeTimes->{{3.855176429744177*^9, 
  3.85517643344803*^9}},ExpressionUUID->"5edba076-e342-4fa4-95bb-\
53c471059fc5"],

Cell[CellGroupData[{

Cell["\<\
So finally, let\[CloseCurlyQuote]s wrap this in a function to compute \
N-molecular unit polymers\
\>", "Item",
 CellChangeTimes->{{3.855176450687888*^9, 3.855176489097081*^9}, {
  3.8551766499673777`*^9, 
  3.855176649969789*^9}},ExpressionUUID->"2b65a14c-7e54-4277-b339-\
1569d9a1d61c"],

Cell[CellGroupData[{

Cell["This is a job for NestWhile!", "Subitem",
 CellChangeTimes->{{3.855176450687888*^9, 3.855176489097081*^9}, {
  3.855176650747316*^9, 
  3.85517666485152*^9}},ExpressionUUID->"f521acbd-f43e-44c3-8fae-\
bc1b4b27f33a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "NestWhile"}]], "Input",
 CellChangeTimes->{{3.8551765792359743`*^9, 3.855176584137672*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"2c182dbd-9139-4ece-a475-85717546d2dd"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/NestWhile",
              ButtonNote->"paclet:ref/NestWhile"],
             "\"paclet:ref/NestWhile\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NestWhile\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"test\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
starts with \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\), then repeatedly \
applies \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) until applying \
\\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\) to the result no longer yields \
True. \\n\\!\\(\\*RowBox[{\\\"NestWhile\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"test\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"m\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) supplies the most recent \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) results as arguments for \
\\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\) at each step. \
\\n\\!\\(\\*RowBox[{\\\"NestWhile\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"test\\\", \\\"TI\\\"], \\\",\\\", \\\"All\\\"}], \\\"]\\\"}]\\) \
supplies all results so far as arguments for \\!\\(\\*StyleBox[\\\"test\\\", \
\\\"TI\\\"]\\) at each step. \\n\\!\\(\\*RowBox[{\\\"NestWhile\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"test\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\
\\\"max\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) applies \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) at most \\!\\(\\*StyleBox[\\\"max\
\\\", \\\"TI\\\"]\\) times. \\n\\!\\(\\*RowBox[{\\\"NestWhile\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"test\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"max\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
applies \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) an extra \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) times. \
\\n\\!\\(\\*RowBox[{\\\"NestWhile\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"test\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"m\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"max\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"-\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\\) \
returns the result found when \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) had \
been applied \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) fewer times. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/NestWhile", 
                    "paclet:ref/NestWhile", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/NestWhile.\
html"], None}, "http://reference.wolfram.com/language/ref/NestWhile.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`NestWhile\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/NestWhile",
              ButtonNote->"paclet:ref/NestWhile"],
             "\"paclet:ref/NestWhile\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NestWhile\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"test\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
starts with \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\), then repeatedly \
applies \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) until applying \
\\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\) to the result no longer yields \
True. \\n\\!\\(\\*RowBox[{\\\"NestWhile\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"test\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"m\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) supplies the most recent \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) results as arguments for \
\\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\) at each step. \
\\n\\!\\(\\*RowBox[{\\\"NestWhile\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"test\\\", \\\"TI\\\"], \\\",\\\", \\\"All\\\"}], \\\"]\\\"}]\\) \
supplies all results so far as arguments for \\!\\(\\*StyleBox[\\\"test\\\", \
\\\"TI\\\"]\\) at each step. \\n\\!\\(\\*RowBox[{\\\"NestWhile\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"test\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\
\\\"max\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) applies \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) at most \\!\\(\\*StyleBox[\\\"max\
\\\", \\\"TI\\\"]\\) times. \\n\\!\\(\\*RowBox[{\\\"NestWhile\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"test\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"max\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
applies \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) an extra \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) times. \
\\n\\!\\(\\*RowBox[{\\\"NestWhile\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"test\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"m\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"max\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"-\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\\) \
returns the result found when \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) had \
been applied \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) fewer times. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"NestWhile\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\
\", StyleBox[\"expr\", \"TI\"], \",\", StyleBox[\"test\", \"TI\"]}], \
\"]\"}]\) starts with \!\(\*StyleBox[\"expr\", \"TI\"]\), then repeatedly \
applies \!\(\*StyleBox[\"f\", \"TI\"]\) until applying \
\!\(\*StyleBox[\"test\", \"TI\"]\) to the result no longer yields True. \n\
\!\(\*RowBox[{\"NestWhile\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\", \
StyleBox[\"expr\", \"TI\"], \",\", StyleBox[\"test\", \"TI\"], \",\", \
StyleBox[\"m\", \"TI\"]}], \"]\"}]\) supplies the most recent \!\(\*StyleBox[\
\"m\", \"TI\"]\) results as arguments for \!\(\*StyleBox[\"test\", \"TI\"]\) \
at each step. \n\!\(\*RowBox[{\"NestWhile\", \"[\", RowBox[{StyleBox[\"f\", \
\"TI\"], \",\", StyleBox[\"expr\", \"TI\"], \",\", StyleBox[\"test\", \
\"TI\"], \",\", \"All\"}], \"]\"}]\) supplies all results so far as arguments \
for \!\(\*StyleBox[\"test\", \"TI\"]\) at each step. \n\
\!\(\*RowBox[{\"NestWhile\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\", \
StyleBox[\"expr\", \"TI\"], \",\", StyleBox[\"test\", \"TI\"], \",\", \
StyleBox[\"m\", \"TI\"], \",\", StyleBox[\"max\", \"TI\"]}], \"]\"}]\) \
applies \!\(\*StyleBox[\"f\", \"TI\"]\) at most \!\(\*StyleBox[\"max\", \
\"TI\"]\) times. \n\!\(\*RowBox[{\"NestWhile\", \"[\", \
RowBox[{StyleBox[\"f\", \"TI\"], \",\", StyleBox[\"expr\", \"TI\"], \",\", \
StyleBox[\"test\", \"TI\"], \",\", StyleBox[\"m\", \"TI\"], \",\", \
StyleBox[\"max\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) \
applies \!\(\*StyleBox[\"f\", \"TI\"]\) an extra \!\(\*StyleBox[\"n\", \
\"TI\"]\) times. \n\!\(\*RowBox[{\"NestWhile\", \"[\", \
RowBox[{StyleBox[\"f\", \"TI\"], \",\", StyleBox[\"expr\", \"TI\"], \",\", \
StyleBox[\"test\", \"TI\"], \",\", StyleBox[\"m\", \"TI\"], \",\", \
StyleBox[\"max\", \"TI\"], \",\", RowBox[{\"-\", StyleBox[\"n\", \"TI\"]}]}], \
\"]\"}]\) returns the result found when \!\(\*StyleBox[\"f\", \"TI\"]\) had \
been applied \!\(\*StyleBox[\"n\", \"TI\"]\) fewer times. ", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/NestWhile", "Web" -> 
      "http://reference.wolfram.com/language/ref/NestWhile.html"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "System`NestWhile"|>, False]]], "Output",
 CellChangeTimes->{3.855176584536956*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"599e04f1-e6d6-4007-976f-18fe2d2c5221"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"collisionFreeCorrelatedPolymerChain2D", "[", 
   RowBox[{"numberUnits_", ",", "correlation_", ",", 
    RowBox[{"maxAttempts_", ":", "100"}]}], "]"}], ":=", 
  RowBox[{"NestWhile", "[", 
   RowBox[{
    RowBox[{"addCorrelatedParticleToChain", "[", "correlation", "]"}], ",", 
    RowBox[{"correlatedPolymerChain2D", "[", 
     RowBox[{"2", ",", "correlation"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "#", "]"}], "<", "numberUnits"}], "&"}], ",", 
    "1", ",", "maxAttempts"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8551766768430967`*^9, 3.855176698489908*^9}, {
   3.855176753747154*^9, 3.855176765866582*^9}, 3.855176868729097*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"b4c3cce9-9ea2-4456-8b2f-92c431804117"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"chainGraphic", "[", 
        RowBox[{"collisionFreeCorrelatedPolymerChain2D", "[", 
         RowBox[{"#", ",", "0.4"}], "]"}], "]"}], ",", 
       RowBox[{"ImageSize", "->", "200"}]}], "]"}], "&"}], "/@", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"6", ",", "18"}], "}"}], ",", "12"}], "]"}]}], ",", "6", ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.855176771323072*^9, 3.855176855400436*^9}, {
  3.855651962294627*^9, 3.855651979074359*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"bfc4c58e-7dfe-490f-b02b-20d58ae42ebf"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {EdgeForm[GrayLevel[0]], FaceForm[None], 
        DiskBox[{0.7481810100851456, 0.6634946692686923}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{0.6638939969371581, 1.6599361875800236}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{1.5593460915376585, 2.105094076733498}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{1.5188650731697453, 3.1042743843616543}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{2.4367975989369306, 3.5010109192795706}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{3.4363763905169846, 3.4719895577787887}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{3.970657520812609, 4.3172964096438555}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{4.64298244122907, 5.057552582456349}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{4.400065741435109, 6.027599734383105}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{4.638037524606331, 6.998871802556749}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{3.9417240337831823, 7.716609583712013}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{4.375462276723395, 8.617648504409193}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{5.359238542467821, 8.797048222797915}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{5.914703168672117, 7.9655080559775016}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{5.937256114708468, 6.9657624060119305}, NCache[
         Rational[1, 2], 0.5]]}, 
       {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[0.85]], 
        DiskBox[{0., 0.}, NCache[Rational[1, 2], 0.5]], 
        DiskBox[{6.134194748514284, 5.985346588863564}, NCache[
         Rational[1, 2], 0.5]]}},
      ImageSize->200], 
     GraphicsBox[{
       {EdgeForm[GrayLevel[0]], FaceForm[None], 
        DiskBox[{0.4267360545375867, 0.904376215829283}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{0.32593805294835476, 1.8992831274926893}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-0.6495679641801974, 2.1192558770458763}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-1.3069066955080664, 1.3656606327029548}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-2.1931453418014133, 0.9024316808701311}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-3.0770858314602156, 0.43483226818684273}, NCache[
         Rational[1, 2], 0.5]]}, 
       {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[0.85]], 
        DiskBox[{0., 0.}, NCache[Rational[1, 2], 0.5]], 
        DiskBox[{-3.931197227005555, 0.9549223796094626}, NCache[
         Rational[1, 2], 0.5]]}},
      ImageSize->200], 
     GraphicsBox[{
       {EdgeForm[GrayLevel[0]], FaceForm[None], 
        DiskBox[{0.9817864865138373, -0.18998761775130227}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{1.9766751377293876, -0.29096569300777925}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{2.689562988822244, 0.4103123629473528}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{3.5314404224439513, 0.9499811379923129}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{4.530850749181553, 0.984317690094118}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{5.401191440736357, 0.4918676107724614}, NCache[
         Rational[1, 2], 0.5]]}, 
       {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[0.85]], 
        DiskBox[{0., 0.}, NCache[Rational[1, 2], 0.5]], 
        DiskBox[{6.380301969331415, 0.28853887990959215}, NCache[
         Rational[1, 2], 0.5]]}},
      ImageSize->200], 
     GraphicsBox[{
       {EdgeForm[GrayLevel[0]], FaceForm[None], 
        DiskBox[{0.4474060956288175, 0.8943309150388224}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{0.5353455330467068, 1.8904567380886141}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{0.2352175221460342, 2.8443556725008534}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-0.698793746893747, 3.201599215908845}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-1.6637944714571007, 2.939352001257855}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-2.487033089950267, 2.371656504515576}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-3.3417962254142255, 1.8526382175045861}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-4.339549539793817, 1.7856432651235228}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-4.745644791041213, 2.6994740191006}, NCache[
         Rational[1, 2], 0.5]]}, 
       {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[0.85]], 
        DiskBox[{0., 0.}, NCache[Rational[1, 2], 0.5]], 
        DiskBox[{-4.346470494374771, 3.616349081953141}, NCache[
         Rational[1, 2], 0.5]]}},
      ImageSize->200], 
     GraphicsBox[{
       {EdgeForm[GrayLevel[0]], FaceForm[None], 
        DiskBox[{0.9780150523305449, -0.20853430752488103}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{1.5533224255435971, 0.6094029922277943}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{2.5529417360223956, 0.6369934637332106}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{3.4288967132944066, 1.119386330380709}, NCache[
         Rational[1, 2], 0.5]]}, 
       {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[0.85]], 
        DiskBox[{0., 0.}, NCache[Rational[1, 2], 0.5]], 
        DiskBox[{3.2740062224253528, 2.1073179757076232}, NCache[
         Rational[1, 2], 0.5]]}},
      ImageSize->200], 
     GraphicsBox[{
       {EdgeForm[GrayLevel[0]], FaceForm[None], 
        DiskBox[{0.7799343889645599, -0.6258612856779676}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{0.47786067757424433, -1.5791458564577954}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{1.0477302445465542, -2.4008810185622242}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{1.9520596875475364, -2.8277161840787657}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{2.7395026458771907, -2.2113286538860772}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{3.7392707768823943, -2.2328619821555664}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{4.079186666087171, -1.2924061414771613}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{3.4220110697733404, -0.5386686303968377}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{3.0749692454264577, 0.3991810228813343}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{2.8766223409818457, 1.3793129045672838}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{2.1335117246035926, 2.0484815020267977}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{1.1356496287993854, 1.9831267947959121}, NCache[
         Rational[1, 2], 0.5]]}, 
       {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[0.85]], 
        DiskBox[{0., 0.}, NCache[Rational[1, 2], 0.5]], 
        DiskBox[{0.181968918187855, 2.2839475091882004}, NCache[
         Rational[1, 2], 0.5]]}},
      ImageSize->200]},
    {
     GraphicsBox[{
       {EdgeForm[GrayLevel[0]], FaceForm[None], 
        DiskBox[{0.4459058163814213, -0.8950798863326213}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{1.3963472907136907, -1.2059834145678312}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{2.204639204854848, -1.794765361925275}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{3.02591970228633, -1.224240739723308}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{3.8857782033588757, -1.7347731658563352}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{4.377744290012698, -2.6053875291553354}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{5.134294680430523, -3.2593229286854704}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{5.2602287738439975, -4.2513615388797135}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{6.116998215063073, -4.767061184597212}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{7.041052191441061, -4.384799168775566}, NCache[
         Rational[1, 2], 0.5]]}, 
       {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[0.85]], 
        DiskBox[{0., 0.}, NCache[Rational[1, 2], 0.5]], 
        DiskBox[{7.675300050982137, -3.6116693913982076}, NCache[
         Rational[1, 2], 0.5]]}},
      ImageSize->200], 
     GraphicsBox[{
       {EdgeForm[GrayLevel[0]], FaceForm[None], 
        DiskBox[{0.5045447905753039, -0.8633855189330678}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{0.08727504300978689, -1.7721681979969954}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-0.6300968505822131, -2.4688586359134552}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-1.0526324394824245, -3.3752049693383506}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-1.3087057584199673, -4.341862331244994}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-0.8605316250465956, -5.23580860825219}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-1.1022800820403418, -6.2061475611656265}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-1.1168064959869555, -7.2060420472479585}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-1.48338813062098, -8.136427937698285}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-2.2067050663259504, -8.82694412905253}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-2.7079635057719176, -9.692241752349966}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-3.455635951226058, -10.356309455456078}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-4.225460691339199, -10.994564787991369}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-5.084593628626207, -11.506317263382154}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-5.45941201948443, -12.43341551808575}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-6.035834488792586, -13.250567362528805}, NCache[
         Rational[1, 2], 0.5]]}, 
       {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[0.85]], 
        DiskBox[{0., 0.}, NCache[Rational[1, 2], 0.5]], 
        DiskBox[{-6.091133109114535, -14.249037223160807}, NCache[
         Rational[1, 2], 0.5]]}},
      ImageSize->200], 
     GraphicsBox[{
       {EdgeForm[GrayLevel[0]], FaceForm[None], 
        DiskBox[{0.5052699531555119, 0.8629613400600439}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{0.5908270833013016, 1.8592946063325377}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{0.5436800069777172, 2.858182564611212}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{1.2257520469489922, 3.5894675516644288}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{1.1352222341080629, 4.585361297496275}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{0.3895718990701579, 5.2516987329281}, NCache[
         Rational[1, 2], 0.5]]}, 
       {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[0.85]], 
        DiskBox[{0., 0.}, NCache[Rational[1, 2], 0.5]], 
        DiskBox[{-0.2584238377028837, 6.013342695107255}, NCache[
         Rational[1, 2], 0.5]]}},
      ImageSize->200], 
     GraphicsBox[{
       {EdgeForm[GrayLevel[0]], FaceForm[None], 
        DiskBox[{0.9816937164973936, 0.1904663933336666}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{1.1689155632288266, 1.1727840507675904}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{2.145089491563571, 1.3897735934638067}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{2.8829534744729877, 2.064723030625623}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{3.806730135271037, 2.447654722921789}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{4.793027193589776, 2.2826755946909683}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{5.034220423459272, 1.3121984822018995}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{4.958185978289034, 0.31509329058586233}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{5.403988522608685, -0.5800380358004538}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{4.690573474816781, -1.2807797639600345}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{3.9296036334355318, -1.9295670176173454}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{3.9718699092061596, -2.9286733993067435}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{3.2468871716899392, -3.617440435614004}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{3.5240715175334145, -4.57825719151459}, NCache[
         Rational[1, 2], 0.5]]}, 
       {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[0.85]], 
        DiskBox[{0., 0.}, NCache[Rational[1, 2], 0.5]], 
        DiskBox[{4.520296649575672, -4.665064370292537}, NCache[
         Rational[1, 2], 0.5]]}},
      ImageSize->200], 
     GraphicsBox[{
       {EdgeForm[GrayLevel[0]], FaceForm[None], 
        DiskBox[{0.743611067040746, 0.6686124295692709}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{1.7425881530249505, 0.7138316918200784}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{2.185433273673003, -0.1827664339409628}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{2.653139819788507, -1.0666502423234367}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{2.2462828410125324, -1.9801421135632884}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{1.3537074673021396, -2.4310403307318116}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{0.35503153867144654, -2.3795972595402244}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-0.5898949767820064, -2.7068798291845537}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-1.584792347988282, -2.807771953589002}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{-2.438122506487397, -3.3291428777839323}, NCache[
         Rational[1, 2], 0.5]]}, 
       {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[0.85]], 
        DiskBox[{0., 0.}, NCache[Rational[1, 2], 0.5]], 
        DiskBox[{-2.804329584402883, -4.259676260357927}, NCache[
         Rational[1, 2], 0.5]]}},
      ImageSize->200], 
     GraphicsBox[{
       {EdgeForm[GrayLevel[0]], FaceForm[None], 
        DiskBox[{0.5576900514714246, -0.8300492795550153}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{1.4551298594091424, -1.2711862096897664}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{2.286515003767478, -1.8268828371226395}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{2.506392728285418, -2.80241027715742}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{1.689494492562075, -3.3791921011360273}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{1.0961393801498962, -4.184132912981426}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{1.209100671435414, -5.177732302409131}, NCache[
         Rational[1, 2], 0.5]], 
        DiskBox[{1.9941447108685337, -5.797172256037028}, NCache[
         Rational[1, 2], 0.5]]}, 
       {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[0.85]], 
        DiskBox[{0., 0.}, NCache[Rational[1, 2], 0.5]], 
        DiskBox[{2.992980758008254, -5.748937922473702}, NCache[
         Rational[1, 2], 0.5]]}},
      ImageSize->200]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8551767724526863`*^9, 3.855176779870673*^9}, {
   3.855176816074342*^9, 3.855176869867755*^9}, 3.8556519798550873`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"9a2fecac-1b52-40cd-9a4e-ac24c65fd720"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Polymer Reptation", "Section",
 CellChangeTimes->{{3.855652045144127*^9, 
  3.855652050751051*^9}},ExpressionUUID->"0fd23663-db07-4eb2-81fc-\
a10244a848b7"],

Cell["\<\
We want to model the random thermal motion of a polymer chain\
\>", "Item",
 CellChangeTimes->{
  3.854477893774478*^9, {3.854478372417194*^9, 3.854478373564378*^9}, {
   3.854534827207877*^9, 3.854534844513954*^9}, {3.854996537677141*^9, 
   3.854996605550372*^9}, {3.855042873617885*^9, 3.855042874969273*^9}, {
   3.855604739271578*^9, 3.855604794684745*^9}, {3.855652063559189*^9, 
   3.855652064743641*^9}, {3.855652192965247*^9, 
   3.8556522228948183`*^9}},ExpressionUUID->"3f2830fb-3c9a-4702-bf4d-\
4de65a87315e"],

Cell[CellGroupData[{

Cell["We consider the following simple motion:", "Item",
 CellChangeTimes->{
  3.854477893774478*^9, {3.854478372417194*^9, 3.854478373564378*^9}, {
   3.854534827207877*^9, 3.854534844513954*^9}, {3.854996537677141*^9, 
   3.854996605550372*^9}, {3.855042873617885*^9, 3.855042874969273*^9}, {
   3.855604739271578*^9, 3.855604794684745*^9}, {3.855652063559189*^9, 
   3.855652064743641*^9}, {3.855652192965247*^9, 
   3.8556522309975758`*^9}},ExpressionUUID->"a02bbda1-01c5-44b7-bdd9-\
805c2c4a70ef"],

Cell["\<\
Pick a monomer randomly from the chain, and displace it a small distance in a \
random direction\
\>", "Subitem",
 CellChangeTimes->{
  3.854477893774478*^9, {3.854478372417194*^9, 3.854478373564378*^9}, {
   3.854534827207877*^9, 3.854534844513954*^9}, {3.854996537677141*^9, 
   3.854996605550372*^9}, {3.855042873617885*^9, 3.855042874969273*^9}, {
   3.855604739271578*^9, 3.855604794684745*^9}, {3.855652063559189*^9, 
   3.855652064743641*^9}, {3.855652192965247*^9, 
   3.855652261856638*^9}},ExpressionUUID->"8fa816b2-3096-4d7e-ab27-\
09f3df74c030"],

Cell[CellGroupData[{

Cell["Move the remaining monomers in response to this", "Subitem",
 CellChangeTimes->{
  3.854477893774478*^9, {3.854478372417194*^9, 3.854478373564378*^9}, {
   3.854534827207877*^9, 3.854534844513954*^9}, {3.854996537677141*^9, 
   3.854996605550372*^9}, {3.855042873617885*^9, 3.855042874969273*^9}, {
   3.855604739271578*^9, 3.855604794684745*^9}, {3.855652063559189*^9, 
   3.855652064743641*^9}, {3.855652192965247*^9, 
   3.855652274958621*^9}},ExpressionUUID->"cc5150b4-f3ed-4d6b-8469-\
f59ae7082c9c"],

Cell["I.e. maintaining constant bond-lengths", "Subsubitem",
 CellChangeTimes->{
  3.854477893774478*^9, {3.854478372417194*^9, 3.854478373564378*^9}, {
   3.854534827207877*^9, 3.854534844513954*^9}, {3.854996537677141*^9, 
   3.854996605550372*^9}, {3.855042873617885*^9, 3.855042874969273*^9}, {
   3.855604739271578*^9, 3.855604794684745*^9}, {3.855652063559189*^9, 
   3.855652064743641*^9}, {3.855652192965247*^9, 3.855652316577683*^9}, {
   3.855652822669198*^9, 
   3.8556528226709003`*^9}},ExpressionUUID->"340d6a69-a61f-463f-8fe8-\
f8cd4ae9cd98"]
}, Open  ]],

Cell["\<\
This should be reasonable polymer motion since polymers have strong \
\[OpenCurlyDoubleQuote]spring-like\[CloseCurlyDoubleQuote] bonds along their \
backbone\
\>", "Subitem",
 CellChangeTimes->{
  3.854477893774478*^9, {3.854478372417194*^9, 3.854478373564378*^9}, {
   3.854534827207877*^9, 3.854534844513954*^9}, {3.854996537677141*^9, 
   3.854996605550372*^9}, {3.855042873617885*^9, 3.855042874969273*^9}, {
   3.855604739271578*^9, 3.855604794684745*^9}, {3.855652063559189*^9, 
   3.855652064743641*^9}, {3.855652192965247*^9, 3.855652316577683*^9}, {
   3.855652823629603*^9, 
   3.855652856944302*^9}},ExpressionUUID->"457358f5-20ab-46c7-8b0d-\
967fdf613c91"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dimer Viscous Dragging", "Subsection",
 CellChangeTimes->{{3.8556588423169727`*^9, 
  3.855658846629081*^9}},ExpressionUUID->"d1f335f8-6531-4ebe-873e-\
0139269bbf7d"],

Cell[CellGroupData[{

Cell["\<\
Let\[CloseCurlyQuote]s start by considering a setup similar to our \
double-pendulum from L02\
\>", "Item",
 CellChangeTimes->{{3.855652318625863*^9, 3.855652322850089*^9}, {
  3.855652447751458*^9, 3.855652489524521*^9}, {3.855652559235993*^9, 
  3.855652560884778*^9}},ExpressionUUID->"722107b1-0079-43bd-91bf-\
f7fd9f90daaa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Thumbnail", "[", 
  RowBox[{
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"String", 
       StyleBox[
       "\"double pendulum url\"", "IconizedCustomName", StripOnInput -> 
        False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["String", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"String length: \"", "IconizedLabel"], 
            "\[InvisibleSpace]", 
            TagBox["137", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["168", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    "https://www.wolfram.com/mathematica/new-in-9/advanced-hybrid-and-\
differential-algebraic-equations/HTMLImages.en/double-pendulum/In_87.png",
    SelectWithContents->True,
    Selectable->False], ",", "400"}], "]"}]], "Input",
 CellLabel->
  "In[118]:=",ExpressionUUID->"4b23b767-5cef-489d-a2e1-255001dd07b2"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
g3k5oaECEKn2R1atm7nVMY8gKAFDF4dby2sYuOWw2zveGANUJTs7m8fjMS/a
ymDTvBNikXCjgtqiuSWPXWvrfDxK7e8Emx3z2H2AFxIh5lRLd231DBQpARsy
rpvstYOtYAwhrOZUo0iI2iqOsD1OMCWp5VTzxNChFAu4XFGz9IFQoahKWwOd
027ZsCmLwMMeMZgXA81GBvCjbtq7Rt6/vGuNdSZYCesflX3x4llX+I7phF4B
pVJRUUlISGBeaP9gQ5nZE6aE+S39duv+yfdyVFWSNu9I2aadqqSbsm1Hus7u
muBQStyGV0hTYnh3SXqq+zzT66D8FfhvmzvyL4OHKT6mCxZudMsVV6QG+zxO
5MFWsZaSx2ovTXCijaaNGLLCrJpkwi+bqpwLFnEyvH0C8muh7UeyKZ2znY7u
MrvEgfff+WZADKanaV94dov8Kc86hH5KvpWnHQW9K6LIT01BNSifXx197d8f
p+tfCaqjGLo+6vjp465ZcLfO6dUz50ulZehAmdnCCPIKCvZb3J8+58HsBdka
OxO3aWep6ueoGSQp6QDJStqknn/qPCUQPOkYAnMH6lCBy5ztO4Pg/IY0G62V
rP7zZI2LThx2nzgHpbGzVzpmslspuoWB2HAGjtccVb3H5RKyMMovrKA29e6K
v35RdCwDW8QSaKzVBZkrGxlkwEWiN/nTvY4OPwGY7od+mslBN+lDe75G2d07
+LWzxSDKk4IjHsGOQUYUdd/GyiWyDiyKk61sLL0L4F6d0CuBQGBsbJyamso0
1yvUx/ekgoH92ynjsHGtujZr75HkTerxW7Qu/vbH41WbS7V3OS5df/GfFQXq
RkmK2imq+onrlEqu3Go4pNkZ2ACO4gf/qBsHFkiLUXV01YhDYXCJD3evf3Dj
xCU4VptpxZmDFhpNiqI0dY74JlbG+VxLhZ8Xww05pe1cyDTqVf2jo8uUlBPq
mU59fhhMr4BXnpVdVIGG7Lb6FKOV4rri9LQc2NoNx5iQVXk5ldxWx/ki34gu
y8vIzKt6vqI1CQYQhbocNx2DHaeDq4Az04n6Bs5VX18vDTUHAkWwyO7D5XJT
UlKsrKwWL1585MgRpt2pFUqv302UV0tW0cvcbuS3aPWlcf/sneLms3br3eUb
slX1k4FeAStLRQ94iLVh0ag0MiUjoZrUPlyma/4wHyyJyvLSHl4w3aX13+iN
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
HA7TvEWr1SQFHVrTbQdiMJiuoyFPdw1xya6cz5fJlNIdl26KLAWvR44cQe7h
2LFjy8rK2PX0S9R1yOVyW0xri8FgugKSpGtqiO43E2g2JSlSLU9Pz1GjRgG9
WrVqlTQSni0bk5mZBcywmJiYjIwMtFIsFsfFxYE14FWqEunp6TEsNTU1aA1w
OdEaacwqUBW0Jjk5GekkeE1KSkIrURw+IDc3F61BysmwMzugNU+WIT4+vry8
3NbWtqioiMF9nRjMqw6q49XV1UZGRnl5eWilr+9jR0c7hhEdOnTo77/nzZs3
X19fH20qLS39999/58+fv2TJksrKSrRSU1NzPktQUBBac/nyZbTGwsICrUlI
SEBrFBQUgOAwrOxs2LABrUxLS0O7gSuiNTdv3kRrvL290Ro9PT20BkjZ4sWL
QbGWL18eFRU1bdo0lIwCN75hMF0KsHHq6nvY85I1S4AnWFCQN/Kn+XJyyzdt
PVdZ2Wwi0l6oB0CpgGV4+/ZtBoe/YjBdBhKJgkKRvlEeetuD3gzNzp6A/Lt7
9+69+eZbcnJL5OQufjvSd7tWmpd3hVDY1EAkEon5fBF4lQqdpHFyBKmFA6Sj
YaIEmZFBaI1sW5P0QNkcg2iNbA7Vtk4FOHHixBtvvKGrq4v2xy4hBtMVoIqV
lS1cI5/B9LReSUGCExERPmnS6ElTzvQbkPBx/5CBX4b/Oi56976CgMDasrIm
tSEIurENrMdKu3Dhwg8//HD06NHApWWwXmEwXQOqWNk5QoWtmUzv0KvGtixO
Tk6uUCiorOQA26/vgPCP+wfKvf3gnQ8D3vs4ZPL0eEPjPDf36tKynu+Sq6qq
GjZsWP/+/T/++OOEhAQG6xUG0zWgipWaJlizIZ1pmby9Z0AuVUBAgI6OjgDO
OMXweOTSlVFyci5vvu/25ntunwwM/HRQ2JvvP/pkYNj0WYlqGtk3bleWlfeA
cCE70NXV9fPPPx84cGDfvn1Rwz7WKwymK0AVKzmFv3It7BqTPDEkp/tBeuXj
46OmpiYQCNCMBjU1ogmT/eTkXN/+wP2TgY8GfRkxZHjE4P9FfPTZY7m3AgZ9
GX7yTEn3iwTSK01NTaBUgwYNAq+LFy9msF5hMF2DVK9WrOldehUeHn748GGR
SMQ0pjwtLBKPnxL59ocBX3wVOWBoeP8hYR999vDzL2Lm/lPwwL26R5qwUPzY
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
ZQd5
    "], {{0, 299.}, {400., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72, 72}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
    MetaInformation -> <|
     "Comments" -> <|
       "Software" -> "Wolfram Mathematica 9.0 : www.wolfram.com", 
        "Creation Time" -> 
        DateObject[{2013, 4, 11, 12, 45, 0.}, "Instant"]|>|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{400., 299.},
  PlotRange->{{0, 400.}, {0, 299.}}]], "Output",
 CellChangeTimes->{3.855652557160646*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"36e6ffc1-fcc0-4290-9ad7-0a02d345c762"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
In particular, we consider a differential-algebraic system where we have:\
\>", "Item",
 CellChangeTimes->{{3.8556525832896957`*^9, 
  3.855652616647655*^9}},ExpressionUUID->"68031528-3c69-4ed2-9f6a-\
316c3c5b7c67"],

Cell["\<\
One particle at (0,0) moving to the right at a rate s in direction \[Alpha]\
\>", "Subitem",
 CellChangeTimes->{{3.8556525832896957`*^9, 3.8556526207575073`*^9}, {
  3.855652661491653*^9, 3.85565266373319*^9}, {3.8556527083849382`*^9, 
  3.855652759030315*^9}, {3.855653982356223*^9, 3.8556539823571463`*^9}, {
  3.8556583244909687`*^9, 
  3.8556583265984573`*^9}},ExpressionUUID->"33f00087-3753-4cee-993c-\
9a25070a1b73"],

Cell["Another particle at {Cos[\[Beta]],Sin[\[Beta]]}", "Subitem",
 CellChangeTimes->{{3.8556525832896957`*^9, 3.8556526207575073`*^9}, {
  3.855652661491653*^9, 3.85565266373319*^9}, {3.8556527083849382`*^9, 
  3.855652762894784*^9}, {3.85565300635415*^9, 
  3.855653023139344*^9}},ExpressionUUID->"25545a32-96ff-4d0e-84de-\
de2a1828a43d"],

Cell[CellGroupData[{

Cell["\<\
A unit-length \[OpenCurlyDoubleQuote]rigid\[CloseCurlyDoubleQuote] rod \
between them with surface tension \[Lambda]\
\>", "Subitem",
 CellChangeTimes->{{3.8556525832896957`*^9, 3.8556526207575073`*^9}, {
  3.855652661491653*^9, 3.85565266373319*^9}, {3.8556527083849382`*^9, 
  3.855652762894784*^9}, {3.85565300635415*^9, 
  3.855653042308642*^9}},ExpressionUUID->"9f4f6450-6add-463b-ac96-\
8fe4c7835a33"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QmcXFWd8H3i+Iz6vvoQMt1PpzpGZPnAA6L4AOIwowMOyzAzLnwQnFfU
GUGW0QFchkH0ccRlRoWkE5ZANtYQEIgsiYLsAZQIhF12EkhkCdXV+961nPPW
3c+5W63dVbfqVx+Kuvfcc+/3nJvuW33PPed/djvpm8ee+o6ddtrp399d/N+x
J373U9/5zonf+/zc4srxZ/77108785ST//7Ms0457ZTv/OVJf1ZMHCjmPf+d
O+1U/G8nGfESIQlqmhD+vIEE+1MEjxWSgo+Pj4+Pj4+Pj4+Pj4+Pj4/fYN9N
920R8ccK04OK/5j+ZKFswsfHx8fHx8fHx8fHx8fHx8dvqB/CqUlCiLis0dtK
M1YaPj4+Pj4+Pj4+Pj4+Pj4+Pn7T+NFHEzHbInA70f1/KBNVY3x8fHx8fHx8
fHx8fHx8fHz8xvnS12Yk9O1Ct4MlL1EXd8eosuHj4+Pj4+Pj4+Pj4+Pj4+Pj
N4vvL0ugQGW8tF1K7B/YjI+Pj4+Pj4+Pj4+Pj4+Pj4/fcD94OOFbFlqyP7+I
26hkEoHjWp/4+Pj4+Pj4+Pj4+Pj4+Pj4+E3iq1KEE8WX+xL+lUACPj4+Pj4+
Pj4+Pj4+Pj4+Pn7T+HGFccavicrLLJSl2H3x8fHx8fHx8fHx8fHx8fHx8Rvq
R242yxa9c0kzdvcy6o2Pj4+Pj4+Pj4+Pj4+Pj4+PP8u+CF0MTxJ6YolyRGYT
ESv4+Pj4+Pj4+Pj4+Pj4+Pj4+A3zRWRC9EsvRfSxo1NEcAkfHx8fHx8fHx8f
Hx8fHx8fv2n84A7Kcshx9EOWB+nlCsuLj4+Pj4+Pj4+Pj4+Pj4+Pj984P/7Y
0TniyyaEt13LIcopLz4+Pj4+Pj4+Pj4+Pj4+Pj7+bPqBXCI0taz93bDc/l1L
HAofHx8fHx8fHx8fHx8fHx8fv/l8EZJHSwsUotRL6EsivgT4+Pj4+Pj4+Pj4
+Pj4+Pj4+I3yI1JEeC51zW2/Cj9YrFQyHz4+Pj4+Pj4+Pj4+Pj4+Pj5+Q/zQ
cpRxzMpKIPT1kJ3x8fHx8fHx8fHx8fHx8fHx8RvrR3siWCIRWCj7aN42EZqK
j4+Pj98YX+SnpBh9W+bSL8jpP22SU1vukJMv/VpOvbReTv7xWjnxzBo5+dTV
cuLRZXL8kYvl2KZFcuyBn8qx+/+r+PmT4vu/i2nny/FHLy6+l8mJJ6+Qk8Y+
z1xTPMaG4rHWy+niMae3P1g0npP5kR2W2ST1x8fHx8fHx8fHx8cPyVGyDFHH
DsbU1lbs9eDwOnx8fHz8mfKNdpj84FaZ3Xa/nHh6jRx7aLEcve97cui2r8vB
X31BDq49SvatOkD2XvRB2bu4y3r3dMjMImvZ+HSWrW3WdvPTWV/caaUt7val
G/t22OspmV4838pj5rePY2y76AOyb+VHZf+aI+TgjcfL4dtOk6P3fs9sh5p6
8kqZffVeWRh42axLpfVv9PnHx8fHx8fHx8fHT64fpYroEkds8CcL7VOE5sHH
x8fHr9wXoiDzw9tldvvv5eSz18rRh86Tw789XQ7+8rOyb8X+Mt2Tkhm7PSbj
tO8YaU77j93Ok+lx2oC63DYfo40nbW7vtvL3eO1FXtuR1TbkbjPamJw2ouJn
uqerrn5m+X5y4Np/kMO//lc59uDP5OQza4t1f8BsC5OFbNv9++Pj4+Pj4+Pj
4+PPhO/FQxJqRt+i8n/tkEI9QNCOrKSSCx8fHx+/pF+YGpK51x8xx3+N3vcD
OXDdZ2Tmgt2s9pnz59vtLim7v0+HzBTTvH49ej8fbdnYx+jjs9hp7+m0j9Vh
twF1KG06XUq7UKfXX6gZ/CUfkH1XHipHNnxNjm46X06/cqfMD28L+8ep6vw3
+t8fHx8fHx8fHx8ff3b8qJ3jEkRIeX3btO1+tJzC4+Pj47epn8+Z8Xsmn7tB
jt7/Izn4q+PNfjTuGK/FSl8c5e20mWR61HaYztBxYBm7LcfJ77XjpKw8ZtuN
10fIf7wk+X2XfEgO3vh5OXrff8qpP66V2R1PSpGfbt5/f3x8fHx8fHx8fPyG
+voGEUgJ2yfcFYGsIrAUXUJ8fHz8NvWzo3L6zUfk2KMXy+Gbvywzy/ay+8xY
bSbOmCynD402zssZs7XYGuOl9sFxPtPO9sV2nx8ljpA1/qtDaWtR2l1a2V+6
wIzNNHrf98043fmJ/vb9+cPHx8fHx8fHx8f3LUSWRwSdSCiwb9i6r7T4+Pj4
begXRtNy6sUNcnTj92XfdZ+VvUsXBsdkuWOv/GO0QtKM+D3O2C3tGE5bTMpt
P3H75th9eszY0oHjtaffv/pgOXz76XLy6TUy1/eC+2/Waj9/+Pj4+Pj4+Pj4
+HF+bFrwyCWKGJ1LhG5WEvDx8fFb1M+PZ+TUc7+SQ7d/w4wtHTqWSht7Fd4m
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
Hx8fHx8fH7/JfFWKcKL4cl/CvxJIwMfHx6+Dn58y++IMXPFX3hgf5Z5e78Ph
3bOrsYu1eMU9Vl+RjHafr/Qr0ebD8vUBCfEHVv+lHLnne3J6691m20TLnf8W
8UV+Wma3PyhH7/+R7Lvyk3X796/nz1//yo/KicdWSJEdrXv9I/ev4oWPj4+P
j4+Pj59gP64wzvg1UXmZhbIUuy8+Pj5+tX4hJyeev172r/6YNs4nrY0D8t3L
L1bmK/enq/1C1NjEdp8PM2ax1m+kWx9f5LzNPkPHy/FHLpLTO56cufqXPGyL
//vPsG/EhZp87gY5vP5k2XvxnmX/+8/Gz1/mkn3k2EOLi78CIzNWfydPu/77
4+Pj4+Pj4+O3mx+52Sxb9M4lzdjdy6g3Pj4+fim/kJeTz14r+1Yd6BsL5MxN
3uH27fDuv51+IPYc6Mp9vXff3im12MNu7BllvnS3naBDdy/dT47dc47Mbr3X
7jM0g/WP2tgu//6N8PNZOWX0Ndp4ruxfeUDg379RP3/Gz93EY6ulzE219vnH
x8fHx8fHx8efBV+ELoYnCT2xRDkis4mIFXx8fPwyfCNG/+SL62Xm8kMC9+EZ
5T7cjA1jjunptOeYcvp+pPT5qtS+Hj3WeJ/gWKIOZc50pZ9Hcbnvkn3M+NPT
RpxhkZvx+kflVzfgz46f7X/RjDHVv/rghv38qT///Ss/IsceXykL+alZqX/U
Xu3y74+Pj4+Pj4+P34q+iEyIfumliD52dIoILuHj4+OX9IU551P/mk+580D5
Y8T4+2i4cYbN+2y1/4/Rn8OZt9x3r67EklHjE6uxi/su2VuO3H6GNQdVITtL
9W/0+ceP9gsy+8YjcuS+H8jMiv1m/Oev1M9/38oD5OQza8wxmbNT/6hDtMu/
Pz4+Pj4+Pj5+a/rBHZTlkOPohywP0ssVlhcfHx8/6BvzmPdf/SlvHI52f93p
3j+Hxnxx4sXY43W8OaX8cWE6lHt7p69HhzeO6MI95MgdZ8rsq/dKobQNtcP5
x6/AFwU5vf33cvTu/5C9y/au28+fNg6tzJ///ssPkVMv3jK79Y944ePj4+Pj
4+PjJ8mPP3Z0jviyCeFt13KIcsqLj4+PL2VhYIscvPlL0plL3Lr/TSmxge17
Y3WOKfue3J1/3Ln/dtuN1H4YHd6YICcmsS/WzMDao6yxPJMDs17/GAE/Cb4x
B9/L6+XguuOUn7PKfv68+EXV//wPrD1a5t7c3H7nHx8fHx8fHx8fv2I/kEuE
ppa1vxuW279riUPh4+Pj+/3C5KAcNcbwLFngi92ij8vx4gJby2n7vtnLl1Ly
e2OAomMP2304Lt5Tjtx1lszteKoh9S/3hZ8cXwxulWMP/FT2L9+39M+fm9ZR
x5//Ljm04RRZGHm9IfWP2x8fHx8fHx8fH795fRGSR0sLFKLUS+hLIr4E+Pj4
be4XcmZcFWP+Jj2GbzB2rxrr17yfVtOV2DDWHOXWvXJamTfKf/9txHYZXHuk
6Rdy442pf6PPP/6M+yI/bcY8H15/iuxdktJ+/nrVvm8z9POfufADZuxtJ9b1
bNc/Pjc+Pj4+Pj4+Pn7j/YgUEZ5LXXPbr8IPFiuVzIePj992fnbbRtl35Se9
WCyLlNgs9r2uNzf4fD3ur39smTu3VId2b22l6XFd0hfuasaSyQ281ND6Bxfx
W93PD22Xo/f/SGYu3tPXV2jmf/77Vh0op17a0ND6h+bDx8fHx8fHx8dvCj+0
HGUcs7ISCH09ZGd8fPz2843xOEM3fUm7z/XuiVNanwp3zij1ntof11eJFazG
DXbj+9r79S3fV45tWizFeF9D6x9m4reXL6ZH5MRjK8x5ymbr59/JO3T9MTL3
9jNtff7x8fHx8fHx8fHjt/u3BEokAgtlH83bJkJT8fHx28gv5OX4I8tk79IP
hsTq7bLjreh9Irx7506vf8Rir6+ENf6mw053Yv12u8fLmHNAHSzHHl8thT3u
pm3PP37z+aIgp7bcJQeu/YcZ+/nvVWNnO3Gzly6Qo/d9X8rsaGPr79uCj4+P
j4+Pj4/fYL+sMkQdOxhTW1ux14PD6/Dx8dvRz6WfkYNrD3f7Sqixe714LF36
PN9K+5E25707j3i3L12fI2rg2s9a42xEvuH1x8cv5efeeFiOrD/Z61NU48+/
NVZNaT9y25+837/+VR+T2e33N0X98fHx8fHx8fHxG+1HqSK6xBEb/MlC+xSh
efDx8dvDF/kxObLxh+a9rzdmptOLvevev3bbc3o7/SSUuL2L1bajbiX2itJn
wonjUnSG139VTu94pinqj49fqZ/vf0UO3366zCxJVfHz783v58UwSilj2MJ+
/7rkyJ3floWJ/qaoPz4+Pj4+Pj4+/uz7XjwkoWb0LSr/1w4p1AME7chKKrnw
8fHbwp9+fZPsu+IQvW+E3dfBiSmdce5blTgsGad/kTq/k5vP7hNx/nw7T8rt
HzF443Eyu+PJpqk/Pn4tfm5wixy+/QxzjrRyfv4z588PxMYOxDKK+f3LXPoh
OfH8jU1Tf3x8fHx8fHx8/Nnyo3aOSxAh5fVt07b70XIKj4+P3yq+mBySw3ef
5cVPcfs2eHPUe/exKTvGijrWRo3P0hmIw+uPbTR43Wfk9J82NU398fHr6ef6
XpQj60+J/PnP9HQFfl/849Aq+f0buvkEmR95s2nqj4+Pj4+Pj4+PP9O+vkEE
UsL2CXdFIKsILEWXEB8fvxX96Zc3yMzyfa05nBbbfR6UOCrW+JcO5V5Xue+1
71kz7roTi0Udg+bN6dT/y8/J6dd/31T1x8efKT/71lNmG47z859WYhdllE9n
7rRafv/Sy/aUU3+8pqnqj4+Pj4+Pj4+PP3N+ZHlE0ImEAvuGrftKi4+P37K+
yI7JkTu/Zd+Lptz7VzVetXkPu9gbG6ONiXHHnvnHyATTBtb+o8xuf7Cp6o+P
P1t+/s3H5OC645X5zfR3PX//Btd/VebH+5qq/vj4+Pj4+Pj4+PX1Y9OCRy5R
xOhcInSzkoCPj98yfm7HE3LgskO0+1bnnlONt6vP1xQSQ8XXJqTet5pjZVbs
Lyeev962m6f++PiN8LPbH5D9Vx2m9bWbid+/zKX7yezWe5qu/vj4+Pj4+Pj4
+PXxy9oYmTm4Ifa4SqaYKN74+PhJ9UVBTmxeJTNLF4bGy/XGx3SEzPXtxNP1
xR1a3OXr11Dc98Ld5Oj9P5GF3Ghz1R8fv9F+ISsnn14j++yxnjPx+2eOW1vc
acYck7nJ5qo/Pj4+Pj4+Pj5+fX3hS4poYwrbX4QdUKifQrqlE+E8Pj5+cv38
yOty6PpjtPYhvV+DN95Fj7HbaY2LceKruGNlfLGs7X2GNnxNFka2N1398fGb
yS9MDMjR+34ge5csqOvvnxb3uvjZf9WhMtv7fNPVHx8fHx8fHx8fv0Y/pDgi
aq1E0St6Cd8nPj5+Iv2plzbIvmV7h49xccezdEfMc9/ti5lixdvV5jorpg1c
e5TMvv5wfequ1qUFzj8+ftQrN/iKHL7pizX//gX6B6rvpQvlxGMrKytgm5x/
fHx8fHx8fPxE+6XSY7OG1UMEktRDxFcXHx8/Ef70mBy5/euBObjd+ZPMOZY6
Q+49lf5GSswUqz2p000305bvJ6eevaE564+PnxB/8uXbZf+qj1f8++elq3k7
7W3d1rxqTl+/m06Q+Yn+pqw/Pj4+Pj4+Pj5+BX4xTYQxIXuFOfFeOaXDx8dP
op8f3Cr7rv6UPoeS2y/BGcvS6bYfOfeT+n1mpy9uSkq7Nx25/Qz7vrP56o+P
nzRf5Cfk2AM/lb1LUmX9/jnj0Yzf67TSdqQu+3//+1YeILNvPd6U9cfHx8fH
x8fHxy/f19ZExLGFb73Kl3oYfHz8ZPpTr94tM8v2su4l1bgnxfvMjG+cSsYZ
2+Lvm+DEOfHN1W3cu/avPticu6lZ64+Pn2Q/9/ZzcmDtUZG/f1r7jzpu1Gz/
deITdUT//l+wUE4+u7Zp64+Pj4+Pj4+Pj1/CL3W8iOMG26ACCa4ZlErXFR8f
vxl9Iccfubh4P/h+r5/B4vlKXyF1rm3/Pad376nNn6S8M0sXmLF3C7nxJq0/
Pn6L+IWcHN+82pw7UG+3TQXbc52Y1u7vbHdZv/+jd50lC/lsc9YfHx8fHx8f
Hx+/ZI7A0UrE2o6dV00vaEyyUDbh4+M3s1+Y6JeDN/2TeQ/oxBxyx5CpY1D8
Y856nDEs9vbz59vLHVpMlP41fyuzO55s2vrj47einx96TQ6sO9Y3hszrN6SP
Fe2s+Pd/cO1RsjD8etPWHx8fHx8fHx8fP8QP4dQkIURc1uhtpRkrDR8fv+n9
XPpZKwZuj9fPQIt9q8TCdduFlL4HVgzrTrcPghZL94Jd5dimRWb/hmatPz5+
q/tTz90o+y7Zx403n3Hag9S+f1X+/mcu3UdOm+NIm7f++Pj4+Pj4+Pj4uh99
NBGzLQK3E93/hzJRNcbHx282f+L56814I9Y9Ycrt/xOYu8zpQ6DOp63MqWTG
LnH2tfcx+hrkh7Y2df3x8dvFF6M75NC640Pacztr//1fulBObl7R1PXHx8fH
x8fHx8dXd/OXR/iyirAtWonCHfWQUWXDx8dvVn/soUWB/j+9SpxqNYatsZzp
8fUzcONXe/MqWf0PUnL03u9LUZhu6vrj47ejP/b4SplZuqs2PrRev/+jd3zT
7TvYrPXHx8fHx8fHx8cPliVQoDJe2i4l9g9sxsfHby4/Ny2Hb/u6Mo4k5Y03
MWLaGvd/9jxmxjZjnuy0G9uk2+4zpNxfqvOfrfyonN7+UHPXHx+/zf185gXZ
f/Vhdf/9N/sR3nicFJNDTV1/fHx8fHx8fPx29oOHE75loSX784u4jUomETiu
9YmPj99cfmFiQPb/8rNu3Fp13qN0T0pbd/sK9HhxSrRlu19B2u5rMHzrSbIw
2d/U9cfHx7eX81Ny9L7v1+33X+2PNHDVJ2Vu+I3mrj8+Pj4+Pj4+frv6qhTh
RPHlvoR/JZCAj4/fDH5+6FXZd8VfKfd6Vl+BjHafp86Vrce01eLdKjFvey/a
XU4+vabp64+Pjx/cP7vtPtm3Yr/qf/8Xe21G7lg0Y/vyfc05Dpu9/vj4+Pj4
+Pj4bevHFcYZvyYqL7NQlmL3xcfHb6iffeNhmVm2jxZ7NhCz1u4PYMas1foN
dOvjS+y30Y9g4Np/MOfebvb64+PjR/uFsbQcMGJcV/j7741D87Ul2e1GmQt3
k1Ov3FnSb3T98fHx8fHx8fHbyY/cbJYteueSZuzuZdQbHx9/1vyplzfI9IVW
3FqvbUiJPe3GHlHmy3bvEzv0diTlHnD07rOkyGebvv74+Pjl+ROPXmz3MSz9
+5+xx5hl1H5HThzs4jUkvXi+tbwkJceeWJ2I+uPj4+Pj4+Pjt4cvQhfDk4Se
WKIckdlExAo+Pv6s++MPX2iOL9NjzqZCxpLY/Qh8c2X77wPNe8MLdpUTz16f
iPrj4+NX5hv9f9IX7Rn9+29fH8zYREZbkNmfyL52mH2PUvp8afb+Ixv/s/gn
SqHp64+Pj4+Pj4+P3+q+iEyIfumliD52dIoILuHj48+yL+TIfT9SxpP54w85
8xkF5yvyYtemAjFKMisOMGOOlPYbXX98fPxqfSOW2cDVnwr8/rt9hHqU9mQn
xpnW/8joT9QduP4M3/avUhZyJf347XEprXH+8fHx8fHx8fFnyw/uoCyHHEc/
ZHmQXq6wvPj4+DPvC28eIzVeiNIXwJvXukNpN1LGoWn3d1bfooEbjpFiLJOA
+uPj49fqi/yUHLnjTCWGWacydtXX9qyMV3XbmiOuP0O3fNmca63Z64+Pj4+P
j4+P39p+/LGjc8SXTQhvu5ZDlFNefHz8mfBFIS9H7vq20g+gQx93pj7jX6zf
55lzHC3usvN3SnV8ydgDPy0ePd/09cfHx6+vb8xlmFm6UIlZZLUJOdeMtNP+
7LYbpUpef4ZuOsFsh0pC/fHx8fHx8fHxW80P5BKhqWXt74bl9u9a4lD4+Piz
44v8tBzacIoXFyQ09qwem9ZrG9LHnznj0tIX7y6nXrkjEfXHx8efGX/6T5vM
ee7Tdruxd51IKdcLbwxaOdefwRuOlTI7Wpbf6Prj4+Pj4+Pj47eyL0LyaGmB
QpR6CX1JxJcAHx9/ZvxCfloO3/pVe67qLj1OtTsuZL43H5H2/L9DmQfNi12b
WfFhmdvxdFl+o+uPj48/s35+eLvsv/KTdluP1y5kXlvsvkaVXn8G1h4t85N9
ZflRNXKXWvz84+Pj4+Pj4+PXz49IEeG51DW3/Sr8YLFSyXz4+Pj183PjcnDd
8fa9WbceY9Zp91nU4esr5PUlcseSKDFr+64+TOZH3kxG/fHx8WfFL0wNyoHr
j1XmNuvQ2paruf4MrPlbWZjoS0T98fHx8fHx8fFbyQ8tRxnHrKwEQl8P2Rkf
H7/O/tSwHLjuM24cIXWMR2AeM2XdaxNKaX2KjPfgTV+UhdxoMuqPj48/q74x
vnX4ttOta44St7qW60//VX8txejbZfmlStvq5x8fHx8fHx8fv15+tCeCJRKB
hbKP5m0Toan4+Pj18wtGP6Jffk55ht/hxf9w2n+cuNWBWNVWvrSvT8DInf9u
z1vd/PXHx8dvnD+26XwvNnUdrj99VxxSPGgm4ET50dva4/zj4+Pj4+Pj49fF
L6sMUccOxtTWVuz14PA6fHz8mfCNuYIGbjhWm6PMjP9h3pd1uvdhTl8hNXa1
F4+oS5vnenTTosTUHx8fv/H+5LPXy8ySD9Tl+mP2K1pzqCxM9Cem/vj4+Pj4
+Pj4yfajVBFd4ogN/mShfYrQPPj4+PXzRT4rh27+kvnsPq3ML5RxY8SmvPsv
Z257NXa1mb/bntO6mG/prnL6hZvL9sPW2+n84+Pje+vZ7Q/K3mV7VX39sZa9
2NcD1xwhxeRQ2b6/5u12/vHx8fHx8fHxq/G9eEhCzehbVP6vHVKoBwjakZVU
cuHj49fPL+TlyIYTrWfy588PxIYNxAOx+xo5MWUzzn3bInvcx8V7yuwbDyWn
/vj4+E3n59PPy8yl+1V8/em127m9NiXrc+j6Y8xxtUmpPz4+Pj4+Pj5+svyo
neMSREh5fdu07X60nMLj4+NX7hfkyJ3f1uecVuYU0uYwU8Z6ZHrUdqSUPfdQ
8XPZ3jL71mMJqj8+Pn6z+vmh7XJg9YFlX3/UcWj+65mRf+BXxxUvedOJqT8+
Pj4+Pj4+fnJ8fYMIpITtE+6KQFYRWIouIT4+fm2+kMP3nK09g3c+nbmDjPgg
1v1Yt9bPyJ2TuscbC5JZsZ/Mp59LUP3x8fGb3S+MvCn7L//rktcf69pltRll
3PUuN7aR0xY+dMu/FA+aTUz98fHx8fHx8fGT4keWRwSdSCiwb9i6r7T4+Ph1
88fu/4kXH3ax/s4sSrntR2q8WLMNafF8bTyHmb58P5nreyFR9cfHx0+GL8Z6
Zf/Vh0Vef6x3Z2CsmTovmpo2vP7k4mELiak/Pj4+Pj4+Pn6z+7FpwSOXKGJ0
LhG6WUnAx8ev2h/btMhuI/LGcTj3Wlp8IuU5fGAsh/0sv3/1wTI3vL0iv1Su
Vj//+Pj4lfmFiV45cM2RgetPXJuQ2m7kXMfSdvv3yF1nVeQ3uv74+Pj4+Pj4
+M3sl7UxMnNwQ+xxlUwxUbzx8fEr8Cf/+Et37iBvXFl4vGr13iqjxf+w3v1X
fkLmR96qyC8rqy9TK51/fHz86nwxNSwHrvtHZZ6zlN4+5Gvj9tq3u7W2Jec9
9ocLKvLLqlYLn398fHx8fHx8/LJ84UuKaGMK21+EHVCon0K6pRPhPD4+fmX+
tDHf9JIPeHNLL9Lbh/R+Rd54Mz0mbKc5Lq1/zd/K/HgmUfXHx8dPuJ8dlYM3
fN5uv1bHyvpiWfvau4Nj0qzr2OSLNyer/vj4+Pj4+Pj4zeqHFEdErZUoekUv
4fvEx8cv288OvCQzy/ZSYr4Gn7+78V/d2NVh80x3y74rD5FCaSNKQv3x8fFb
wy/kx+XA9Z9z24DMmEXqXGc9XcH+kb63c63rW7pQZv/0u4r8qE2BtRY9//j4
+Pj4+Pj4kX6p9NisYfUQgST1EPHVxcfHj0sy4sD2rTrAbOPJhM4Z3eHeV6WN
5+yBey/vuXz/5X9ZPN7bFfl6evudf3x8/Pr6YnpYDq492uoX5GsXUsfSZpTr
XNT1r++SvWVucEtFfuzWNjj/+Pj4+Pj4+Pj+NBHGhOwV5sR75ZQOHx+/El/k
J2T/tX/vi/Xa4T17d+cKSilxrDvd+yn1Pqtvxf4yN7StIj8qLfzVeucfHx9/
ZvyCEa/IiG292Ik5lHKva2ml7Uhdjrr+Daw+2GxPr8RvdP3x8fHx8fHx8ZvJ
19ZExLGFb73Kl3oYfHz8Cn2Rl8O3ftWOz2GNHcuocYd6UtZ6j95nyIr7qj+b
zyzfV+btZ+6JqT8+Pn5L+2ZfySv+ymv/UcfN2jHYyr3+Daw92mxXr8RvdP3x
8fHx8fHx8ZvCL3W8iOMG26ACCa4ZlErXFR8fP+iPbPy/7ngL9zm7MceZ21dI
HYOhjM/QYnl0yL5L95W5vhcq9t3VNj3/+Pj4M+/nR3bIgdUHBWNau9e18q9/
Qxu+ViQLFfmNrj8+Pj4+Pj4+fsN9N923pUSs7dh51fSCxiQLZRM+Pn6cP/7E
5e44MifmkDuGLGTeHzddmTvaXL9oL5nd8VTFvl6V9jv/+Pj4s+eLwVdlZsWH
fWNlq7v+jf/uZ4mrPz4+Pj4+Pj5+Q/0QTk0SQsRljd5WmrHS8PHxS/rZNx6W
vUs+oIzB8Oa81+Y2W6y0CynP3q0Y1sX7pwv3kNNvPlKxH1WHyG0tdv7x8fFn
3zf6PPZf8iGtHaja69/Uy7+p2G90/fHx8fHx8fHxG+lHH03EbIvA7UT3/6FM
VI3x8fEDxxrvlZnlH7HviVL2fZIz348Sh8h5hq7OJ+3cTxnvJQvk9Cu/TVz9
8fHx29fP7nhSZi78QM3Xv/RFe8p8/0uJqz8+Pj4+Pj4+fmN86WszEvp2odvB
kpeoi7tjVNnw8fEj/XxODlz/WT3mhhKnVY3haixnenzP2d341Z1y7PHLkld/
fHz8tvenXvq17F2Squn6Z3z2X/lXUk6PJK7++Pj4+Pj4+PiN8P1lCRSojJe2
S4n9A5vx8fFD/ZF7v2ePo0h54y2MmK7G/Y89j5mxzZgnOu3OD91tx+bwYrqO
bPxhIuuPj4+Pb7wmNl9S9fVPnf9x6NZ/kdp4/ITUHx8fHx8fHx9/Nv3g4YRv
WWjJ/vwibqOSSQSOa33i4+OH+5Mv/MqdB9p5Zp7uSWnr7rPyHiVOtbpc3D58
85eLR80nrv74+Pj4avLIfd+r+PpnLKftvkZOf6Sxxy9JZP3x8fHx8fHx8WfN
V6UIJ4ov9yX8K4EEfHx8NT3X+7zMXLibORd0uscbU6HH4+jwln3bnLiuQ2uP
loXceMV+ZPmreCXx/OPj4zehL/Jy6NavlH3987cpuWPRitfV7Lb7K/ereLXU
+cfHx8fHx8dvPz+uMM74NVF5mYWyFLsvPj6++SpMDsqByw5W5vbp1J+fG21G
RsxW7bl5tz6+ovjuW3WgLExkKvaD29rr/OPj4zevX8iNyoFrjix5/TNjV2vj
0PS2pL5l+8j80PaK/UperXj+8fHx8fHx8dvDj9xsli1655Jm7O5l1Bsfvy19
IYdv/pLdNtTpPivPuLE3rOW0MR7NvU/q0NuRjHitF+8tC32vVOE7Wdr1/OPj
4ze7Xxh9W/at/Gjk9c/pO5SxY15n1H5HThzs4jW0f+3RUuSzFfuNrj8+Pj4+
Pj4+/sz7InQxPEnoiSXKEZlNRKzg47e5P/bEavtZeCpkLIXdj8hN69TGWLht
SktScnr7g4msPz4+Pn45fu7tZ+yxub7rn9IOZMYmWjzf7k9kXzvtcWfOfGlj
D/y0Kr/R9cfHx8fHx8fHn0lfRCZEv/RSRB87OkUEl/Dx29zP978oM0t31eKv
WvP56PP16LFbU4EYHeOPXlqVX6Javn1a7/zj4+Mny59+4ebA9c9sF9LmOOt0
24T0/kedxbxWm9H0tt9V5Udvj0tpnfOPj4+Pj4+P3x5+cAdlOeQ4+iHLg/Ry
heXFx28/v5Cfkv1r/lZ7Fu7N69yhtBsp49AWdwX6FhlzPpd1DWmy+uPj4+NX
449u/L4Sw83qQ+TGr1b7ZCrjdd22dqc/5or9ZWFiIJH1x8fHx8fHx8efOT/+
2NE54ssmhLddyyHKKS8+fvv4oxv/U7mv6Q7G23Dne3bajlJKbFbr3qj/yr+S
MjuSyPrj4+PjV+UXsnLo+mPc9nOn/2Xa7XPZYcWzVvtk9qj9MDvM9eH1J1Xn
N7r++Pj4+Pj4+Pgz4AdyidDUsvZ3w3L7dy1xKHz8dvanX7vfF3tVj83qtQ3p
48+8OZ6L2y/aU2b7X67Kb3T98fHx8WvxxXhGZpb/H/NamLbbzb3rZEq5Xnpj
0MJiX0/+8fqqfPOzjc8/Pj4+Pj4+fuv7IiSPlhYoRKmX0JdEfAnw8dvJz4/3
Fe9v9lPGRcz35uPRnn93ePc5SuxqZwzF1Mu/rsoPz90+5x8fH781/Pybm2Xm
goXK/JBeu5B5bbX7GqWVeSP97e/pC3eThaEtVflxNXKXWvj84+Pj4+Pj47ea
H5EiwnOpa277VfjBYqWS+fDx28AfuuWfvXafRR2+vkJeXyJ3LIUSs9Wax6dL
jj74s8TWHx8fH79e/tgTl/ni/Xcrcd6ctqFuPca17/o7uPZoKfPZqvyS9Yp9
Jf/84+Pj4+Pj47eeH1qOMo5ZWQmEvh6yMz5+u/jTT14VnMdMWffahFJanyJ3
zp7i9oEbjy8eLF+V3+j64+Pj49fbH77968o1VY9b7ca3Vtrew66/478/L7H1
x8fHx8fHx8evpx/tiWCJRGCh7KN520RoKj5+O/j5oW0yfeEe3jPv0FjVXXa8
Df2ZuNN2lLn0Q1JOZKryG11/fHx8/Bnxs6Oy74pD7OuqE+u/272euvHfnPb3
sOtvz/tldseT1fmNrj8+Pj4+Pj4+fr39ssoQdexgTG1txV4PDq/Dx28/f3Dd
8e59i9NXSI1d7cUj6tLneVbuZ6a23Fm1H1WLdjn/+Pj4retn33pK9i5d6JsH
IGWP1VXaj2Kuv/1Xf8qcS60av9H1x8fHx8fHx8evnx+liugSR2zwJwvtU4Tm
wcdvF3/yuevMexZvDJkyPqKnS7l/6bbndO6yl73YqyP3npPY+uPj4+PPtD+2
aakVx02Z3yzjzhFQ3vV3/JGLElt/fHx8fHx8fPxafS8eklAz+haV/2uHFOoB
gnZkJZVc+Pht4pvzm136Ib1vkP2s24mpmnHuW5Q4RBmnf1Fxuf/KT8pCYTKR
9cfHx8efFV8U5ND1xwbmBgjEI4q5/maWLpS5wS3JrD8+Pj4+Pj4+fk1+1M5x
CSKkvL5t2nY/Wk7h8fFbzx/ZcKo3h5ky1iHTo97HpOwYGSltHISZb+muMvf2
M4mtPz4+Pv5s+fnRHTKzbC89tluF19+B64+p2g+Uvc3OPz4+Pj4+Pn6SfX2D
CKSE7RPuikBWEViKLiE+fmv701vvMeNjWPcj3dpzbmdO5t4efR6ejH3P4oyJ
mHxsRWLrj4+Pjz/b/vTLG9y5I6u9/k49u7ZqX11qx/OPj4+Pj4+Pn1w/sjwi
6ERCgX3D1n2lxcdvF396TPat/KgeO9V+pm3GVu0JGRPhjj2z1o3Y17JQqM5v
dP3x8fHxG+QP33a6O4a3mutv+uI9ZWH07cTWHx8fHx8fHx+/Uj82LXjkEkWM
ziVCNysJ+Pgt7Btxp517jox7T6LOdd/pPcvW4mbY+yzbRxbG3q7ab3T98fHx
8RvmT4/IgVUfq/r6a7bTrz+pej90cxudf3x8fHx8fPzE+WVtjMwc3BB7XCVT
TBRvfPyW8nNvPiJ7l6SUGKnGHDwd5pgG/1z3bkyiHv0eZer5dVX7YZna6fzj
4+PjT29/sOrrr9PGP/Xy7VX7aqZ2PP/4+Pj4+Pj4CfaFLymijSlsfxF2QKF+
CumWToTz+Pgt5xePMXjNUfbz6g5lTIPyHNsc35Cy71+87U4s1cGbvli97362
6fnHx8fHt/2RO79V8fVXvWYbY4cLufHE1h8fHx8fHx8fvyI/pDgiaq1E0St6
Cd8nPn6L+ZPPrFHGM3SHznPvprsxM6x4q+Z9y4W7ydzwa1X7sa82OP/4+Pj4
7u7TQzKz4sNlX3/d8WlK36KxTT21FcJflzY6//j4+Pj4+PgJ9Eulx2YNq4cI
JKmHiK8uPn7yfZEdlZnl+xXvOTpD7j28exI1ZobVntTppo89vrpq37/Ubucf
Hx8f3+9PvXhr2ddfr2+Rd93OXLCrzI+8XrUfV53IrS10/vHx8fHx8fET4hfT
RBgTsleYE++VUzp8/Nb0xzb+yI2Pat17dCgxijrdOXX0uEXeOIfBtUcXgUJi
64+Pj4/fjP7QLf9S8vprtA0549GMPkVppe1o6PbTa/LVtHY8//j4+Pj4+PjJ
8LU1EXFs4Vuv8qUeBh+/Vf380Kvmc2fvHqQ7+Gza3pbxzdVstiktXShzfS9U
7Ue92uX84+Pj40f5xhz3vcv2irz+erGsO/Rxw2YsI2uf3BsPV+03uv74+Pj4
+Pj4+CX9UseLOG6wDSqQ4JpBqXRd8fGT7A/d8s8h9xzevYcXG0N/W/ctKTn6
0KKafO+zPc8/Pj4+fpw//uQVkdffQHu+E9PavWZ3y8G1R0mvv2fy6o+Pj4+P
j4+PX06OwNFKxNqOnVdNL2hMslA24eO3hm/Ov2yOV+h024asMQx229D58+3l
Di0mhtOe1H/lIVLmpqr2G11/fHx8/Kb3RUH2//KzgeuvdV32+g3pY4Wta7oT
c27quXXV+42uPz4+Pj4+Pj5+nB/CqUlCiLis0dtKM1YaPn4r+YW87L/6b7R7
DOPZsxXD2rkX6dBiWXvjGqx7kantm6r3IxLa5vzj4+Pjl+nn0i/I3qULtOuv
M99AxmkPWhR+rTb7Hi3fX8rsWGLrj4+Pj4+Pj48f50cfTcRsi8DtRPf/oUxU
jfHxk+2PP3m5Pp+yMqeOMW7BfXbtm2/HiXU9fOtJNfmNrj8+Pj5+kvyRe8/x
5hrwxa722vPteNeLUnr/o+J77Hc/r8mPrlB7nH98fHx8fHz8ZvWlr81I6NuF
bgdLXqIu7o5RZcPHbxE/NyYzl37IN8dyt/uc2n0GvchqM7LaizrcZ9aZpbvK
/ODW5NYfHx8fP2F+fqJf9l2yj3edNmNXd3jt+oH+nx3eeGIj1twFu8rCaLpq
v9H1x8fHx8fHx8eP8v1lCRSojJe2S4n9A5vx8VvAH3vkYvueotu73/DHsFbn
NFPbkYp5xx78eaLrj4+Pj59Ef+KxleZ1OG3HsA6OC055480W2dd4ex5LY9vI
xv+b6Prj4+Pj4+Pj4/v3Dx5O+JaFluzPL+I2KplE4LjWJz5+K/giOyr7LtlP
i1vdq/QrShvPnX3Po437DTcWxvL9pJgeSWz98fHx8RPri7zsv+pQr23fiVnt
tud3ue1I6rqbd+lCWRjZkdz64+Pj4+Pj4+P7fVWKcKL4cl/CvxJIwMdPtj+2
aXHwGXRPV+CeQu9D5LUZTTx7faLrj4+Pj59kP7vtd0pbvjc+OO2ML+vR+xmZ
/YqUOHMj93y3Jr/R9cfHx8fHx8fHj9w/EhJunkrLLJSl2H3x8RPqF6aGZGbZ
3vr4Mvud1sah+cYz2O1GQ9ccWTxIoWq/vGq17vnHx8fHr4c/dNMJ2vwC/pjV
Tn9QM9a11m+025w3LT+8vSY/fFv7nH98fHx8fHz85vEjN5tli965pBm7exn1
xsdPiG/Md6OPQ/DagDLOGDNtfjPnObQ1B3P2jYdr8kM3ttH5x8fHx6+Hnx98
VfYtXaiMO7P7hTrXbXvdnHvAbSfqcK/5I3d+O9H1x8fHx8fHx8cPFUN2EmFr
InRjIF9kNhGxgo+fMD8/3ifTF+2htQNllHYgMzaRGYOo057jzH723GM9jx7+
9ak1+eGv9jn/+Pj4+PX0Rzb+pzXXmb//p9OPyE3r1MYYm9d/o0/R4Jaa/Mis
bXL+8fHx8fHx8ZvDF5EJ0S+9FNHHjk4RwSV8/AT6Yxt/rMWoMGOdGu1C2hxn
nd4cyto8yymZG9hSkx+9PS6ldc4/Pj4+fj39wkSf7L1oTzeWnDu2zDdfpTMP
mv/6P3Tb6TX5pV6tfv7x8fHx8fHxm88P7qAshxxHP2R5kF6usLz4+Anxx3pl
5sLd9GfLdh8iN361+kxaGa9gjlG448za/Mj9ol8tdf7x8fHxZ8Afe/CnSnt+
hzIHgTIObXFXsG+ReX1PyULfKzX5ja4/Pj4+Pj4+Pn50/ojjV1A2IbztWg5R
Tnnx8Zvbt8YnKG1D6hxndpuQ9cy5w4pnrT6TXrpQ5oe3Jbr++Pj4+K3oFyYG
ZO/Fe+ltQfa13OkL6s1NELz+D9329UTXHx8fHx8fHx8/kEuEppa1vxuW279r
iUPh4yfNF9MjMnPxnnasIScekbWctu8bvPmTU8rzaOveYvSus2ryw3Zpp/OP
j4+PP5P+2EPn29ftDq2tyLuud0Vf/5cskPmR12vyy3216vnHx8fHx8fHby5f
hOTR0gKFKPUS+pKILwE+fhL88c2X6OMPnGfNPer8OF67kNm/yH7WnDH7Eunz
J1fql/9qzfOPj4+PP5O+mBqWfZfupcSwDsaujrv+j9z/w5r80LQ2Ov/4+Pj4
+Pj4jfYjUkR4LnXNbb8KP1isVDIfPn6z+oWs7F95gD2PmfJ82T+2bLHyvFm5
txi99/u1+c5yu55/fHx8/Fnwxx9e4vUdstv6nRhFpa7/xjyYYnK4Jr/R9cfH
x8fHx8fHDy1HGcesrARCXw/ZGR+/2f2p59cpYw26tDFm2vgEN66psrx0oSyM
vp3o+uPj4+O3hZ8bl33L99P6FLlzVpZx/R9/9JLa/LJrFP/Cx8fHx8fHx6/W
j/ZEsEQisFD20bxtIjQVH7/Z/YFrjjTntPHagLqVeZG77fEHHXZ6pxK7okuO
bPxhzX6j64+Pj4/fLv745uVan1DrWl/e9T+z4sNSFKZr8htdf3x8fHx8fHz8
8soQdexgTG1txV4PDq/Dx0+OP739Qft5sfc82YtD1OG2B2n3FHYc1MyFu8nC
aF9NfvSe7XH+8fHx8WfTF/kJr0+R21+o/Ov/1HM3JLr++Pj4+Pj4+O3uR6ki
usQRG/zJQvsUoXnw8ZPgD930Rfd+wYpr6vUV8mKadrjLGSd+dTFt+O6za/Zj
KxqR3ErnHx8fH3+2/dGHFltjzpTxZeVe//uuPkw5YjLrj4+Pj4+Pj9+evhcP
SagZfYvK/7VDCvUAQTuykkoufPwE+IWBLbJ3SUqLSW2OPXDmTT5/vh2rImU/
by7eLxTTnOfKhb6Xa/Ld/7fp+cfHx8dvhC8m+2Xmwj20vkKVXP+z2x+syW90
/fHx8fHx8fHb0Y/aOS5BhJTXt03b7kfLKTw+fnP5I3f+uzfGQI1fqrzdMWa+
MQnDt/xLzb663I7nHx8fH79RvtEftNrr/+BNX6zZV5fb8fzj4+Pj4+Pjz7av
bxCBlLB9wl0RyCoCS9ElxMdvYn9qWKYv+qD7DFkbZ6DMaZZWYldklM+pN/5Q
mx9Rr7Y5//j4+PgN9HODW2VmSaqq67+Rni/un+T64+Pj4+Pj47efH1keEXQi
ocC+Yeu+0uLjJ8Qfe+JyPT6pL1apObdNj3cP4cY8Lb4H1x6V+Prj4+Pjt7s/
fOtXK77+W32PUnLswZ/W7De6/vj4+Pj4+Pjt48emBY9coojRuUToZiUBH7+J
/b41h9vjCtS5kZ1nyB3eeIQe37iDYtrUy+sTX398fHz8dvdzrz9c8fXfzX/J
h6UoZGvy4/K0w/nHx8fHx8fHnz2/rI2RmYMbYo+rZIqJ4o2P31R+9q0ntPYh
d/5jZ/zBIu+dXjzfmwfHmOtm1YFSFnI1+Y2uPz4+Pj6+9Rq49u/Lvv67fYrs
5alXfpP4+uPj4+Pj4+O3oS98SRFtTGH7i7ADCvVTSLd0IpzHx29G34xf7ft7
P+PrW+Q8T9bSiu+Jx1Ynvv74+Pj4+NZr8qUNZV//9X5FHVY864TXHx8fHx8f
H7+N/JDiiKi1EkWv6CV8n/j4TeaL7KhMX/xBPSaFGqNInetGyWPeL1y0p5TF
/WvxA2ttdv7x8fHxm8oXBdm38oDS138lzepj1C17l3TJ/Ogbtfn1euHj4+Pj
4+Pjl+OXSo/NGlYPEUhSDxFfXXz85vAnn17j/d2/WPnb354b2Ypf2qE9U7by
d8iRu75Ts19yhxY///j4+PjN5o9tOr/k9d9pM0rb86EZY9KM9bFNixJff3x8
fHx8fPw28ItpIowJ2SvMiffKKR0+fvP6Q2uPdmMSpZXnxepyrzMX8mLls3hv
kNvxVM2+mtaO5x8fHx+/2fz86A7ZuyQVe/035jjz4lh3uu1J/Ss/WjxYvia/
0fXHx8fHx8fHbw9fWxMRxxa+9Spf6mHw8ZvZz/U+Z/3dr44bsGNQWPEpOuxl
597AuE9Imev9az5Vsx9M92+r/IWPj4+PX7s/dPMJkdd/dZyy1f+024tZVNxn
ess9ia8/Pj4+Pj4+fov7pY4XcdxgG1QgwTWDUum64uM32h+99xzlb/sO8x7A
i1HU7fUzMua4cedDtj7Hn7wy8fXHx8fHxw/3p17+beT13/ue6AyJZ9chh9d/
tWZfz9t+5x8fHx8fHx9/hn033belRKzt2HnV9ILGJAtlEz5+8/gin5P9y/dz
56vxYhJZ4wicmBNuujoG7YKFUkwO1eQ3uv74+Pj4+DG+yMm+FfsHr//+MWd2
f1R3LrTz58vMkg/IwkR/bX7MVn/9wpMTfv7x8fHx8fHxZ9YP4dQkIURc1uht
pRkrDR+/Cf3stvvt2KOdgfmPnZjWbhuSOrdNcX3kjjMTX398fHx8/Hh/7IH/
Dlz/3XYhpe+pFcO6U6oxjCb+eG3i64+Pj4+Pj4/f2n700UTMtgjcTnT/H8pE
1Rgfvzn84Tu+pcQmVeexSdntRM58Z+pcyNYz5Ok3H018/fHx8fHx4/380DY3
nrXbh8j9Xujwnif02LGLnO+O4vrgTV+s2Y9KbJfzj4+Pj4+Pjz+TvvS1GQl9
u9DtYMlL1MXdMaps+PhN5ous7Lt0L+/ven/MCSVOqRrD1IxffeUnguVIWv3x
8fHx8cvyh9Yd517/Mz2+fqZu/OpOt83I+k5Jyd4lC2RhIpP4+uPj4+Pj4+O3
ru8vS6BAZby0XUrsH9iMj99E/vTWe33tQmo/IjumtfH3vz2PjbEtbYxRK74n
Hlue+Prj4+Pj45f3yr54q3v9t54pdNt9hpTnC8r8Z067kfF9MumOPUtu/fHx
8fHx8fFb0w8eTviWhZbszy/iNiqZROC41ic+frP5I78904tZ7cQnsv++T/ek
tHX3WbHdlpQffb1mX19uv/OPj4+PnxS/kBuX6Qt38+LY9XRpMe2M5bTd10jt
j2o8bxi48bia/UbXHx8fHx8fH79FfVWKcKL4cl/CvxJIwMdvDl/kp2Vm2d7K
3/pWX6GM9ne+0q9ImQ9t8LrP1uyX3L+KFz4+Pj7+zPkjG04N9kFV5jxwxyar
Y9GMvEtSMj+eSXz98fHx8fHx8VvYjyuMM35NVF5moSzF7ouP3wT+1Ct3aLFH
AzGr7efBZsxS7blxtxx/8vKa/fBt7XP+8fHx8ZPmT7/8G318mf1Oa+PQ9OcM
TrvR5FNXJb7++Pj4+Pj4+K3nR242yxa9c0kzdvcy6o2P3wB/+LavK21DSuxR
N/aEtZw2xqO57UQdZr8jMfp2zb6XpT3PPz4+Pn7SfJGfkr0X7RnoO5Rxxpgp
/U7deRCK3yHpxfPl4A2fr9kPbGyz84+Pj4+Pj48/E74IXQxPEnpiiXJEZhMR
K/j4jfRz0zJ98Z7eHMb+579OPyI3rdNdHrr+2Nr9RtcfHx8fH78qf/jX37Cf
KXjtQGZsosXz7f5E9neHOQdCypsvs7gsx3sTX398fHx8fHz81vJFZEL0Sy9F
9LGjU0RwCR+/wX7utft88Yec+czC56txYlcbnxNPXlmzX6Javn1a7/zj4+Pj
J9Wf3vJba64Do11Im+Os020TcvufLnb6E1mxiiafvbZmP1CnyJTWPP/4+Pj4
+Pj4M+cHd1CWQ46jH7I8SC9XWF58/Mb4o/f+QHsW7M1r3KG0Gynj0Jw2oyX2
8+Aa/WA92uv84+Pj4yfVL+St/qjmeLNF/r6odrwie7yy+6zB3ja8/uSa/bDU
qNq14vnHx8fHx8fHnwk//tjROeLLJoS3XcshyikvPv7s+v2XH+LGpNbnvVfn
O3bajlLuc+LBG0PiS1Thx73a4fzj4+PjJ9kf+e0Zbv/TtNvntMOKZ632SbXH
nVnPHYrbLt5LykK2Zl/b2obnHx8fHx8fH79+fiCXCE0ta383LLd/1xKHwsdv
tJ8f2qbEHlXHBqhtQ/r4M2dc2sQf19TsB1fa6/zj4+PjJ92f3Hq31Wdokfo9
kVK+L7wxaP5nEdnXH058/fHx8fHx8fFb1xchebS0QCFKvYS+JOJLgI/fCH/i
ySvsZ8DzvflotOe/Hco8aF3uHDbGW4yla/b13O13/vHx8fGT7lvznu1uP2vw
2oXM7xZ7fsy0Mm+m+vxh9Pe/SHz98fHx8fHx8VvJj0gR4bnUNbf9KvxgsVLJ
fPj4s+gP3fwlq9+Q1lfI60vkjiVQ5jc25zS+5siWqD8+Pj4+fu3+0C1fVvoJ
dStx7py2oW49xrUzZ+Y1h9fFj61X7Ks1zj8+Pj4+Pj5+ff3QcpRxzMpKIPT1
kJ3x8WfbF4VJ8xmwNrZssdomlNL6FLlz1hS3jz3485r9YL7gcukj4uPj4+M3
2nf6pjqxqtW41W58a+XZgzqPZn487RMq98vJ3crnHx8fHx8fH7++frQngiUS
gYWyj+ZtE6Gp+Piz7edeuz8iVrXVHpT2PRP22o46Ze7NR2r24/do/fOPj4+P
3yq+GevO/L7o9saduX2IOrz4d87zB2fehGL6xLPX1+w3uv74+Pj4+Pj4LeiX
VYaoYwdjamsr9npweB0+fmP9kY3/af/drsQWdeMRdenzHCvtR73LjDlq8jX7
4avtc/7x8fHxW8nvX32I90xBmSPTjH+nth+5zx+s75+RDafVxW90/fHx8fHx
8fFbyY9SRXSJIzb4k4X2KULz4OM3yh+44hPe+IAepR2o+Pe8Nadxl72sxB4t
vkfWn1wXP2yvdjr/+Pj4+K3kjxrPHpw4dsr8Zhl3joSUMobZG5+WWbZ38QCF
xNcfHx8fHx8fvzV8Lx6SUDP6FpX/a4cU6gGCdmQllVz4+A3yxdgO91mvE1M0
4/zdrsQhyjj9i5Q5aiafva5m38zVxucfHx8fv9X87Lb7rD6p588PzI2gxiPy
vk+875/sjicTX398fHx8fHz8VvCjdo5LECHl9W3TtvvRcgqPjz/z/tTLt7pt
Q97f8Sl77rOUNg7N+7u+0+xfJEbfrtmPfLXJ+cfHx8dvOT8/LdMX7haY00yb
Q1MZ66x+/4w9vjr59cfHx8fHx8dvAV/fIAIpYfuEuyKQVQSWokuIjz/7/uh9
P7D7/3dIL461EtPabjPKuOvW3/391xxRF9+ft93OPz4+Pn4r+sM3/ZPbF9WZ
O9OIT2S1B3Vr/YzU7x9nPHPS64+Pj4+Pj4+ffD+yPCLoREKBfcPWfaXFx2+w
P3jtUVZs0Z6QMQHu2DP/GIEuOfbAT+vix9atDc4/Pj4+fiv6Y49f5n6XZBal
3DHM6nwJZhuS7/sns+LDdfGD6+11/vHx8fHx8fFr82PTgkcuUcToXCJ0s5KA
jz/bfm5M9i5Z4I0N6AmJIdGjLzvtRtNb76ndb3T98fHx8fFnxM+ln/HmNVvs
fXe4cyH4xzIr3z+54e01+4E8bXb+8fHx8fHx8Wvzy9oYmTm4Ifa4SqaYKN74
+LPiZ7f/3jfXvRNPVF3X/8Z3thUmBmv247aXd1B8fHx8/Ob087L34r302ETO
+DMjxrUW/07//pl4YV0d/Ojd2uP84+Pj4+Pj49fNF76kiDamsP1F2AGF+imk
WzoRzuPjz6Y/+oceO8ZopzUuYHGXG0fCjTeq/i1v/z3fd9WhdfEbXX98fHx8
/JnzB9cd745hVseb6XMiBL9/Ru8+uyXqj4+Pj4+Pj59wP6Q4ImqtRNEregnf
Jz7+LPqD6/7J/lu92xczwoo3qs11pvQtGrnrP+pTgDY///j4+Pit7I9tWqSM
J+t2v0uMuEReH9Xg90/f1YfVxY99tcH5x8fHx8fHx6+DXyo9NmtYPUQgST1E
fHXx8WfaL5hjAvR5zJy/5zvddK9vkfcMeOq5G+rgx73a4fzj4+Pjt7af3f6g
TNvfJ/qzB2UcWtj3z5KULEwN1uyrS+14/vHx8fHx8fFr8ItpIowJ2SvMiffK
KR0+/uz7ufRz3ngALW5ESmsbcsYD9DpzGxff+cFXE19/fHx8fPyZ9UV2VPYu
XWA/e+hQvms6S37/5F67r2a/0fXHx8fHx8fHT7avrYmIYwvfepUv9TD4+I3y
J566yv37POObq9j9G95JV8YNZC7dpy5+o+uPj4+Pjz/z/uDaI62xZf6+qSW+
f0YfOq8uvvpqx/OPj4+Pj4+PX6Vf6ngRxw22QQUSXDMola4rPv5M+qN3/4c2
rkz/uz0V/Hvejmk9tOGkuvilXq1+/vHx8fHbwR+57/v6/JlabKLo75/hW75S
F7/R9cfHx8fHx8dPqO+m+7aUiLUdO6+aXtCYZKFswsefPX/w2k+7z3CdmBBa
HyJzDholboQ9VmBy86V18f3b2+384+Pj47eDP/XirfYYZvv75fz59nL890//
ygPr4kcnt8f5x8fHx8fHx6/SD+HUJCFEXNbobaUZKw0ff9Z9IXsv2tN7ntuj
9h3qdOONWrFHO7Vnv9NvPlIHX0lry/OPj4+P3x5+fuRN+zvFaQvq0GJZx33/
FCYHo40y/ah92+X84+Pj4+Pj41fvRx9NxGyLwO1E9/+hTFSN8fFn3s8NvRaY
b6bX7i/kj13t/T1v/Y0vp0dr9htdf3x8fHz82fMzl+xtjlt2+w6V+f2TfeMR
7bjV+nqW9jv/+Pj4+Pj4+NX40tdmJPTtQreDJS9RF3fHqLLh48+uP/3y7ebf
7Nbf6x1enyEnhqgZu7rD+7vebi/qX/2xlqg/Pj4+Pv7s+UO//JwXf8j8Tinv
+2fiySvq4je6/vj4+Pj4+PjJ9P1lCRSojJe2S4n9A5vx8WfRH9202H12685D
Y7cFqfMS6+MCUnJ4/Vfr4je6/vj4+Pj4s+eP3HuOL251ed8/w3efXRc/Mq+T
0OLnHx8fHx8fH79yP3g44VsWWrI/v4jbqGQSgeNan/j4s+2PbDjJbvvpUGJB
+MaamePMOpW/57vk6KbzW6L++Pj4+Piz5088fZU7J4LVV6i875+B6/6xLn6j
64+Pj4+Pj4+fQF+VIpwovtyX8K8EEvDxZ8/vu+IT+twyZrxqL3aoFlu0+Pd7
2pyruENOv/zruviNrj8+Pj4+/uz5+bc2K3ObdZf//XPxni1Rf3x8fHx8fPwE
+3GFccavicrLLJSl2H3x8WfBF/kp2bvE69vvzlesjjNT4ouqcxbnB7cmvv74
+Pj4+LPri+yoNo65ku+f/NC2mv1G1x8fHx8fHx8/eX7kZrNs0TuXNGN3L6Pe
+Pgz4Gd3POk+w3XnIFbmnPH+bu9024fM2KMX7Fo8Xr5mX9u7Dc8/Pj4+fjv6
/as+brf/VPb9M/3KHXXxA3u32fnHx8fHx8fHr9QXoYvhSUJPLFGOyGwiYgUf
f4b9yedusPr9G/Eg7PFk/pjV1juljQEYWHt0XfxgQnudf3x8fPx29AfXn2j3
F6rs+2fskQvr4odXqn3OPz4+Pj4+Pn5lvohMiH7ppYg+dnSKCC7h48+CP/bQ
Ii1WaNqJFeH/W12JJWF8jtz57br4/vV2O//4+Pj47eiPPXSeHfOusu+f0bv+
oy5+2Ho7nX98fHx8fHz86v3gDspyyHH0Q5YH6eUKy4uPP3P+8B3f9PoJ2f36
9bgQ3pgA9+/54ufk5hV18Rtdf3x8fHz82fenXrxVpo35Myv8/hlcd1xL1B8f
Hx8fHx8/iX78saNzxJdNCG+7lkOUU158/Pr7Q9cfa/9tnvKe25p/m6eUv9mV
Z7z2e/Ll39bFd7K36/nHx8fHb0c/t+MJpc9Q+d8//Zcf0hL1x8fHx8fHx0+W
H8glQlPL2t8Ny+3ftcSh8PFny+9bdYAeF8L3NuOIOrFG3bQOmXv7ubr4cfvr
K615/vHx8fHb0RfjGbufUGXfP31LF4YctHK/1P76Suudf3x8fHx8fPzafBGS
R0uL+XulVCmE/b+4I+Djz5hfyMvMkgUybf8NngnEDu2y55/p0NKMPGJ6qHbf
/l/bnn98fHz8NvYzF+5R1fdPfvSNuviNrj8+Pj4+Pj5+kvyIFBGeS11z26/C
DxYrlcyHj19nPz+8zf7bvFv5G9yLEWH0G9JjiFppmWV718Uv/Wrt84+Pj4/f
zn7/1X9T8feP8Zl7/eG6+PGv1j//+Pj4+Pj4+JX7oeUo45iVlUDo6yE74+PP
lD+97Xfu39/u3+LKM1vt2W5xOW1/Dq49si5+o+uPj4+Pj984f/iWL1X8/ZPp
ScnJ59bVxdfW2/D84+Pj4+Pj41fuR3siWCIRWCj7aN42EZqKjz9T/uSz15p9
+t34D07sUCduaI/yXNdd75DD60+ui69va7/zj4+Pj9/O/si951T8/ZMubh/b
tKgufqPrj4+Pj4+Pj59Qv6wyRB07GFNbW7HXg8Pr8PFnxx///XlW/Afz7/JO
9+9w62/yDi12qNmeZPc9Gt34w7r45lIbn398fHz8dvYnNq+o+PvH+By981t1
8Rtdf3x8fHx8fPwk+lGqiC5xxAZ/stA+RWgefPyZ9odu+zd7DmJrXmJzbhmn
73/x7/aMGjvU/Ju923y2O/bEZXXxG13/mfDzU1MyOzXdML+cZHx8fPxm8Kdf
/nXF3z/G+LOB6z9fF7/R9cfHx8fHx8dPlu/FQxJqRt+i8n/tkEI9QNCOrKSS
Cx9/Fvyh64/x+vOr8SAWd9ljADqVeWg67b/hO+TUlrvq4ke9knz+77nwAjn0
1psN8xtdf3x8fPxy/ezbT1f8/WPkGbjs4Lr4Ya92Ov/4+Pj4+Pj4lfhRO8cl
iJDy+rZp2/1oOYXHx6+v37fmMG0OmYzS1z/T480xYz3r9eJH5Hqfr4vvLbbG
+Z8YHJTf3WN3uePllxriN7r++Pj4+JX4hYmBir9/zO3L9qqL3+j64+Pj4+Pj
4yfJ1zeIQErYPuGuCGQVgaXoEuLjz6yfWb6fGZ/I+nu8W5uD2J2TuEefh8aY
a0aO9tbFD62KL0eSzv/N//f78vS5u8jXHnusIb632J7nHx8fP3l+ZskHKvr+
MbYZ7UhC5Ovih7/a5/zj4+Pj4+Pjl+9HlkcEnUgosG/Yuq+0+Piz6GeWLtBj
h9rPdM3Y1j1dwTFpdt9/kZ9uifrX0+/btk1+e/58ecbcXeSLG+9vu/rj4+Pj
V+P3Ld+3ou8fJ02MZ1qi/vj4+Pj4+PjJ8GPTgkcuUcToXCJ0s5KAjz+T/vSI
+zd3xv2bXJl/2J5/xuv7b32mL96rPn7o5uSe/ytPPkWeMXee2U705Ib1s+6H
HwUfHx+/uf3+Kz9Z9vePG9e6uFwYeLkuftie7XT+8fHx8fHx8cvzy9oYmTm4
Ifa4SqaYKN74+HX388PblRihXTJtzDusxH/w5plJaev9qw9uifrX09/+xBPy
zHl/IU+fO1eeMW+ufHjt2ln14zbg4+PjN7M/eN0xZX//qGPTpt98uC5+o+uP
j4+Pj4+Pn0Bf+JIi2pjC9hdhBxTqp5Bu6UQ430r+xz72MXngAQfKv/nkJ+UR
hx8hjzjicHnEkYfLw48oLh9+ZHH9CHn4kXZ6cfnII44085nb7fcxn/2sPP74
LxTfx3vvL1ifXzCWj3PSvyCPK34ed9xxbp4TTzpJnnrKqfK0U081P0899RR5
6mmnyFPM9dOK66fKU06z04vv0049zcxnbD/rrLPkd7/7XXnO2WcXP88xl933
OdbnOcby2U76OfJs8/Ns+bOf/Uz+7LxfyJ//4hfyFz8vvt3Pn8tfnPdzLd3I
Z6YX3+f94jy5csVKuWLlSrnSfq9asaL4ucpdN9+r7G3G8gp7edVqecONN8ob
b7xBrjM+1xnLxfcNN1rrxc9frjpPXvbP75OXfeV/ysu/vEvxc675vryY9qtT
5xbf8+S64ucNp8211433++TN53xM3n333d77HuvznuJ7430b5WOPPSYf2/yY
3Fz83Lx5s7m++XFr3Uh/zP0sbnt8s5v+9NNPy62vbpVbt1rvV7e+Krdu2Sq3
bFXSthifr7rr5ru4z+uvvy4HBwbkQH/xbXwODMp+87PfSh+004vbvXz9xfR+
OTY+XvPP/7LPHWO2Dxl9iYzPjZcub7rfP3x8fPxm9IdvPUnvR2SOL0vZzy+8
cWf+WNZTr/y2Ln6j64+Pj4+Pj4+fID+kOCJqrUTRK3oJ32cL+e+Y8w65005z
iu+dzPcc89O/7ryL6XPUdd97ju/Tvxx6zDAPH796/93veY/c+/95r/zKTu+Q
X55jvOeY74+/511yl112kfOK71209zx3eeGCBXL33fcovnc333sYn7tZy7vv
VkzfY3d3m/HeTVne7yP7yQMPPFAecNCBZtursXzgQfan8j7oQH/aQfKwww6z
22GNttcj3TZYc/1wu03WaLc90mufNdtwi+9jjz3WbHc97gvH2Z9q22zw/QVl
+eSTTzbbYp232V5rtMWa7bJq+63dbnual/fss8+2212t99nnnG1/Km2z53xX
b78tvr93zjlWu6zvbbTNnmcun2e3y9rrbjvuefL8Redr7bErtLbZFV4b7Qq9
vdZ4X3bZZWa7rNkma7+t5XVumrO+fv364teP74uqBa//+PhRr5G7vmPGJfJi
D3X7YuZ1WTGL3L5GVozryWevbYn64+Pj4+Pj4yfML5UemzWsHiKQpB4ivrrJ
998Rd98dcp8/J+Iz7D7ff48fbB8IazPAx6/Nn1O0PlP8/Erx/eXi+0tzrM8D
y2qzSn798Wv058yR11xzzaxcfxt9/cfHj/LHHvwvbzyZO6+ZN77M7F+kjDlz
0scfuaQuflx1Ire20PnHx8fHx8fHL9MvpokwJmSvMCfeK6d0recbz8ute6U5
sfdmofdVc/Q+H9YxSvT38Dvu/vj49fP3stuF1DYi4/PgOe1Rf/za/B//5Eez
cv0N3zv66Pj4s+lPbr7UHm/W5X56cfNSWtuQMx7N6FM0+sCP6+L7t7fb+cfH
x8fHx8cv39fWRMSxhW+9ypd6mFb1C4WCfl82R7+XUp+1z5kT8+x/jvf2P8+f
M2en0ONp92z4+HXy/0dx/fidvHaiLyttRoe1Qf3xa/ONcbhGX6J2uP7j48f5
k3/8pTbGzOo75I07c9uQerwxZ0ab0cid366L7yy06/nHx8fHx8fHL9MvdbyI
4wbboAIJrhmUStc1yX4hX5AHHnSQHUvlAHmAP27KQQcosVQOMj8/9KEPWXFb
9jBit+xhxmfZQ4nRYi7vocRxMWK62PFeulLdct68uV5cmLnF97x51ucuc+Vc
f9yYYl4nlsy73vVu7d7Q60OwUyDd7GswJ+R+0HffuJOTN+b+c07YfSV+0/r7
F99feof1NvsR7WT1JTLeRxWtVq8/fu3+nGLaueeeO+PX30Zf//Hx4/zJrXco
sYn0t9VulFLGoHkxrYc2fK0ufqPrj4+Pj4+Pj58Q3033bSkRazt2XjW9oDHJ
QtmE30r+5MSkNcfWgDX3ljHv1qAx79bgoBzoH7Tm4VK29zvLgwPyzbfelFu3
bJGvGnN+vfqqPR/YVm3ery1bi9tftecJ2+rNC/bss89ac4s99rj9ac059uAl
/yzv/eZfyLu/1Snv+eb/kvd+a573NtPnyl//21/IG0/b2XyvO9WaB+22y3/g
zm+mznt21913yXvu8dI3bNjgxvC15l1bZ36qcX3X3WDMxVZMv8GJ72ttv/qq
q+WKlUqsYDNe8AprTrdVq7z53bQ4w8XtxXwXXHBBSOzin2sxi524xecZcYvP
8+IXn3vuD71Yyd89W5/T7uyzrTntzjlHnnXGGfK09/1PefK732W/3yNPfM+f
e+sL36/FbLZiNXsxm524zacZcZtPO1V+5ctfseM9H+fGfT6uuHycMqefMXff
F5T5/Zz3pz/9aTvO9OHySF/sae99uDV/oD2XoPH+xF//tTzIaLc1228Psttp
D3Dbbg9Qls0Y2QfYbbnF/Pvuu6/WZmvF2d7NbdPd3bdtd2Obmb6bTKVSbozv
vzDbb+123F2sNlyn7XausmzlmSvf/a53xY8Vq2As2By3rSduH68daacy8lfr
/+tp/yoL+fyMXn/0z6hkfPzZ96e3/d5uJ+rQYhJpfYjMOdCUuEXFz6FbvlwX
v9H1x8fHx8fHx0+IH8KpSUKIuKzR20ozVho+/iz4Q3d8U/lbvEOZl7jL7dfv
9Pl35pox/jaffOHmuviNrn8t/o3f/o48Y95cefrcefL0ebvIM+buUlzexU7b
RZ73159o6fo3qz86OqK0sw7Yba9WW+tAf3F90F4fGDS3Dyjvbdu2We2rW7ba
7bCvum2tW+xlox12i91eu/VVry32icefMNteH3/8MfmTH/9E73OktjNF9D0y
3kcd9XdyaHg40ecfH78aP/vGw2V//6Tt9iIjz8C6/68uvpbWhucfHx8fHx8f
v3w/+mgiZlsEbie6/w9lomqMjz8z/vDt3yj+rZ3ynt365pux1jsDsUOnXr69
Lr6eJTnn/+0tW+S3urrkGXN3NtuHzpw7z/w024p2tj5/tP/+M+ZHbwtPwp89
/9k/Pit33nlnpZ3Iaw9617vfLU866USvvciOkaS2JX3kIx+Rb77xRtV+o+uP
j1+Nn33ribK/f7z2pE45eMMxdfEbXX98fHx8fHz8pPjS12Yk9O1Ct4MlL1EX
d8eosuHjz7w/sv5kL/6D+Xw2ZbcXdXjPbJ0Yombs0A4zz/SWu+viN7r+1fqr
T/iyPGOe0UZk9SUy+g+5fYqMz+K27+2+24z5ja4/frj/1ltvyfcvXKjHxFbi
EK1du9bMd9lll8t3/tk7Q2IjWW1KH/zgB+Vzzz2XuPrj41fr599+ruzvH3V8
2sC1/9AS9cfHx8fHx8dPju8vS6BAZby0XUrsH9iMjz/D/tCt/+KLG+r8bd6t
PbtV5yU28me3P1AXPzKvk9CE53/bo5vlmfOcsWZePyLr7aV/6391tWT98cNf
E+Pj8uCDP670EdLHlf3sv3+u7X/nXXfK977vfeGxsYv7GvGaNt5/X9l+yTq1
+PnHT7afG3yl7O8fb1xaSg6uPaoufqPrj4+Pj4+Pj58MP3g44VsWWrI/v4jb
qGQSgeNan/j4s+EP3PRPbkxQb67hDiUWhK+vvxnLqFNOv76pLn6j61+N3/N3
R7njzU533vP09iIzTlExT3ZiouXqjx/0c4WCPOZzn4uMX33iiSeG+k89/ZRc
uGCBF79Im3NtJ/nnf/7ndh+k5q4/Pn6tfn74tbK/f3qVvkb9Vx3aEvXHx8fH
x8fHT4ivShFOFF/uS/hXAgn4+DPrD934eWVumW7vea3dZqTGDlVji2Z3PN4S
9a/Uf/LWW622IKM/kR2z2nxr7UO7uGnD6XRd/cj9q3jh188/44wzIudGO/TQ
Q+X09HTk/q+99pr80P/eJzSutRPf6Efnnhtf/iperXT+8ZPvF0bfLvv7xxh7
ljaWi/n6rjikLn6j64+Pj4+Pj4+fMD+uMM74NVF5mYWyFLsvPv4M+gPX/aPW
j9/p22/FDQ1Jt2OL5t9+piXqX4mfy2blfx10kNsWdPpcX/uQ2TY0T4tTlN6y
tW5+cFt7nf9m9ZcuWRo57/0+++xrzrNWyjfmWjPak4Ljz5Q+SSedJHO5XMBv
dP3x8evh5ycyZX//uPMuFNP6Vh7UEvXHx8fHx8fHT4YfudksW/TOJc3Y3cuo
Nz5+Hf3BtUcrf393uHPImM9xlTlnvL/brT7/ub6X6uKH7t2k5//+5Svs8WY7
u+1CZ7ptRfPM9dOVvkTGe/sTT9TNt7a11s9f0v3bb7tN/tmf/Vlou05HR4d8
5ZVXyvanpiflCSecEGxzUvomHXXkkXJ4eCi2irEbW+z847eOL7LDZX//uHMv
GO/l+9XFb3T98fHx8fHx8ZPii9DF8CShJ5YoR2Q2EbGCjz9Dfv+aT9lzzNjj
zoxluz+/P2ao9U6Zf5vnBrcGjpvE+pfrT42Nyu/ttZc8XWkP8mIT7SzPtONZ
m3Of7eyNPXvpgQfr4sdmbYPz34z+Y48/Lv/f977XHRumthG95z3vkX/4wx8q
9o20c889120bCr7nyP33/4h8/Y03gmVts/OP32J+brrs7x91W+aSvevjN7r+
+Pj4+Pj4+InwRWRC9EsvRfSxo1NEcAkffwb9/qsOM/8mV+cZtp7ndofOL+OM
CcgNbauLH7XebOf/1z/6sS8O0Ty9bUiJXW31M7LGnz39m9/UxW90/fH1nG+8
8aZc+P6FoW0573jHHHnzTTfX5K++7HL5zne+U+tPpI5H2/WDu8kXnn8hZO/2
OP/4LegXsmV//xjPNKzvrC6ZvnjP+viNrj8+Pj4+Pj5+4vzgDspyyHH0Q5YH
6eUKy4uPX39/4Joj7Hihnd5zWrtfvx4XwhuTZrQn5Qa31MUP7NOE53/wrbfk
vy+Y77UDuePOdlbmOJvntiOdrqw/+svravaD9Widn78k+iMjw/Ij++8fbCOy
5yo7f9Giuvh33nWnfO/73hs6ps1477LLXLnxvo2Bw7f6+cdvTV/kJ8r+/lHn
QOu7dN+WqD8+Pj4+Pj5+kvz4Y0fniC+bEN52LYcop7z4+PXz+677e69P/+Iu
t9+/97d5Svmb3XvGm+t9oS5+o+tfjn/tN/7N7jM0z20TOl2JX+3Erfa2OXOg
7SwfWLmqZj/u1Q7nv5n8fD4vP/3pz0SMCdtJfu1rJ9fVf/rpZ+SCBQvsPkVz
3LFnjvc//vzP5dq1a2et/oFjxabi45fvFyYHy/7+UfsaZVZ8uC5+o+uPj4+P
j4+Pnww/kEuEppa1vxuW279riUPh48+03//Lz3nxQdW4EL63GUe0x3uGm93x
ZF38cvbXV2b3/L/57LPym3/RYbYBnWnGJfLGnrkxrOfNdd+nu+nWuLM7e3oS
XX98feUb3/h6cD4ye1zY3/3d32nzkdXLf+211+Q+/3ufQJ8iZ33OnDlmTKOo
/Vvp/OO3sD+RKfv7x0qzlvtXH1wfP25zO5x/fHx8fHx8/Kp8EZJHSwsUotRL
6EsivgT4+DPhD647Tqbt+WTS9t/gmUDs0C57/pkOdz335qMtUf9S/iWf/7w8
Y948JfbQPCWW9TwzhrXZVrSz1zbkthsV0zf85Mc1+Xru1vv5S5J//vnn2X15
5mj9e4z2mg/tu68cGhqeMb9/YEAeeujfRPrG50knnSRz+VzMUar3m+H847e2
nx95vezvH6//a4ccuOITLVF/fHx8fHx8/KT4ESkiPJe65rZfhR8sViqZDx+/
jv7QzSfY/Yic+c6cv8G9GBHmc1sthmiXzP7pd3Xxy3s15vy/9ODv7JjUOytx
h5y3Epto3jw3lvWZdp8iK771PHnjWWdV7Yfma7Gfv6T4v/rVr+ScOe8I9iUq
vlPd3XLb9u0z6huvqakpecIXT4iMV2T1aTrKba9qpfOP3/p+fvDVsr9/nL5E
xroxZ2cr1B8fHx8fHx8/WX5oOco4ZmUlEPp6yM74+DPhD916ovk3ufP39//P
3nkARlGsD9xAQkeSIyEJoaMUS5SqIALyfyDyFFFREZSmT1AR5KE0nxRRQQhF
UBEhhBKkg4AgoYUqvYQSOqGEkkp6Lu2+/81sm9lyJbl+s7C53dnZ+c03u3e7
++1XxHtx8p1tBL2O7I8Kb8bahO9s+bX4hpISmP5SZym/mWAnRMYj0umo+NWc
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
cG27NsgEf3FkJD7Xn2jeTGNXdflTUpJh2IjhoNPVVORcEvxf0PcH2epdv3bN
YvlLM/7FhYUwKiyE0hGhef4775iV3xZ8M7t4DH/btr+hvG95mb8ZtxwUFAhX
r161K59b897xt4SPrm2TJkykdENyf7Tw8HC4m3jXI+VnfMv5hQ/OifnNUsQY
1aFmrz8ps+sDlBS6vfyMz/iMz/iMz/iM7758KR6SgawoWyT+Uk0axAb2xu6F
ShUrwu+/LyS2qcuCJhS7qFrVqvie+rPPhlnNLyoqgmeffQbvj2yKlCzTfLGW
jeTX4ufk5kLt2rWxr0JMTIzD+eYmb+RnbOgr2fpHBPM+AEFEHho+lgR/X5/C
v9/N3jelVPzOnTvj8/SHH36wWP7NmzaBv38NqFS5MgweNBDWr1sPZ+LOwqmT
p2HDxg0wYMAAqFy5kvhcWr6cL4wZMwbb65mT3xI+vcj9ndW9O5XvDPmefVU7
FAr1erc6/q7KP3fuHD7mcr0DWq5cqTIcPHTIo+V3N/6iRQvBt3x5VZsiNDeo
3wDi4y/aje9s+RnfPJ+Kh0dec8xcf9KX/csj5Gd8xmd8xmd8xmd8d+Vr7Wyq
wKDoL4rbEBYWBmNGfyUVKxcUgrZr1w7fTwcG1oSS4mJZPdP8qT9Mxe/an3jy
CRzHmuqbhXzNyUr5Fdtk/Pnzf8N9Rf54uTnZDufTzTheflfj5+yfwr/blXIU
S/fxoXzumVDKDwB9pq3saTX/1s2bUM6nHI5zm3AjQWtHaopaHAXlfX2hU6dO
OH6ulvyXLl+CZ5CulIhx3NG4T15url3Gf9vUqfC5fw3RnkjQF13ef0BTflc8
/q7Iv3f3LtStW5fQM0j6BuS7Gr1ihV35smZMFDA+2UzMjhioXr06pdsjdXwB
Af6Sb7UHys/4pvkZm/9D6YTEHJpmrj+Zf39uE76z5Wd8xmd8xmd8xmd8d+XT
GwyKErV9lNy+772Hn0+LSF0PUc+g3BNPL7/cXbyvvnjpksX85JRk8d589epV
YjWDrJ45vrxuaeU3xy8oKoTGjRvj/k6ZMsXhfGfL72p8/eUtVA5iMSfxTDoP
TQp/zy74BKTMrguGYr1V/B++/46P2/6SRfL/c/AQ+FXwg1de/TcUFhSalT85
OQke488tYe7ZsycYSooVe5R1/G8cOYr1RDhGEZ/vDNkUbeHzs7vL8Xc1fk52
FoS3eFbSMfhwsxAveerUqXblO1t+d+cj/+fQsDDqO0jqjND3OTo62mPlZ3xt
ftqCZ8XcmSg+EacPqm32+pNzcoFN+OSSN44/4zM+4zM+4zM+45eer9kfg5Kj
BtqwYQNUrFAJLl0kYi4q2lLprfHjuefbiu/OD4g2Ceb5w4cP5+K9PPEEF8dX
lWeeb1I2C+XX5tHrKHY36vOjj1Y3PtsnO5zvbPldiW/ISRbf6eLYojNVfAJE
3zN6W+G941bxUdxhdH4vXhxJb1SRv7i4GJ/TderUgcyMDIvl37Vzt6hTEOxQ
IiMXa8qvxadlUPmdKSyCr+rXo+IToXl6p5c05bcl31POP/ID6dZ79nxdM271
4MGDPVp+T+EnJNyE5s2bq9qDoWVkEzZx4kS78c2ve/b4uyK/OOsurwsKFX2Y
yXjVpq4/hfdOl5lPr3vf+DM+4zM+4zM+4zN+6fkmy5QtKyb0XNuseTMYO3as
iVqyborIEggICBDvpc+fP28R//79B1CxYiX8XDxnzhxQGU2L+FRBKeWnt5nm
ZzzMgMo459UjMGHCBIfznS2/q/HTFrYi7s2DpHe5ETLdELGMtucd/9Vi/rFj
x7BdCIoxhI6/Vs8F+VevWkXpeKyRv0OHF6RnUuNnaGgozs2kJX9px3/RB/15
PZGO9z2rAcN1OshMTjLdRxc7/q7CHzZsmMIGRZg7de4MBYUFHi2/J/GR/3Wn
Tp3p4+ij1Puh2HqeKD/j01P+xQ2U3RBno0r7Mqtdf5J+agxQUuT28jM+4zM+
4zM+4zO++/It2qhZ2QDRK6KhWrVqkJqSYr5doj3kRXc27qx471z10epQUFBg
EX/y5En4WdjXtzw8SHpgWVdV+Ka2W9aocoM5fv/+/bG8tUJqQYG+wOF8oZKz
5Hclfua2YXQ80ZlCPFFynb7HR8uZmwZazP/888/x8X7vvfcUfLXpzTffwvU/
+fQTHNMKxXq3VP7fUAws2fPptm3bNOXXnMyM/4HFi7hY1v6c75mgLzqxdq1b
HX9X4M+aNUumS5BynCG7socPH3q0/J7IR7rZvn37KvRD5Nz15a6QlZllF77Z
ycPH35X4WbvH0rGJBP8zlBeBin9HX38eruttE77Wbt4y/ozP+IzP+IzP+Ixv
I75BVqShYxI3lxigadOm8N//juL3k9U3kJ8GEHvHl4//5n/iffMH739gER/F
q0Y+Oeh9bY9XeshQ1vEVrVspP1nZUv7mLVvEZ8FVa1Y7nO9s+V2Jnxe3hM8x
E8T5BeD7d8nuXxHLWrAp+vVJRWfV+EWFRRASHIyP9bZtWy2SP0Cno2xLWrVq
DYWFhRbJf+bMGSm2Dd/G58OG2Xz8k2/c4PVDQs4zLv/Z0o+HqPfPRY+/s/mb
t/4F5flcWT6Uj9IjEBQUBNevXrUr39nyezLfYNx34oSJGnZF3LF+6plwSExM
tAufWvXC8XcVfvqyLqIPM+lvRtkRqVx/cv6Z7hHyMz7jMz7jMz7jM76b81W6
Y9BaIxYPHTqEczhdunQJrJ3y8/KgVlAtfL/sW94Pzl+gfc60+LF7YsV77t9+
+81qrmqzpZS/NFNOTg5UqlQJPz+80esNh/NVm/VSflFSPH+vXlsWM4KLN0rl
OiP9z4xz0cPrZtvftGkzZztWqxYUYz8T2SSTH9kOqdkebNr8p3IflalAr1fk
5+7Ro4f2DmUY/0ktW/IxrKUYRaPr1oWi/Hxtng35NpmcyD918iRUq1pV0hsQ
ur3KlSvDP4cP25VPteWF4+8ofuSiReDr68vri3woHTD6bNCgAcRfuGg3vsnJ
C8bfmXxDQRakzAol/Mlqi9cSFJdIslFVXn8Kbu4tM998B7Xb9ITxZ3zGZ3zG
Z3zGZ3wb8c2VqxShWNIvtO8A6nIYFEVkE/+b8I14z/z1//5nMf+zzz4T77Gv
XLnCl1vPNz3clskvlVvHf/nll7mYNZUqYb2Ro/mmmvMqvsEAqT83pWJGcPfz
QWJ+M8m2iLAnMs555/8wy+/duzc+T78Y+YU6Xzbl5uaq5tWOjIy0WH50TpH7
t2zZ0i7jv+Hrr3n9kA6G62pw+iKdP5zZtEmxg8sefyfxkQ1Jnbp1VHNjlS9X
DtavX2dXvqnmNLcyfqn522NixNycajGL/AMCIDY21m58Z8vvrXyk6+FynAWp
vHsg/NDk1x/jMugzy8yXL3nb+NuCn5qRD9duZcCx00nw9947sGLTFfh12TmY
E3UGZkfFwaQ5J2Hy3OMwPuIofPHdIRgx5RB8NC4WBn21GwZ8uRt6f7oDBhiX
B43eA0O/2Q9fGLejecKc43jf7345CbOXxBnbi4MFKy7A2q3XYNeh23D6Qgrc
upcN2XlFTpXf7A6Mz/iMz/iM79l8Y5lBDaOyF7mtuKQEx8mdERFhkqjWu4MH
D4Kfny++R3799Z5QVKTM363F53JHPWJ8zqqrWd8cX769NPKrlVnKRzmuhWeE
Xbt2Opwv3+7N/Iz178riRoRSuiHBHwC9700idEcZf39ukp+RkQFVKnMxy0+d
OmVSOlL+Ti+9ROkOqlerDjdv3bZIfhRTvlw50mbBB8e2NiV/acf/5slTos/Z
5zqdaFMUNXCAxt625bvr+ZeVlQXh4eEKmzFBTxQxa5Zd+WrbvWn8ncWPi4uD
sDqhmvGKKlSoANHR0R4rvzfyc/f/IMan5t49BBLXmiDJH012/Ulb1sUmfO29
6O2eOv5ae5UUG+D2vSw4eOw+/LHpMkz97RQMm3wQ+n6xC14etBXavrEeHuuy
EgJbRYGuRRT4t1gMAS0Xg78wt+A+A8RlVCcSL+ta8GXGdbSvDpXz9QJaRuLt
aD8dX1/Yj2xLaEOH5ygIfm4pNH95FbR/ZyO89p+/of+o3fDlj4fhpyVnYcP2
BDh5PhWS0vIsll++3duOP+MzPuMzPuNbx6fWDBptG+j1uLgz+P42/kK8ot38
/Hy4ceMGXL9xHe7evQs5uZLNzLHjx6EmH4PljTfflGJXW8BPTk7BuYXRM1Wf
Pu+qSGR+IsUwJT/KUzX528nw0X8+hFdfexXeeuNNGDHiC9iwYT0UFmjEn7aQ
H7N9u/h8MGnSJFW+er/k20rHFxbKcvxdgY/0IgkJCXDj+nW4ft14vvGf3Pp1
fP6hzxs3yO3GdbR8jVs+t/5rODE+EI6N18HJr2vCA6wXCiJiiwbSfgM4lkQw
pM5/wtiVEk05FyxYIMYitkb+e3fvwfvv94PatWtDhxc7wL79ezXll0+3bt2i
c3Eb+W+//bZVfGvGf0qrlqJ+CMcoMn6OCgkFfZZGfF4b80szOZOPztd/v/oq
ZSsm/J6h5Y8++sij5fd2Pvqtata8uebxR3pdFNPIU+X3Nn7a8i6EDqi20jaV
35YiXGf4suzdY2zCV5u8Zfwzs/Vw9EwSrNp8FaYvPA3DJh2EXh9vh2dfXQu1
2izhdTScfobTAUWKZaIORyhvKelsOP2PoOtZLC5L7UVhfZCgV5Lq0vofe/BD
2y2F9m/9Ce+N2AGjpx+GecvOweadN+H85TQoLCxx6PhrTYzP+IzP+IzvZnxz
7Wm0O2vWHPwsK9U1wNWrV+G5557jn1EJu4Zy5aB169bw8ccfY78Yvwp+MDMi
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
se0ePXqoVDHZgEX82qFh4nMqJZPGc6wp+X00ljV9JIxtpqWkme69qfPeCvl/
/vlnzPx53s+U/EKl5cuX4z6PHDnSJD99dS/ivj0IqNijwrtffh3HHuX1RGmR
bXldVUXcj7gzcVadf1bLb9w2YOBA0Rdl5syZyubtyVfZkpWaCqOCQ0Rbos/5
/Gdj6teDfCGetx35io0Olh9Na9askeU39xE/w2rXJnKce6b8jG87PrLRmzhx
gsnf3/DwcLibmGgXvrPld1d++qpetA5I8DGj8psFivnNsN+ZcTl1cTub8MWN
DpA/JS0fFq2Kh39/uBVqtqL9kbg5ShFbOaCl0u+JzLkl6S0iRf2EuH9LUp8R
SdmwkH5QtuCHPBcFT3RbCS+88yf0/Hg7DB6zB76c9g/88MspbCuFdGIrN1+B
P3ck4HnHwTuw73Ai7DXOpy+kwBnjHH/lISQkZkLcpTQ4E58CJ86mwL4jiXj+
e+9t+DPmBmyMSYBlG67g9uYuPQeT55yAzycfgPdH7oIeg7fCc29ugCb/+gOC
Wy9xqPz2Hv+wF5bCh2P3wOZdN0FfoLQBd4fzn/EZn/EZ3zv4BtVFtaLi4iLw
r+EPK6JXmOmsgdosrxYxY6ZoT1+5SiWL+Lt37xb1D88/93yZ+HSBAdu9/Pe/
/1U84/moxJ+tX68+xF+ILzN/2fLlom6md+/emu0Z1NY0G6brXbx0CaKNnN8W
LMC2RQsW/M59/mb8/J1f/v03fhsqXyAtG+v+/vsCYl80/wa/ozZ+U6svzcuW
LcH+iZaOv4awFsvftm1bPJbx8fHUBqHa58OH4+2TJ39rkp97dB7xLjhU4Wcm
2hGJZUHi8typX2PGUzh2lnXnn7Xyjx83XrTFi4yMVO5kZ75Ww9GffMr7ntUQ
41oP9/eHv6dPdwhfXs+R8h88eBDbID5C+AcJz/TVqlej42Z5oPyMbx/+wkWL
wNfXl9K/k9ejBg0aEL97tuc7W3534htykiFlVpioGxJi23ExiIL4HGe835no
m8a9e8je8z+3kF+vL4aVm69CzyExENhKsi9R00OoxbbxF/yeWkZJdWV+S9wc
pfBzEmxTJN1EZKn4ddovg+d7/wnvjdgJY6cfhl+Xncf6ilPnU+D2/RzIzSvR
lN+Z4/8wKx+u38qEI6eSYM3WazBj4SmsU3p96HZo8epaqNVmiVuMv5xfr8Ny
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
6WKfDhw4wPkQoHe8gTXh/Llzir570vnH+IzP+IxvN75GH/7hfXxu3LgB7dq3
h3bt2kGx8VlWTjLQq3hCceSqV6uG93/s8cfhzBn5+3bzfGHKzc0FPz5H/Qsv
vGARX1zh1x8+zMT31MOHD4e8/DyL+IaSEujbty+X0+rll6GkpESlh5bxka3Y
5s1bxHv56dN/NMvXmkrLN9WKO/CHDRsmvi9v27atWX4QnxMN6U0aNXrMIn7O
4QjC9yyYeg8s3O93faISbvfzl6rxzwPcs0He+T/KJP/nn3+uaR9gfpb8oVAe
7dLwVctVJnPH//6lSzCiVhD2OxtWA+mLdMZPHdYLXdoTC988+QTWGwm6pDk9
XgHJtM61zr+01FRsS6k17si+0Vu+f4zvevy4uDMQWicMVPOgGWc/vwoQvWKF
x8rvLH7hrX1EHKJASR9EvlMgcmQiX2VBf5S5a3SZ+eSamvyHTz2A1z7cyj9H
R+Fnah2Rq0p6/o4kclkp4wjL41nrFJ+R/D6cT1GtVlHQfdBW+HXFBUhJy/XY
4y9M6D3i9z98b7y/aKz6/RPuP7jvpw88abz2rTB+H0tKijUata/827ZtA18/
7l1baGgoJCYm2px/6242Pv49Bm5x+PkXZGQNHL0Hrt7KwJ3Z9Ocm8EV2l8ax
DwurA7du3VKX003PP8ZnfMZnfPvztagG4/XvB2jYsBFeuxB/Aet93nnnHcjN
VrebQHsiGyLk64zfvZcrBwMHDID0hw9FjrIX2nxyy3PPP4evbUhflJcjz5Op
LqGB+jTAnDlzoGLFSrB8+XKz/Pv370Gvt97EcvTo0YPXLWmALORz/mvc/fyR
I0dM8hXH3xTIQr76ru7BT0tPg6pVq4r3XxEREWb5nV96iYrxisbcHL8445r4
bjhJfE8cLPoQXJwcBH68Lmfff4OI2BPBkP7Hv0st/7Rp01Tj3qjFIPGR1fOR
3Z+inO3W8qU12xz/1aNGYZuh4Xzus+FIL2Rc/r59e5jSqiXhm8bpi06sXWNT
PrleWvnz9PnQvv0LmuM/fvzXduU7W37Gdw8+slNt3ry5qt7Yh39OnTRpgt34
WsWePP6Zmz4SdUOif5lgMyTEsSPym0kxjEKh8PahMvO1io+eToJeH28X/XoC
+OfxACJGsPDsLcQgFuO/EHYcpG2QVJeOISPEmwlsHQXdB/6FdQPJqXmKbnri
8UfvDOfM+QnHD0DfMaSL6PZyN3wd37x5M37HevDQIdi8aRP875tv4Nlnwqnv
ZZs2beDmzZul5ltSLJf/5MmTUJW3P6xUqRIcPXrU7vzLN9Jh6m+n4fm31tvt
/BO38ec4Wg5sFQX9R++BhDuZMMN4ryhcs58Ofwbnd9Pqtbucf4zP+IzP+I7g
S/GQDGRFcerarRt8OHiQWHz0yDGcfwnl6Z48eRLs3rULzpw5A/v37Ye5c+dC
u3bt8W+xr295eKPXG3Du3HktSS3ik5KN//prEHIBc3nCDGQDStk1xnLevHnY
7wzZRs2dOw8OHDgIt+/chnv37mFZ1q5ZCx99+CE8+mh10Olqwm/zf4WS4hKu
OYOcYR2/dWsuT1dQUBCOGWiN/LbgK2q5EX/lqtXi8a9WrRqkpCSb5c+aNYt6
djpw8KBF/PRl/+LeEfP3+WSu4+96cbqqp8PKS++Lp4fwdUKhOO2S1fLn6/Ox
/5LgF0nqfXzkz34m7Y24e9BPPhnq9OOfm5aO85wJ+qBhxPxN8yekMmRr5O8P
XzdpAnqUp8lFzj8US6xfv/c1x//tt3tLsdG94PvH+K7NT09Ph06dOtO/Bz60
jdGgwYO5WLV24Msk8+jxL8lLgZTZYaq//9x1w3jNMJZJdkWSnVHK/KdAMJ60
pfzH45Lh9SExvF9PpGhv4S+zx1DEFeL9eKQyIr8Ur2eSbDek53K0vUvfzbBg
ZTwkpeQBPXn28U9ISICOHV8U9S1jRo+R7HJM8Lds2QLBwcHi97FWrWA4fvyE
Q+RPTk7GdsYC+5dffnH4+J+/kgbfzj2Oc+zZ4vwT7JACnhXO8SjF+R/cdgl8
OfUf+FfX7qLsKOYDur676/nH+IzP+IzvGL7WztxHQUEBtt9YtmwptRHFu/t5
3s/QtVtXqBVcC/z8/ODRRx+Fpk0eh7ffeQfnA0sT48bIoZZ0Xr3g3Llz4u/8
2NFqMYMJaZULFB/phL77bgq0b98ex1+S7IPLQb26deGdd97Fcf6ysrJkHTKY
EMM0P9343OxbnosbOHToUHXZVdu2Db+s4+9sPnr3FhISjP0oohZHWcTPysqE
xx9vAn4VKsC4seMs5uedWED4mpHxiYIgvI4vPl8m96wixS2dKfkYZMdOsFr+
vNxcLgYRijc0erQYd2g0LhvNf0rL6PzH8YqEGZUJ24xz7J5Yq/hy+bULrDv+
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
xVvtp3zK92b+0qVLwd/fn/xmxGILGjV6EJKTk+3DZ8oha3ln4v17a3oYXIpm
44j0RBwRPwZyfiNpORji/+9p4rd9dnrf0z/Blr3XKmW/fHtfu/6u5P999Ah3
n9WtW1dc7XB+5+efV/hCHnusOdquMvz9+/aT8Tim4/bp08ct+n/H9u0QUS/C
rC9I7uMiY4v84KGHHoLbt29Xil8Z+8vKygg+O89rSNmHzxgBZiw8iWIQddwo
17qOQ1rW0jKZn9au/3q4lVFkd/ulZe9+/imf8infBr7K6TBaSxZO3aaBkU0p
n/K9kG8ozoLsH5oL2tV6pG0t5qGh9tlSzBGnmTFbyk8r3Dm60nzNwc37f9++
fXD33XdLf09if1eydbZPnTrlUL7qkg/1P+VTvjP427ZuNz3PdTRzUYJ0wZCY
mFhlftGh+cT7l88108HFiXpUz4yLHYoORvNirTO2LWl8ODz29Gzi9//m3VfD
6fNZVbLf1f3vq/yZM2Zy99ebbwxwCr+iwgB16txD5Fex46uvvFYl/okTJxTH
7NGjh+UTclL/FxUVwZzZs+HRR5vJfECY38hcbpppHatbxCg+ZKo4aNifn5+v
4Ddp0kR126oMKzZcgLrtlmGa1nEKPaJgIa8Vjy3C3z+RL6+Fm+nKuCKrBh9/
/imf8infRr6ldrObqtnBKJrwQ5g3l/Ip37v4pcnrZL4fLA8N0yzi9YnCULsU
WxQOZZd3VpovN8Hd+//K5csQFham+G2Rnff3r85pdzqSb00T5VM+5duHn5SU
BA0aNNCskVQjoAYkJKyoNL88LQky5zVE79NbM9k4olDA65iJ+WWcfrUs54wd
P3n1fUwvJBaefn0D3LhVaBf7VYyy2GSL/ZSv5Pfq1Yu7t3788Uen8I8dP66S
Z3UXRE+aVCX+hfPnFL6V5zt3UuzqDv1/7tw5WLhwIQx4OwoaNmyo8BtpPf/s
8qpVq6vMt2QOO2RmZij4Tzz+hF3sl7ftPXwTHui0AvmGdHj9RKyNH+OJ90+w
0Na231q4nVlsN/t95fmnfMqnfCv5pjZGDaOylxrHPM+as6N8yvcNft6GgZhG
UZjwzRIm0y2KIHxDYj4a+zt45o/NwVhM1j/zJPut5WdnZ0PTpk25v9X4eHTy
90a2jq4320/5lO+L/NTUVHikeXPi25B4/k1jdHS07fyKEsiKe5qLIWLfpWkx
4VyumVjTDI8hEvPMJP+Qnpvf+OnjoGuzFH279fpgM+QXlnlV//sSn62nV6dO
IHefJSefcwr/u++/VY2X2bv3ryrxr1+/oThm69atzexFHt2V1//atauc//et
AQPgnnvuMT3jfprPP5uzZ2++mv1sLruc3659O4fd//+cN/2988IqIU5I0ixC
vqFWmFYRVh9NqpUWD8+8sRFy7qjUQXPz60/5lE/5nsEnlhiNYzOy5UoO+GEo
n/J9iW/Ivw7pCx6SapoJ/iE+dgjXLgrDtKz1WB20+nBn/ZuV5svNcMf+Lyst
g+ef7yz95up3F1Hn7Msv/+dQvqvtp3zK92V+TnYOdOrUUfP5Z9uHDB4MBkOF
1cyCHSP53F5Bs/qSoFUt+of42CEs72xCINKyZtuTJ+qgQ8epSLu674dbobCk
3CH2u7r/fYV/+NBh7l6qXbs2MFyBOsfze/bsqYiVYXW0K8rLq8QvLyvD9H34
KRuroza4S/+r8dnfh8aNHQcBAf6qzz9rY3FxJXOsrOCLkxMnjiv4vXr2kh/B
rvyUf3Ph8Rd/EfxDsVhuGV4HLV7QM5L00fA8tecG/Aa5+Wq+Itvs94Xnn/Ip
n/Jt4Fs6nsZxlT4oRQNiKkmWbaV8yvdGfuHxRXxs0Cwyr4z0G0VgOWikpjW7
T8mpZR5rvzk+YzroO++8o6lp+cprr4GRMTqMb3YLL7n/KJ/y3Z3P+orfiopS
atr6SXGF3br1gLy8fIv80pQtyOeeNqsupEzW8XpDWP0yyT/E+4xSBD+SGFc0
5q3XBA3ZeHjz0x1QVmbw6v73Bf5MoT59ZGRrxVpH8G/dusXptUu1vvj7+KOP
/msXvl6vI56Xu2vWBMbIgLv2v7lh//4DUKtWbdXn/9z5cw7nb92yVfH3x4dD
PnC4/dduFUDrvuu4OmhSDhpe7ywe+YyCW8Uj7SKxBho77fHuH1BYZKiS/apb
eNnzT/mUT/k28FG7bI0FrW2zddXIEzXTzGCrKJ/yvZ/P7pezoo/gJ9ITmkRE
DBFXAw3TLcJqo2XMawTlGWcrxSeb3av/J0yYQGg3+GHzbdu0gcLCQofyyW29
8/6jfMr3BD4b4zEpOtqsvm3Lli3g5o0bmnymKAMyf3ice6emz6wLl6N1vG9o
vE7wCQVi8UNSDBHfzvuSdo58GMLbLOJ+sx88ahenRewM+13d/97Of/HFF7l7
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
8GiP1bwuUSux7pmUfxYi1kNrFYtpGPHaRuy095DNUFpuVBK8/PmnfMqn/Mrx
Gc0G7YE8C+1ja7cwyjnKp3wf5zOGYsiJexbTH+LzyVBuGZaXxvmIhDpoaHth
mrvmddMBDao8c3wLZsn2sc3+s2fPQnBwkOpv/gEBAbBr5y6H8rWW3en6Uz7l
U75t/IKtn3GxlX/8NwjCA6uRuWfY93JA9btgTv9aSKuazzkL5HLSkiY1gsLs
25Xia6831+I9/e9J/H37/uLuBfbfIVYTWVwzYcIEdM9Mip7EaV1by2d9G9Om
T4eQkBDi3zVdqA6++/47MHJCV86z//HHHyfu/+eff96hfLa/eN9YNT5Gq6Ki
Utd/546d0Pyx5qj/IiIi4LjgyzPH115vG5+dKSsvg9q1ahM+5nHjJziNb+Gw
xD7nLmfDQ11WSrXOWkm+IqRhhOqfxQq+pFhB6zoW/m/CX1Xiu9p+yqd8yncN
X7kDNq9yHPKQ1oHI81LblvIp33f55bdPcvljvB9IT9RAE+ucZWLxQ4rYIqE+
WuHeKZXiO8L+jIwMaNKkifrv/X5+sPwn5W+Rvnr9KZ/yKd86ftHRxdw7L3Wq
jvP5JA6/F5ro5TW6ydiioZ1qAcpBM+1zaZIOcs5u80j7Kd82/tSpU7n7oE+f
lwk+q74wduxYdI889thjsGrVSigoyFfll1eUw949e+Cj//4XgoOCCX9knTr3
wIgRIyA7K9sl9o8cOYK451mdH1b33VF8Nj1h6ldTUa5W8+bNYOnSpXAn947K
sUl+WVkpbN68Gfr07UM8o2w+W1ra7UrZX5X7b99f+xR6+AcPHnQaX3kc8/af
OJsJER1+EnSKYlHtM1y/GvmOUMyRpH39/c//VInvavspn/Ip35l888fW3sL8
uTGMtJ7YgrHmfCmf8n2TX3R0CalbPVuKJ+JqnM3m89LEmCLRNyT6j8T4o+LT
P1WKb85S9VZt+4uLi6HDU+2xv6X9pKmfH/d7pLv1P+VTPuW7N780ZRv3Drw2
LYzz9/BxQsFwfFQgtHvAn/h298O1fU3vnVdb1oDkCaFwcZIObmwaVyk+2ep7
/e+J/C5dunDXf86cuar8DRs2wP0P3I/+japZsxY8/fTT8Oqrr8KH//kPDBgw
AJ566ilBY5n0RzZv3hxmzoyBnJxsTb4z7D965Ijsfr8LDuzf53D+nsQ90LpN
G47Njv4B/vDkk0/CoEGDYPy4sTBt5nSYMWMGTJwYDR988CF06vw8px8u/W7k
B8888wzs2LmjSvYTa23s/ylTpgj9xl/b+++/Hx3DXe//TTv/BX3rOCFOKF6m
WSRqGMVyetZ8Tlo8ykELa7sM9h+5WSW+2bVu9vxTPuVTfuX4iq0Y1Var9key
3PJdLRyK8imf8smF/K3DpNpnyDdE5p+JeWlcvNEcaT5d8BtlzG0ApZe2ucx+
trb9K6+8Yvq70U/6XsO+3di/uxm5lr6b9D/lUz7luye//PYpSP/mQbg1PYzL
G5Nq2/PzZ8bdC30eC8DeNcr3T8cmAfDPtz1NLymDx9lP+bbz2ZiaWjX5Glon
T57U5JcUl8DKFSugZ88XITgoiLxvMN9LWFgYvNijB+cbOpl0yiLfmvMnFypv
/0MPPUz4sMaMHusUvsHAwO7du+H99wdD/fr1zT5/nC/J3x86dOgA4ydMgOTk
5Crzq9r/vB9ROs9Ro0Y5lU8uWG//guX/YDXPYpGWdQjSt47HdK5jCT2jpl1X
wY00rL6slz7/lE/5lG8/PqOyDdGmOAlLA0POMebPgPIpn/IZYIwlkPNzN5mG
tVK7Gte65vxJeDtbF21BE6hIP2szX7PNBvtHyGLg8fG5556DMiwe3hF8fG80
5yHXn/Ipn/KVbYa8W5C5sCWkzaoLlyYFAadFLcQSsXFFXB0zoX7ZsM41Nd8/
7PjE483h+rXrNvFdbT/lV46/d+9e3r+jCwWD0WhhawahLl+5DIcOH4YdO7ZD
4u7dnGZOZmaWzXw05wT7x48bR/i1GjduLP0e48T+v512G3bt2glr1qyBRYsW
wULTuCJhBfy2aROcO3cOysvKHMrH90ZzGvazOuQBNQKw94MfnDyV5DQ+ubXt
9n8Zc0iIG4qT6pth2kTiqMNy00Rf0QuDNqE6j976/FM+5VN+VfgaLYz6VvgS
8l+pH8wsyeJ2lE/5Ps435F2DrO8fkWKHWL8PplmdPrseUQ8tU4wrIvSu65u+
q54AY/5Nm/lq526t/UuWLJHlmfF/t7K/1TVp8hBkZGY4lK95XLMD5VM+5bsr
nynPh6yfOkN6TF24MjkUaQxdQDXvA1GNe7Gu2bSXA6F6NfL9w+e88suNGjWS
Yhnc3H7KrzyfrXfOXu9XX3nFJXzrBvvwL1y4gGJ4xH9/jxw54jS+2eO6Kf+b
b74h4p06PNXBqXzFdjbab6hgYODnOzDtaimWSNKvFn1D8YrtRkw/WCW+q+2n
fMqnfMfzVc/DimPadgYMuayyM+VTPuVL82WXtkPm3AZETBHvM9KT+WdyXWu0
HMb5lLKWdQKm9A7JcZD9W7Zs4WLKCX0QYdSHmr7vLl70mP6nfMqnfDfgGysg
d+1r3Lvu6hQ81ywExROJvqGUaGmZ9SPFD7wXageo576w0xBdCCQmJrq3/ZRf
Jb5Yb/27b791Cd/Z9vfs2ZO4z78YMcKpfEtbuxu/Xbt2xO9ZK1eu9Dj7i0sM
0HXg75g/iNcmkuqgxSJ9ayI3TYgzSthwwWevP+VTPuVb5mvzGOUZMYoZq48m
rWNUWymf8imfXFNwcBZW+0yMHYpAPiBOl2h2OJrn88/0QnsY0i66s/4tYEzf
W7bybbH/zJmzvK4DpgcpztesWRP2H9jvUL6lo3ni9ad8yvd1fv7W4dw77vp0
PeYXChSmesk/NEEvxBgFCu38Nps+CoR6QdVk9RalmIuAgBqQkLDCbe2n/Mrz
S8tKOU1q9lr/c+Yf1W28zf4tW7cQ//42bHg/GLl8O9+7/pb4KSmXhL7i+ysi
PBzKUE6cZ9mfnlkCLXqulvSKkJ8oXvAJiXrWsZyWNa5fVPepZVwNtarwLVnj
jtef8imf8m3gW3UOWsfW0qMVFoRlZXod5VM+5ZvlM0bOx0PGC+kx7SJBt0j0
DRHtZI20/O1ybUb72X/z1i24//4HVOtRs3HwCStWeGb/Uz7lU77L+IUHZ3Fx
RLdmhnH+IF6DSNAimiDmmfG+IdZPRLbzMUWXJ4fA8Tkd4dFHm8n819h7yrQc
PTHa7eyn/Krx9yTu5q5vXdP3v1KayDvtZ4yM6V5/lIib27lrl09ef0v8iRMn
Eu+BadOmOZWvvlh5/pmL2XBfh+Uor4zTLWol1jqLF/xCom5RrFD/LJbbrmXv
tZCdW1olvnKle19/yqd8yreWr0VltM9YY4W8mSGmjOo2lE/5lK/NN5bcgZwl
7STdalTvLBz5hjJxzWtcx2iOoF0kaBgV7Ztud/uLioqgPR67fRf5m/20r7/y
6P6nfMqnfOfzS07Ecu+v9Jh6cDlaB6JutZhvxuea6ZF+Ne8fCgRc3/riJB2k
L3gEKu78C7m52dCpcydFXXN8HDx4MJRXlLuF/ZRfdf7E6GjOV/LGm2+6hO8q
+1evXo3uc9b+l/v0cSpfvuyO9x8bN4TXZtPr9ZCfX+Dx9q/feoXIKwuJFH1F
QnxRZDy3XtwG5aeZxteGbgcj49n2Uz7lU759+ZIeEoNvKJvF/k8cksEPoGRr
GoltRfmUT/kW+Yb0ZNP3zkNEvTMu90yMFzJ9S/FaRRFCvJEeMk1thI6RsG/R
4W/sZr/RYIC+ffsqfEPi+L7pu8se9mvxfeX6Uz7l+xK/5MxqpLX275QgFCOE
pmLu2YRAbnpxvE5YFwp8vJFp3fgQuDGrAZRd24cOzX4bRkVFqfqzxbii7t26
Q35enkvtJ2cpv7L8jp06ctd14cKFLuFbGhzFZxgjtGvbDu7y4+/tan7V4NKl
S07ju9p+a/hxcXHE8z937lyn8rmtHGT/mDl/83pEkZIeUbBsGWkXRcYTddDi
156vMt/V9lM+5VO+vfhaO5trYFTOV7aOWC+HWnPylE/5lC9vqEjdDRlzI0j9
amwUfUaZ8pw0lTy0kmM/2MwnbBSahg0fhnI4xBh3cdqpUyfTd1mp3exX48u3
8+brT/mU7wv80vN/QMa8htx76sb0uoLeUAjKMRPjicT6ZikonigQaRWx02vT
wqD4zGoFn60THh0drajFiH8ztmjREq5fv+4S+13d/97CLykpgZo17+au54WL
F3zO/oMHD0r3tekeHzJ4iFP5in3dqP8NBgM0b95c0nBq0ACKi4udxjc72IFf
UWGElz7cIulXC3rVUh5aLMo7C4nE/Ujx0KDDcriYmlclvqvtp3zKp3x78ckV
jKJFbR91LqPYlFHMaZ8h5VM+5VvDL/kngcwzQ3rWfI6ZqF2UiU3TxfWzhZgj
IVetJOmnKtk/f958RR0hcWze7FHIycmxu/2u7n/Kp3zKdxy/InUPZM5vyL2f
2HyzS9FBkIL7gyYEYvFEIZieNaldxMYg5R+YZZa/dGksBPj78+8v3Nftx48P
NnoQzp1Ndqr9ir197Prbk79r1y7ueobXj3AJXz7nCv5rr76C/k2ubrrX1WKK
vNl+Lf7yn5YTeXkJK1d4nf3p2SXwWI/VKIZIiiuKR1rXyHeE1T5jp52jfoPy
csaj7ad8yqd8+/A1z4dRcjRBin3VlmVnS/mUT/mV4hfunULECHF1zoQaaBmY
hpGkZRQhaV+LtdPY9rkRUHLu10rZ/+eff0L16tXRb/B+WP0gfaieqyPiKPsV
g49df8qnfG/kl13dD5lCHBH7LrsySdKjxnPOkEY18hWx86HIh3Rpkg4yfv1Q
BlHnb922DQIDAzX1ikJCQmB3YqJT7Cf38b3rb2/+hAkTuGv4dtRAl/DJZdfw
b926BSHBOnQ/DxjwplP50rL79H9paSk0frAxqn3Yo8eLXmv/0aR0iGj3E9Im
ErWKgom8szhlXFGrWJg8/3iV+dKy+1x/yqd8yreeb7ZNeWQLp6i9FaO6Gmug
fMqnfBv4DOT9+X9CDJEeyJpnZKwRoU8k07vmpqbvstKLW2zinzhxAgLr1FH9
rqpVsxYcOnjQwfarHcWXrj/lU7538ctvHYOMBY2R//v6V6FE3JCijhmmWy3m
o6VwGtahcCOuNzCGUqv5SadOQYMGDVTjItm4ooCAAEhYkeBQ+80d2xeuvyP4
zz77LHf9lixd6pP2i0P8smXEPb1nzx6n8l1tv5w/depU1Be1a9eGSykpTuUr
tnew/Ut+OYfihEKQTwjPOYvF8tKkuKLQ1vGw98gNj7ef8imf8ivPt2ql5sbK
FWaPi21kRsWb8imf8q04KPsdlL2qN+f/EUcpryycjCvC6p+JviU+/khYP78h
lF/daxX/5s2bcN99DTFdDzF224/TzFy5cqVT7Hd1/1M+5VO+ffgVaUmQ+V1T
XoPf9D66NTMMUvC4IcI/xGpX6zm/kOg7Ekdu/bw2YCzJtYnPDqmpqdCsmaRX
gn9Xc/6jan6cppEj7Dd7EB+4/o7gFxUXwd1389pEl69ccTrf3PFdwe/Vqxe6
n1u0agmGCoNT+fhGruz/K5evQM1aNdHfLfPnz3cq31X2D520X4oX4mKL4klt
60hRzxrzJ5nG5t1WQ86dUpUjepb9lE/5lG8HPiNr0vAxqe3PqB2QwacMoLNj
1PGUT/mUbxvfWJINmbHPoHgipG09O1wlrkhP5qMhjeswLi+NzfcoSdlslp9f
kA8tW7aU/e4u1QqKiYlxqv3krO9df8qnfE/nl986AVnfP4b01VhNosvROiGH
LJTwA8ljifBYI85v9HVjqLhzpdL2Z+fkcNr7kuaanyK2aPDgwaZv7Aqv6X9v
5e/YvoO7hg3va+gSvqvtl/Ozc7LggUaN0D09acpkp/JdbT87svXeu3Z5AT3L
/fr14zTtncV3pf3FpRXQ7pVfiZghXuOaHeNlWtdijBHf/u7IXVXmu9p+yqd8
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
tZ9keA6fjck68NMymNGxo8X+R/4jfSiXJ5h7/YbH20/5VeN/+9MZFDPEv7v5
OFAu7+xJ0XcUL+QV8+/81n3XQwUbU2QHvqvtp3zK902+1s7mGhiV85WtI9bL
odacPOVTPuXbi79o0WLwD/CHAP8A2Llje5X4FWmnIXtJW+m7ERtRfTR5TopK
HlrmHFHHRKilLfiRsmOfgvJ/99rVfvIwvnf9KZ/y5fyK9DOQk9Bd8fyhOoei
fvXscCD1icJI/WqV55/VJToy+j7o0X2M8C0h5Smg7wrhW0LUtvhwTKJT7Tc7
uICfmpoKzZo1U+gV3YXlDUdHRzuMLzuMZoOxohzm9exF6k4LvoXhnO4N7n8Q
Y1V0ki61rP4WHn8k+iz4PDYdVv8siNAsmvHcc3B83TowMvLvT8+9/s7m/3vk
CPz00UfweXi4Vf3P6o1vnj4dyooKvcJ+yredX1pmhObdVxG1zkSfkRgXSsQa
Cb6khA0X7MIX5321/ymf8l3DJ1cwiha1fdS5jGJTRjGnfYaUT/mU70j+pk2b
YPlPP9mFbyzJhjvr3lDUNEufQ8YgiFOxnjarT8R/j9Yn4oz471LxW5Of3tky
FKA4x2v6n/Ip3x34jKEUCg7Mhox5Dcw+f/yzy/uMMtGyqEUUTtYxxJ5/NpZo
02ctodnTs4VvCKk2jvQNEY+0TtnlsDZxcPHqHZ/of3P87Jwc6NypE69P5MfG
FPkRmkVsjNHg99+HCkOFQ/jW2P/n118TPh4uDkWc14l5S5hmEVoOwXxIOqRn
JOkb6QCvl8auH86uD+J9GF80qA8rhw6Fq0ePyU7Se66/K/i516/D2pEj4fOI
CLP9zy8Hw8TmzeHo2jX80bzAfsq3jb9kZTIWTxSH6VnHEe97fNri5TVcTJE3
2E/5lO+LfM3zYZQcTZBiX7Vl2dlSPuVTvufyGQMU7ZuGNErEGkhEXhnSMolA
/iMUmyDEFHHa1jLta/T9ufAJKL3wu3vaT/mU72H88qt/cbGAVj9/slwzed17
aXvp+d8wOQrCWy9GPiCdUNNM1CYKEbWrsbyzj6P3+0T/W8MvKyuDqKgoFb0i
aezevTvk5eU5hC/to7T/wt6/YHhYGJE3huqcifll7DQI9wGRddDYfDTCHyHu
I4srEuOOZjz3DOxdsgRKWHt94Pq7ip976xasGz0KRtSrR/S/pEceIulfm6Zz
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
pjina74/elLy12fxwudfVVlJt902SNMLGe2LxG3//v2ppNScQ64u/NUzpss5
yTR/siCXK53XCzA50IJyfONH2rSm0F130zYxvrHFNKbq/IOv7IU/1C/fDdET
7dtbfv7qd2TEOWfT+rlzXefXZwHfff6oieuYeETR/f7/d/x6z8gPPvie50fq
z6Zfsw7KVKAxzaTIsoIPPvje4lfmLqP8Sd2kZ08uf9KrxufWNubnWTWmrnZO
W93OQcyxptlKKNvws7OYG00o+ylp5AcffDf4teUFVPblq5Jtj933X/87YXU+
uu6nLn9/eRM604mNU23lX/ntYYPvAZvrJks/1tYsuuGvC+stv5Hvt89fXGpr
iTIzM3VdkSFeUYNAgLpc0oX2799XL/5PO3dpedE1v7FgULMpkvUCQaU+qOe4
D6//6S7HHSqVbIe8Of/g6/t5e/bS+Bv/yNsSBYOc/+Hw8PGHTz0l6Ti9Jr/f
+fnFlZTR8906/f536j2DysqrXOEnWn7wwfc8Xys31ESIte2YV40fqEOxwFSB
Dz74XufX1pRL+ZGkZ1H12fYVCxsGxm6I95WR/WjUmCtaOeuDxvjciPqikiWP
ER07mhTygw9+fflCVRkd/2aclO8v2u+/qhuSfciU+pdbK/uR//5K5w+hmuNG
XyF+vHc+utQi701Ii0thim162RT6JGdvneW341vV8lu74tTnZ02eTA0bNjT4
oel2RR06dKAtW7bUiV9dWUEv9bpajj0d5HPd67oA3V5ErBfjXE8Rc5YtzwkP
vTZu8tvVgh9fvmhbtHLKFHqsfTsl753uc8janr3avz8V7jug9eIW31hr7N+6
GHy3+P94YXWdfv/F/an/2+4a31jLb+2KvTP/4IMfU74Fji1iYw1GMzK7Aqtz
BfDBB9+X/JpD6yh/am89Nq5mO9RSi7ebp+qDWNsHpi0Xe5eJxas9FzO2R0fG
dqKynGc4vxk/zz/4qcMXjuXRsdUvU974zvX//kt/U6ouyGBzZPH3V/DOL6lq
3xcR5T+af4LOuvxdPbdNV97fQPZHCGnvlsVyMUeOaA+TKvOf7PxFixZRk6ZN
df+zAG9jlJ4epGU5OVHzZz8xgsl5bpH/XLMZEeMO/ZJy3nyTygoKHAX28vyD
r9cd2bmLXryqJ/OdYX0SZZuzJ8/rSDu++tqT8vuVv2NvCbXoEYrq91+1Nbr2
tvmekR988L3Ot+9NcKizgSuF2v+WGDuJwQcffN/wa2uo/NtxdFSMr6LZQfCx
c1kbCfmZuA1v/8DmblJtKNh83kxOJzl2Sxsq/vA2SU+VcPnBB9+hw5ri3VS6
7N90ZGwH977/6rmGfGfa399rGVQWZgpVx6KSf8yUjYyPQUiLZ6rGLdV8EaRV
jlERmrMtKvkTPf+pxN/43UZqn9HOwq5I1hc1btyYsrNnRORvXrSYhgebazZD
Q9WY1coz/vDwM79mO5Sz3OI+0p/zD75eWFVRSe/9/e+SL6KqT5TjoAe175X4
HVr3v//FhM/978P5TxT/jkc+j+r3n81/9v22fPsOU0x+8MH3Lp8M13qBrxd4
tnnkEWTRTrQbG/jgg+9nfnXhDip+/yY9nooUO7eF/lxrsn/Q4/SyMazF/bzR
BjsLLX6vntdJ7rMNlcz6M1XsXsL4SSRG/kTPP/jJxa/cv5qKP7qdjr6WEdPv
v/q3ptrsFU7vR1WHN0Qtv/hXc/lNc7T4pGr80nRNb8S/Sxa35/eZSRUVNY7y
J3r+U5W/J3c3XdS5s25PZMiFJuqLMkdm2vILDxykf3Y8N/w8r8auDj/XN0tX
Yg8F6d+/uJiWjRtPZQX5SSk/+MnF/zo7m/7Rpq3ic2aMfx6UYhbljB/nWfn9
xv96/U8Rf//TNVsj+Z3C4y995Rn5wQffy3zjWEwDimLhTolwvqkafPDB9z2/
YuciOjrpcpOdhOwX00b3txFjWovPv0oeJ7FOzNl9RIut0lbXNxlj+DI5ndTn
6IKsX1P52okk1FT4ev7BTyS/Rvr+F8y4Pu7f//zxnaXvf/gPoE7yf/HtASWP
TYiPU9pV9T8wxDAN77/49voknX9v8AsLC6nX1b05/7MGhhjX9wweTFXV1dzJ
QvizH3fDH+WY1EwcokdatZJsh7Yv/4Ic7zWTRH7wk4v/07bt9OKvr+RiXA9V
41sp+qL3hj9MtTVVMeFHbMtBwT9Zft875zv+/uur7IPW4er3qLy81jW+tYAO
bTko+OCDb3W+uTvBsC9wxcb2glMl00gw9StvwQcffPC1mprjdGz1K3TkjXO0
uNVs3rMjo9twx7oNEhOnl91X7CqOKLYWrD2G+Lytx0IK9/vWL6Q4MDUlbJxN
f80/+HHmH8+TYlMXqPpRzT6oZcy///mvt6XSZZkkVJRYjC2y/Pf+M0e75+di
UnTTY5bq8UuzqGWPEB04xPqzJcH8e5BfWVlJtw0axOuHAg24+EX9f9ufSkuK
tf4+efFFxd5Dtvv4T4/utHTcWCrLz0s5+cFPLn5lWRm9destuv5R9EcLij6M
zbQY6RP/cgtVHrPydU19+f3EnzFvu+3vv25LpF4vZD3SzPk7XONbLj6af/DB
jwmfJdlw7PDRLoLxwFQAPvjgg6+X1h77iUoWDpP8Y46M1n1q+HgsLfg4K0Yb
DC4+r4Uvzmj9mZmNnS0yi+YMoIrtYpzFal/OP/ix4wu1AlXt/ULKJXb09Qzz
94+NLR2j73/RnJuppmBbveXPLz5Bra8IaT4G6RbPBtozgrK9dfiSpJh/P/BF
W/LMzExdN9TA7IvW5dIutH//Pvpx1Soa3rIlPdqqFYXuvkvJWXZyfNvx+2T+
wefPr62poQ9GjJD8GDWbNSlmkawzEvVFo6+5lo4XFsaEzx34cP7jxT9RUU0d
rp5h+fuvH4eYuEVZ9LvBH3tGfvDB9zTfaTDqTYNQ9zELzJ7jueCDDz74hqX6
8AYqZH1xFHsIKWYvZzfRlvevUdYjnB+O4Vn6VSZfuLFcOT//zV9Q6edPUfXR
bb6cf/Dd44u6z+PfjqeCdy6P+vtnill9kt//wilX0oldS05a/remb+beG6cZ
fc+0Vc+R/MnyvdFMVFT8aJdk+vwTwX9n8mRq2LCRpf+ZuJ7Xvj290KsXLXl9
DJXmHXWdn2j5wU8ufs7bb9GwFs0530Y2f97LvXtb5M7zjvx+4P/jxdWWv/+a
71k3s+5o264i1/jcqcyeX+YffPDd5ttWS2OzPzki0/H0KOQGH3zwwZf2a+nE
plmSX5j6DC3F3tWek1vwz9HsM7jqY8bld1LtMOQc4Oxztf7c3pK42L/htWjW
n6hy61yimkp/zT/49efXVlPFjk+p5MPblHx79f/+sfnL6vr9z58gxiB6RxqP
G/L/6s9zORuiNMt3xyEttvWFfWdSVbUaL95Hn38S8BctWkxNmzblfNDU/cbh
NT09SDk5OTHj257tk/kHn1+++2QBPZrRhtEPBRXbIlln9HKv3oq/ozfl9zp/
0/YC0+8/a3dq9DsTy5567SvX+ImWH3zwvccXLHetiwS+MMI4bJsJNgfggw8+
+DZNa6uPUfk346S4u+pzNutjoz9T68/hUmwWyaenpZLjSbW9aMPni2JtjdQc
4iZfHsWOY+x5VPzpMKrYuYSEmsq4yZ/o+Qc/Wn4NVe5dRaWLH6OCNy9y//un
lUX+/ueP7UjHVr5ANeXMO/qTlP+bDUcU3ZAep9TqOUCNVSqWPz9hrWv85P/8
k4+/ceNGyshop+iHAtQgEOB0Ro0bN6bs6dkx49t36o/5B5+v3rt+A/3rggu0
eFhSHjTRJy0or6OuvlrSFXlVfq/zrxk0n/v9l68TSnxryfY0pF8rwmXnXfse
VRryYJ4M37GZD+YffPDd5Au2BfYLPwr7vu1LBPMe+OCDD340/KoyOv7tWMqb
cL7mf8PGaDHaaGhxfqXnbNb+QrTnaKvbYJjiv8jP9Gx8YGPs4IJxF1Lxp0Ol
XFXhgcVH/ggNwU8AX6il6gNfU+myf9PRt7rE7ftn9/3PG9OeSpY8RsLxo67L
/8h/v5TeBcv2RCHNnkjVFXE5bsJr8/CzwO79pa7xk/LzTwF+bm4ude7c2eB7
FtBjFwUClPlMZsz4Vsd+mn/w+eOju3bRM7+4hPM7G8ZsR/36Sio5mhczPrfn
w/mPJX/KB9uYPGdZyruELD2OdVfVniik6ZI+ydnrGfnBB9+rfPMJzL5FP3yX
0YH4cVm1BR988MGPgi/qi74ZT0fHn8fEcGlpHfNFjdei+OvoOaWMcWFaMM/2
qq1HC+a5nfED4p7vw/2Ov5BKFj5IlaLOqJbJOx0r+W3Ps1/Ad5dfnb+djq14
jvJE3VCCv39S3esZVLb4MRLKjsRE/ppqgS7oO9OkE1J9CNR3yOq9v9ju//1t
cczm3/o8+8Xv/ILCQurduxevKwrwca4HDx5M1dVVMeEnWn7wk4ufv2cP/eey
S7W8Z1IuNGm/mbT+98or6XhRgWfl9yr/eHk1te85Tb9OaDanWVpZsKuqN5KP
hzy13DW+3eKX+QcffPf5zn3bt3AemyDo9VwLIZrxgg8++OBH5os2E2U5I+no
2A5MzBb5mVy2uWghx/NlbTJGs3YYLXSfIDUmsDHeixY/poV+vhYbW9ENMDmm
8t7+BZWIvmnb5hKV53t6/n3Fryqlih8/ptLFj1P+xEttP/94f//yX29PpUtH
UG3ZoZjKv3z1Qd13oKseZ0K+3w8ZYhbJzwQLFud65/P3AL+yopJuHXSb5nsW
CDB2Rcp+//79qaREtwHzkvzgJxe/6MB++k/37rJdUZDJhxbeSnnQ+valyuPH
Y8ZPtPxe5T80coVyPciS4lnLfmYh3QdNuVbIfsohanflNDpRGeH9Wh34iZYf
fPC9wje1EixLozpfC8ttPDVCV+CDDz74J80/lkely56io+FnZj0PVCstposW
H5iNC2MZ+5f1DWKfzXn/H9UvSI9LLO8fUfQGuh6gnZSz7djqV6nm0HoSfZRi
In+i59+j/Jojm+n4NxOkOOZ54e9WnT//WH7/XjubShf/nWpK9sVl/oc/t8oQ
t5rJcybtZ2l14nPBedeIcSdqLfuqD9/pfK9+/2LCDzfKzMw05T9TbYrEbZcu
XWj//v2x4dtV+2X+weeqiw4epOcUXdFwMaZ1WpqWC214eP/tv/yFamvM8Wvc
4psP/DX/seB/u/Goci0IMdeLLC6enXGdv2SPa3yzTM7n8wfggw++8zmCfZlp
EJEWgd8TnEcAPvjgg38yfFFfdGz1y5T/1kW6zYWUI1x+tj7C5I0yPn/LsY1a
mJ7Jj6qxZQyxg9k+pOd5tpyJTcPy8968mEo++RtVbPmAao/x8Re8MP+pzq89
UUgVPy6g0kWPUN7bl7r++bvx/Tsy7jwqW55JtWUHXJffbv6rq2vpvF4zOD+C
9G66TijIPAOkK7qjJ1/+iu8nBT5/P/EnT55MDRs2VGyJAoa4RQHqcG4H2rxl
a8z41q39M//g60vx0aP0wq+ulH3OgkHZrkjSGYX3g81o5sN/97T8XuT3uHEO
F6suyPgmm3zSwuvdTyxzlZ9o+cEH3xt8mxLBuhV7pOmvrDtzJEVsBz744IN/
Evzamgqq2DybCkK/4Z7tZbsPPq4L+5zPxYJ5hYkNozzr67nJW/Nxh42+RVpu
qxaOfDG2TfH8v1L5mklUdfg72V7UA/OfKvzasp+o4sf5dGzZU1SU3V/y6Yrn
51+X79/Rt35BZV++QkJFUdznf8mqA6aY1aqPme4/MEVrI65fb7CKo10/vvHI
K9+/RPMXLVpETZs21eyIjLZF6enplJOTEzO+ZTsfzT/4eruSw4dp5KWXarZE
cpwiNXZRkD4ZNSqmfPOuv+bfbf7zE9Yx8avV60bIdJ1Q/Zczfj2VjpfXekZ+
8MH3Et9yHFH0WbcRCPyxxcnggw8++K7ywz+oYj6ywtl/1uMLs8/expjAyrGu
E1Bjx7TQYxSPNjzT2/Rx1BC3OCr++POoaM7NVLb6Farau4KE2hMnJ79Fa199
/mzr2mqqzt9G5RunUenHQyl/Urfk+/wt+AXTrqWKLe+Hx191cvKzx3Wc/4dG
rtRjVKs6IcbHTL3nV58HLv7t+1Rby5KT4PMH35K/ceNGymibYYprrdoWNWrc
mLJnZMeMz7cz70fuEXyv8I/s3ElPnXeeFKtI1Q8NU2yLxOPVU6fGlG+1H7lH
8K2WzTsKmWtDlpbfgLtudNPzHoj7cxflusa3a+2X+QcffDf59jzBPCLBtBN1
b3qdYFkKPvjggx8rftWhNVQ6/6909LU2euxgNW6wKVZwKyXeDG8TousOWur2
Ia/qtiKyXUgLpVyNNdxW60+LPxMlP+/1c6gwu7/kB3Vs3USq3LOKassL6yV/
ouc/nvzaE8VUceArKv9uCpUseYIK37uBjrxxTp3nP3Gffxsq+t8tVLl3Rb3k
d66r2/xXVtVQx94zGNuhEJO7JqTph4JSnmNZh/Sv0d+4xk+0/H7g5+bmUufO
nS3sipR41+Ft5shMz8oPfvLw967fQI+1y5DsieS41nIeNFF39HDzs2i7ZN/m
Xfm9xP/Vnz+UrhGyTkiNZy3HrmbjF6k2Rnc9utRVvnWdf+YffPBd5Uc1Bru+
zTG1uQPl2OxeBz744IMfX35N8R46tuJ5ynvrF5qtCBs7WI8H04rPc87oD7ic
51oe87aGcv65X/ZVYvQHbO7zOvLz3r6Eij74Cx374lmq2DKHqo5sIqGmMiXm
302+KHN14TY6sX1u+DN9gYrn3kb5E3vEfP5j9fnnT+hMZcv/RTUF26OSXz2K
5fx/unwf9843aNrKOW2CXfU8Nmt/yNP78vD3z0v8woIi6tWrl4VNkb4OHjyY
qqurPSk/+MnD37xoMf29RUvGBy1d0hWJdkVPnteR8vbtjSk/0uL1+XeL/9Jb
65X3CCFJXxRkcmWqeQ/ka4e83/qKd6nkeIVr/ETLDz743uHbUQX7EdtUGIsF
bitYtgEffPDBjzs//MMp+naVzruX8l7LYOIHt9BsQ45odiJM7OFXWd1BWyb2
DGMzosaxGa3nt9Jj2LRhfJgY/yQX+HnjL6CiGf0lmY598RyVfz+Nqvd+Iflb
CTXHk2v+o+SLtkFVhzZIcYSOfzOOShc/RkWzb6aCd34Zlr1dUs1/fflibKQT
4c+Kqk8k3fw/8PRKJl41m+9Mjzeh1YXv+S/9w2zef/4k+VEJalMMft34lZVV
dOugWzU7IllnFOB80vr3D/++FJfEhC8f+Xf+wdepa2e9T8NaKH5nio5I1Re9
3KtX+KfS7JPtJfm9wN+6u1i2H1Ji2Ml2RSHNh1nNgaD6oInr7IU7XOMnWn7w
wfcCX7+fE9iGhl3mf65LgUw3hFydaUDmEYIPPvjgJ5hfU3qQjn35ChVM7KbH
khmt5rBqwceh0fQCLXV7kZdbK23aaPYheS+35uPYMHYm3L7ix6T7L8WIP7od
5YflK5j5RyqeezeVLHqYynL+Q8fXvEknNs2gih2fUfWBr6mm4EcpbxwJNTGZ
/5ryAhKKdlH1wW/DzMV0fPNMKg+PQbQHKlv8Dyr+6G4qmnkjFbxzOR19vb13
5t/AF3PflS1/nqqLdif8+2/Hr64RqFPvbMZ2SNcLyTEnlGeAy1TdUYieGbPG
NX6i5fcjX6gVaGRmJhfPmvNDCzSgLl260P79+zwpP/jJw1/40ks0LNhM0hXJ
MYuUbTCNZj78sOfl9wL/1zfP5exRTXHtFD9mtWzwiM9d5Tstfph/8ME/Ob7d
yU4FgsV4DXVcvREazeDBBx988OPPF/ONVe1aKuUgOyraGKl+QayPkTEOsSG2
DJfznMlpxfoh5TG+RlIu9Vd0nYUc46YNo89IIF88Hn9BeL1Q8nUTdTeiHU/R
tH5UOKM/Fb73BynutrSG98VYSsXhteCdX0nt8t/uSvniuRMupHxR55Nq8rvN
D2/FuEMV2xcwcamT5/tvPOXrDUc0/wBVN8TmOlN1Rup7YbFuw+a8lP37B19v
MnnyZGrYsKGl/5moO+pwbgfasnVLzPjWBf6Zf/Dl63HWXXfKPmdKDjR1X9QX
fTltakz55gJ/zb8b/Ffe2aD5I2vvFbplcdcVXY8UonN7ZVNNDc88GT7fjf/m
H3zwT47PV1j+ZTqNmeEKpqaCac9+hOCDDz74ycUXjudTxYYQFc36kxT7WrUh
4fyMmJxWR5jYNXnMVs1dJcankfURbRm9BZMTfTSvf8hTdBZ52jH4qcovnPF7
Kl87kWpLD6fM919c/jt+neYToOmCuk3h8tjo74WnUNcb5ph6S9W/f/CJFn+2
iJo2bSrZEAUMeiJxm56eRjk5OZ6VH/zE8ytKS+nZK66g4Wlpkp5I8j8Lr6K+
6JHWrWnvunWelj/V+bv2l3B5zlRfZTlekX5NYWPefbvxqGv8RMsPPvipzrcd
j2Dm2IJM51odG0YLPvjgg58i/NryAqrYNEuKkyzlS+N8iNpqObA4vyYtlk0b
TX/AxkuWdAiv6r5J/LktyejrpMdRNrYHPxn5BaGrJF/GmqLck/7+WbZx/L4b
j+vHv+b2+fw9fjfdd0DXFYWkOKXi/X7mG2s9+ffvZ/53GzdSRkaGbWzrxo0a
04zsGTHjJ1p+8BPPP7JzJ404+xzJhmgoE9taXP9z6WVUUVYWU75lG0ce+Ozx
1bfM1XOddTVcP5jriWpX9MKEda7yEy0/+OCnKt+xzNxzhCHatxIsq5kC8MEH
H/wU4deW/UTla9+hIjHXuqY3aEmsH5Oqa+DjA/HxjjnfJM73yVonweotdBuW
FuAnET9f1A2tfkWKvxSr7591L+5//48WllOLHiH+Ht54T99NeRcs2RVl0apv
zfZSqSo/+Po2NzeXLurcWYtpHVBjW6troAFljnwmZny7xS/zDz7RD598TMOC
zRU9UVDxPZPti2YMHxZzvlMbP8z/yfCfHbuOs0NN53zOshi/NPka0+e2+Z6S
H3zwU5UfVaVtY3OFY79MI4co3uCDDz74KcOvLdlPJ9a8RcWzb6Y8Kf6OhW2K
hW4hj4t/o65tDMe8jkPXb7TldBvqqvtVgR83/uh2kr6w/Os3qIbRDcXr+xdV
03ryZy7YwdsRKff3bG5j9d5eXNv9ZjpVV9e6xrc8dqjw4+9PPPmFhYXUq1cv
Lv9ZwKA3Gjx4cPg7UB0TfqQKr88/+EQLnv2PHMs6LU3Jf6bkQgtvN8yfH3O+
U4Uf5r++/C/X/MS9W0hXcp6lsTaq3ULacYvuITpSUO4Z+cEH3xN8wVBko2Oy
Ol+w6lBgtwJpoxOs8eCDDz74Kc2vPkGV+1ZQ6bKnKH9iD4Ndi+7vxNmxSP5N
bRT9hV5viqVs0HeYfaIMflImuxrw3eLnv3kRlc67lyq2vE+15YXJ8/1zmX/v
U8s5PZDRloj3G8iiux79nOvvZPmOSzL+/fuAX1lZSbcNGsTnP2NjFgUaUP/+
/amkuCQmfJN85K/59zu/pqaGxt5wvawbkmIUBRVftDT61wUXUEmeIa6Nx+RP
VX51bQ21vyrbcC2R82UGlThF/HuHLJr18U7X+ImWH3zwU5pvMRzB7ijC0Ou0
CIYt+OCDD76H+DUle6j8+2lUMvd2ynv9HLLOs96W+Jg5sl2MrpvQYyyb7V/0
NY9pw/lYaf5UbcGvL/+1NlJuNzHWUNWh7+r2JbBbkvz7X1sr0HnXzlTe/eo6
Iv79L5/zbNqHP7rGtzxKsb9/r/LFO87MzExT/jP2uEuXS+nA/v0x4buygJ+y
/KJDB+mJjh34OEWSbVE6TRo0KOZ8VxYf8u98bCmTD2GKFstavbZw7x7C65Cn
lrvK5xYfzj/44J8UP1K5Y1MrOQRTEduFs7jggw8++N7i11YfpxO7llBZTqaU
S17KEc/qOFT9hpo/i7Nt0fUjWs6tV2UdR55lzvYW2vlHlP543QdjbwO+mf9a
BhVl95fswqT89RUlJ/35J/r7V1f+mu+Pavfu8hpi4ktkKXUhLs7EvkNlXB8n
w49UpJd7c/5TgT/5nSxq1PBUU1xrVWfUoUMH2rx5S8z4iZYf/MTxv56RLfma
DQ82k/VFSv4zcf06e3rM+Xq5P+e/Pvxp//uRsxti82jqudD09xKdrnlPel/h
FfnBBz8l+eEywQpjcZYVx5kXzejABx988H3Ir62mqkMb6PiaSVQ6f4jky3SE
8XOSY+6o8XJaMPGyW3H7sj1NC62d6mcln9tS05+o+hRez9KS88/yK//o2I5U
+N4NVLbiearcuYhqTxTH/vNXypL1+//SWxuUOET6/Xwa42em+5zJsYquHPCR
q3xjmd/mP1X4ixYvpiZNm1joimR/tPT0dMrJyYkZ33nx/vz7mf/O7bfTsGCQ
y30mro+f3Z5KDv8Uc36i5U81/qGfjlPz7krc6q76+wb2WqLGLFLfTaz7Ic81
vlW9n+YffPDry+eOBJu+BcNxPRe2G/DBBx988NUagWoKttOJ76dR6afDKT90
peTvxPlNKTF45Pg8LZR9Ju7O6DbyMeuDpfpWGW1z1Dg/rJ6F1Z2o5Z7jt6GC
SZdT8ccP0PENU6jmyKbwtbImCT7/5OJfd8/HWi4zzZ5IiiWh+w2wfgLPvL7W
Vb653FhX9wX82PA3fvc9ZWRkcLGKxDhF6rZxo8aUnZ3tWfnBTwy/LD+f/n3h
hXKMIjUHWlCObx26d0jM+XVdwCf6zYCPNL+ydPV9Q7csrUzTISnlr07+zlPy
gw9+yvEj9WfTr1kHZSrQmGZSZFnBBx988P3Or62poqqCbVSxeRaVrXiOisU4
R2/9Qtd7iHY2Yo4vzVaG9cEy6lx03Ysx3jOvt2lj1ueoMZ21c1KEP64jFWb3
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
VlXQoEGDGN1QQPdHU/RG/fv1o5KS4pjwEy0/+O7yd33zjWYz9NbAgVRy+DBV
lh2jf51/oRKfKKjZE4l2QZuXLnbkC7W1NOZ3v5N1S8o5ol3SgR9+sORbDs5H
819f/nvztptynul6I/P159rb5rvKT7T84IOfOnzBcte6SOALI4zDtplgcwA+
+OCDDz744CeEn/P1AeWePWTyM0vrlsXkLJbv5bv/8QNX+Y5NfTD/fuGLZZmZ
mZpuyLwG6NJLu9C+/ftjwrc88NH8e40/4c9/0nRBT53fiTZ89BEtfeMNze9M
1iPJPmQv97qGOdXMXzJ2bLhdUNIPqeeKa9FPh2z5VqP20/zXh79rX4kWvzpd
8zObYnv9OetXIaqpETwjP/jgpwpfsC2wX/hR2PdtX2LxKw0++OCDDz744CeM
/9b0zdr9uZqPJtiVtydiYxM99MwqV/mJlh/8+PLfmZxFDRs25OyJWH+0czqc
S1u3bI0ZP9Hyg+8Of/e333J6HXE/68476J8XXCDZBQ1jYhSJx9/Nn2/J/2nb
dnq0dWs9/nVakIaLazBINYovZDLKn6r8C/q+z/mdsTGKrK4/23OLPCU/+OCn
Gt98ArNv0Q/fZXQgflxWbcEHH3zwwQcf/Hjzh/5HjWGdxbzrzTLFkVDv5Se9
t9XQc2rLD378+YsWL6ImTZtYxioS1/T0NMpZlhMzvnUL/8y/V/hvDRigxRKS
YxKl04izz+biWIv7w4NpNLpff1MPtdXVNPraa5T2zRi/s2b0VMeOSS9/KvJv
GbbYEJcoy/H6M/ezXFf59i38Mf/ggx8937lv+xbOYxMEvZ5rIUQzXvDBBx98
8MEHP178a26fL73D5eJWd2XjR6gxrUOS39mqNYdd5dstfpl/v/I3bvyeMjIy
FJuiAB+3KLw2atyYsrOzY8aPtHh9/r3A37fhO8nuR9IHBdMZnZEcw1q0MVLz
lw0Nb3PXrOX4n770knJeUNM1qTqm/155ZdLLn4r8Z8euUXRDIcbHzP7689/x
61zlJ1p+8MFPBb6plWBZGtX5Wlhu46kRugIffPDBBx988BPHF2M/ZPx6qmLj
r7/DDTL36qz/mVheUFThGfnBTyx/9+7d9PMLf26yKVKPA4GAFNMoVnz+wH/z
7wX+27cM1O2HFD+0YWlB3u8sKOuP3v3rvdr5YozqR1q1ksqHS+elae3FGEfj
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
r674FY0YMYKWLFks5USIh/zWHSbT508GnZHA1ws82zzyCLJoJ9qNDXzwwQcf
fPDBTwT/mtvnMzlmsqT7czm/TEh5r8u+051Ch/PLXeUnWn7w/cMvLCqk3r16
6e+Y2XfWStngv95D1TXVMeFbVvto/pOJ/8GTT1roh5rR0GAzzcbo1V7XxIyv
Vft0/o387Lk7orr+qLGtX3h7vat8prGhS3/Mf6L5K1asoKZNm+jxq1W9jiEP
gabjMcTANtkTWdkSGWJiW7Zl+E3POJP69utDo14cRZs2b/b0/EfiG8diGlAU
C3dKhPNN1eCDDz744IMPftz53W6Yo8SEUGKFcnb/6vtcPV9xZWW1q/xEyw++
v/gVlZV066BbLZ8X1OP+/fpTSUlJTPiJlh98eS05coQezchQfMyaKTZEfFzr
twYMiBmfK/Dh/Bv5nyzbG9X1R7YtCtFjL33lKp/b9eH8JwN/xcpV1KRJUwvd
jjFfZYDRJRntiAImfZK1/ZH9778dX4yHff99Q2j27DlUVFxkLVMKz78d39yd
YNgXuGJje8GpkmkkmPqVt+CDDz744IMPfmL451yVLeWY4d7dds3SVjbvTMZv
prvOt5JI3/f+/IMff774b2TmM8yzgPF5oQF16XIJ7d+/LyZ8fRwWjbl9b85/
svD/99RTip4oaNAXyX5nMx58KKb8RMufTPyvNxyJeP1RbYzE/cEjlnlKfvDl
slWrVtHPftbUUrcj/k7b+Z3ZxTcy2R4FzLZIVr//kfiNGjWibt2704gRT0h5
1KqrzO/P6iM/v58knz9LsuHY4aNdBOOBqQB88MEHH3zwwY8nv6q6htK6T7F5
h6vnIk5XfAEu/cNsV/mJlh98f/MnT36HGjZsaPZdUHweOpx7Lm3esjVm/ETL
73d+Sf5RerR9O0NMa11vNHfkSE/Ln0z8HbnFEa8/aYz/2U33f+YqP9Hyg6+X
rl27lpqH/wZV/U2ggU1+s4Dxd9vKZsjGhsixverzFj2/efPmNGDAAJo4cSLt
3bv3pOS3nb96LK7ynQaj+q8JdR+zwOw5ngs++OCDDz744MeNn1dwQns/q92H
q/vd+Bxo4nrtbfNd5Vs0tKjz7vyDn3j+4kWLqEmTJrbPDelpaZSTk+NZ+f3O
/+jpp2U9kRSrKJ3bXzZ2rOflTxZ+QdGJiNcf1g/tqlvnucq3r/PH/Ccb/9s1
ayiYnm6j07HxNbO0CXK2FXKyT7Kvi8y/+OKL6ZF/PEKffbaISktLUm7+Wb5t
tTQ2+5MjMh1Pj0Ju8MEHH3zwwQc/Zvytu4u0e3L1vpy3+5fv2dU2Nz+42FV+
ouUHH3xx2bhxI2W0y7B9NmjcuDFlZ2fHjG9u4q/5TyS/ND+fHmnVioYG05nY
RM2k9Zv3348537qJf+ZfXWpqBWrRPeR4/dHfZ2TRJb+b5Sqfb+K/+U9G/oYN
G6hlixbW8aojrgFty/uYOeuRrPo/WX6jhg2pZ8+eNGrUKFq7do0cOzoF5t+S
aHGSYHUkWFaa2tk2E2wOwAcffPDBBx/8uPDX/XBUu/fWcsoouWaMdv5inpl7
n1zuKfnBB19dcnfn0s87d9afLSxyJ4/MHOlZ+f3MnzdyJA1rli7piqRVjGcd
TKOtoh1ZHPh2/fll/tXdc3rPcLz+aPGsw2Udrso29nzSfMemPpj/ZORv2bKF
2rRpo+ho7H3GND1OwE6no+ttIscjsvj9d5F/VqtWso/apLfpwIEDST3/XFVE
tt0o7Pu2LxHMe+CDDz744IMPftz4q9b8xPmdsTGK5PKQXhZeHxq50lPygw8+
u1NYUEi9evVi7vHNcVPvGTyYqqurYsJPtPx+5ZcVFNDjZ7fnYxSF1wM/bIoL
P9HyJwv/ov7vO15/VN8zMedZm19PdZ2faPnBt+5z69at1KZtW5Pe3lZvo+W2
j9bmx9ze7vc/FvyLOl9EI54cQUsWL6GKioqkm397isDvW/TDdxkdiB+XVVvw
wQcffPDBBz/W/JyvDxjiEmUp/mdZ8j6TA01cH/3valf59i38Mf/gJx+/srKS
Bg261f7ePnz//9v+/am4pCQmfH3rz/lPFP/j556X8p0NZfzOio8ciRvf3I+/
5l9cul4/y/H6w/qhtegRcp2faPnBt+dv27aNMtq2N+QqC0Spj7G29zHqh6Ly
KYsx//QzzqC+ffvQqFEvSvG8k2X+I/Vt38J5bIKg13MthGjGCz744IMPPvjg
x4q/+It9im4oxNj4h/i4oYw/2lOvfO0qP9Hygw++1fniuZmZIx3fA3fpcgnt
378/JnxTX46l4LvBLy8upic6nCP7nKWl0/Bgc6qpro4b32nxC//y//eB4/Un
qMW0DkkximpqBFf5dotf5j/Z+T/++CO1a9eOLHOWKTnrA1a6n4D+u63rdwKM
3ob1QwsY2kawQ4oxv3Xr1nT7HXfQ7NmzqbCwMCHzb2olWJZGdb4Wltt4aoSu
wAcffPDBBx/8+PIXLN3D3Y/rNv76O9wgc6/+zJi1rvJN1T6bf/CTmz958mQp
BqmdX0KHDufSpq1bYsaPZvHy/Mebv/CFF2m4lOssjZ4677y48xMtf6L5Vw38
yPH6w/qfieXlJ2o8JT/4kU/auXMntW9/tp7j3qSDMf5O67nto7EbMtZpxzZ+
afHkBwIB+vWvf02ZmZn01erVVFNTm5DPX7Bow5WZBhFpEfg9wXkE4IMPPvjg
gw9+7PkffpZruv8W79HTTbFE5fv25yeY9UQnw7du7Z/5Bz/5+Z8tWkxNmjYx
+xoozwfp6emUszwnZvxEy+8nfnlJCT3ZsQMNCwbpv1deGXd+ouVPNP/a2xY4
Xn/UHGjqNauk9ISrfDv5y8pKqaiwkAoLCqiwsIgKiwqpKLyK9h179uyhXbt3
0e5du2jXLnG7W94Pl61bt1byHRLXNeJ2jbhdQ99++y0tXbKElrDr0qW0OLz9
9NOFNHvOHJo9O7zOmU2zxO3sWTRn9mzKnj6dJk6cRBMnTaRJ4XXiRGUN7499
Y4yUT0tbXxol+S6J+08//TQ9MWIEjXhihLwNr08q2wcffJDuu+8+uu/++2mI
uL1viHQ85L776Za/3EI3DxgYXm+mgQMG0ICbb5biL/8pfNyvX1/q21dZw/v9
lP1rr7mGunfvTt17hNfu3eT98NotvHa5pAud27EjdQyvnZStvHaiNhltKS38
W5qenibFIkpLD1J6MF3apoXLgmJdWhr93/+dZo7/w/iC2el1IuljtNjWms4n
wNn32P3+J5KfFp6PP//5z9Lnvyc3N2bff7s+9V37czT9lXVnjqSI7cAHH3zw
wQcf/JjxZ87/UbvvFm36g4xdkRovlLUzGjVpvat823Y+mX/wU4O/8buNlCH5
OzRgfAX0+/bGjRpR9gzn/Esnw7c68tP8x5O/MPxcLfqdjbvxxoTwxaX8eLmk
gygqLFC2hVRYVEQFRYV08OBB2r17F+3cKesldu3aTbvC+2LZD5s2yXqJNcq6
dp2Uh1ssW7lqpaKbWEpLli6RV0VHMX/+fJoze5bk2yKts+StWDZ16lSaJOki
JtHbim5C1FG8/rqsl3hR1Em8KOolXpT3w6to7zBC0kM8GV6fkPeflHUTw4c/
TPfdf5+83qev9983hNp2uoYap12urf+X1kPZXk6N0i6lhj+7WFobNwtvm15M
V/e6hvr07Uc9r+yp6CWMaw+66KLOsi6iU0fq1KmTpJMQ98VVzKOVLukm0imY
nqbtnybqIhzsPox///Z6AT5OcsDwnO+oNwAf/Dryxe+5+Lck/u0WFxfX+/fH
7vfXqtS5d6EeIxD4Y4uTwQcffPDBBx/82POnfbhN0REZ40Do23QldpGoJxoT
2ugq37qdeT9yj+CDH1t+bm4ude7c2freXbrvD1DmM5kx4zv36LxY8U8ouohC
xS5CXAuUY1EXsXO3Yh+xe7esi1BsJjb9sEmyiZBsJNYo9hLrZHuJlStW8jYS
4XXpEtlOYv78eZJNhPgMM0vUQSi6CNFmQtRFiPqHtxXbCGlf2Y4Z8wZvJ/Gi
qJt4UdJFPKHaRTw5QrOXGCHpIoYr+ochdL9kG6Hv33HHHXTzgAE08OYBkm2E
toaP/3D99dT/2mvortNOo4EZbSX7iH79+oW3/ahnz56S7qFHd91OoptyfNHF
F2l2EayNhLht20a3kwgqegjx+HRFF2F6vjQ9b/LPobbfP7tnykj74IMPvif4
jRo2oj59+tBrr70m/Wa7ff2xv94I5iuSYNqJuje9TrAsBR988MEHH3zwY8+f
/P42CnYNmXVETJwiKWaokntmQvZmT8kPPvh14Ys6lF69eusxJ7i4o/L+ued2
kPw0BgwYGF5lP41+/forPhp9FH+NPpLuQbynF20euim2D7oeojtddtll1LHj
uXSupG84V7OJEPUP7du1l/UOQVHvENTsIMT9008/jY+Hahij/i7aGK/VHEeD
r9f7cpLfxExB/iXhNj18LD/44IOfGvzmzVtIOm5R115UVBzT65/5BCeWNUmw
rRS0Y7N7K/jggw8++OCDH2/+hOxNTPwHNZeMOY6ouk56f4ur/ETLDz74deVX
VFTQX/7yF8O9vMU9vfpcoN3jB5R6Jz+FBpHrHFfw3eA3Cted52P5wQcf/OTl
i+8QnvrXv+irr76i2traOF7/7K66gv0V06bCWCxwW8GyDfjggw8++OCDHz++
6EeWrsQm0mJZM3ZEku6o2xRlfwpN/3Cbq3y7s/wy/+CnJl/MOTzymUzu2UB8
HmjatInlc4MpxqnF84TtM4fp3bR1X9axLMCvLz/gc/nB9xf/9NNP1+wS06RY
TUHJZrFZMJ3atWvP2DPK63nnyttLu1zG2UF2Y+JDifaSffrKMa6lbb8+Uszr
vv368z6fit2luIo6+CFSLO37JV9R2Wf0fsmPdOiwoZJf6XXXXee5+Xfin37a
GZI96pg3xtC+ffsScv3T47EJbEPDLvM/16VAfEA3Y51pQOYRgg8++OCDDz74
ceW/Htqo2A+FpFwyarzqtK5Mfhkpt4x8PH3uDk/JDz74J8OfPPkdanjqqdL9
fPNgc7rlllvMzwCBOjwTNND9EuziWkhtHd83gw9+cvJPO+00xkdS0Umkyf6S
Yr6rJs3a0imNW1KgUcvw9iwKiPvhbcPT21HD086hU04/h04Vt2eEt+H9zhd1
kfJrST6dfdT8W/00H0/RH2fAwIGcTuJmRRehxs8eMkTWQwxR8nw9NPQhKc6V
nA/sCSUG1hPh9Ul6+plnaNSLLym5xJR8Yi/KOcXGvjFWyT82Sdm+TRPfluN/
z5gxQ4vNZVw//XSRFFt88ZLFcjwvMb744iVSzHExBrkY92udGg9MilG+jtZv
WC/lVZPih6nxzHfK8cP27t2nxBsroMICOf65FgvdsKbi72/W5CkUOOWUlPz+
14XfulUruuOO26V8d8fKShM8/3YnOxUIFuM11HH1Rmg0gwcffPDBBx988GPF
Hz/tBy0WkR7LWrUjCnF+aOJ28pytrvJtF5/MP/ipz1+0eBGd1eosWrlyJT34
twcsnivU5wWrZw69zvyu2fn5IqD2GTD3DT6rl1DyWImxnNL0vFZirist5nQn
Nk93J7qoc2ctXlQ3JW61aifRs+eVsm1En76KbYSyhstuuP4PcoxsJS72ACaX
uBg/+74hcl4vNs+XuA5/eLiWp1zKEfbEE0qusBH0TGampI94cZSumxD3x7w+
Ro75PUmP/T1p4ttSLPBpU6dqOctmS3nM5BzrYtmC+fNMscbF3GeiXkL8Dks5
0tasUXKlKbqJtWukXGpyfrWdun5it7wePHRQy89WoOokCmRdhCDURv33d/sj
Sx2vP+o7DDUH55Zdhaa/U7/9/viJHwqF6JRTAinz+1MX/imBgPT7kpk5Uvr7
433EEj3/fIVgKrE6x5ormJoKpj37EYIPPvjggw8++PHiT3pvqxJ7KMuU60y2
IwpxPmkTZ2x2lW9s67f5B98b/LLSUmn3sccfp7Zt2yh6Bzn2dKfwfgfFX+MX
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
5SHtGpLG5NFUdUWqfkjNh7Z05QHX+MbjVPn+gQ9+svDNJzD7Fv3wXUYH4sdl
1RZ88MEHH3zwwU8kf/HK/VrOYmMcCTaWhOpD0LLHu1RS5pxLO5XkBx98L/KX
K3GJzjuvk2ZLpC533XmHZZyiCeMnuMbXd1Jj/ouKC+nMM8+U5uGslq2oqroq
rvxYyX/sWJlkSyTaFDVLSwsfH4s5f97SPYweKIuPXa1ca9Tribjf6op3qbyi
2lN/f+CDn5p8577tWziPTRD0eq6FEM14wQcffPDBBx/8RPBPVNRQm19N1X3P
mJgS4nteye+sG3u/H6IF4ecAt/hWklqXenP+wQc/Fnw5LlGApk2fZuLv2LmD
GjZspPmeqXqidu2t4hT9//buA06KIt8DuGv2zjuXBcEAeOZ7gj52AcknIMLp
AXpGTKd3KnhJL4jpic94hjM/9RCdnV3SkrNKBhEERFhAosBKWHJYYNk8U/83
3TNdXdVpesLupN98PrMzXV1d36qeAF1T9a/UbH+k/rvvvsvPw+OPP97gvoMQ
s//wQw+H5hdm0SeffFLv/mMvLwn9e6KvgxDsG/IKc5y9vN/o9j/NjquvZU+W
8w8ffir4plzMMtXV8Twst/HQMEXBhw8fPnz48JPLV/6fniOMGxLnn2nzAnhM
icDzx15ZnFbthw8/nXxtjbPLL9PjEhn9B373O2kskRbX+qOPPyKrWyq1Pxr/
6tatg+ci6yRasWJFg/vhbrH4U6dO5a9zp06d6t2/+sax+r8juea7Psc5+NvD
0NHr4+o7HS9vJM/7Dz78ZPOZRR4pzVSJcDcmP2PONYAPHz58+PDhJ97/eOQ6
IYa1OXa1GFNCGVfUqs8YA5Da7YcPP518bY2zwsJC29xbtmyhU087LTieKEsf
V9RCGVNUVRWTn+j2R+p/v+573v5mTZsS8/sb1Delxbn9ylyzM848I9gfeHIW
bSspqTd//dYy/m+INN/M8PuD8m9No1As6607j6bV5w8+/NT0bVKYdS5xi/df
WRfmKIXNBx8+fPjw4cNPmL9le5nhd149RhEfUyTNH8inDVuPxM1PdPvhw08X
f8HCBerYoMsuvZzqfHW2+ZTb/ffdL40l0u762mep1/5o/P99fghv+1133ZXS
r7/drVevXvy1fvPNN+vN/6BwbejfDXEMqhzjLkcYV9Sm77i4+uFvyff+gw8/
mXzLergoM7IaMHnb4mD48OHDhw8ffnL4uf0mSOvR5IR+8xXnn4nzCJTrgXj6
7lrkfIMPP9P97t2vU/sClLFE4XxlTNEpp54qxynKCo4pqlHjFKVe+6Px27Vr
x9v/ybBPTDnTof2vvfYa7wvr0bNnvfn9B87U5zAbfnsQ5zZr20+8sTSufrKe
f/jwU8W395i5Rsz0xHVp+j5mmQofPnz48OHDTw7/n68tDfYLSWOHgnGs+e/D
vB/JSzfcPy2ufqLbDx9+qvsLFixU+wEuvfQS8qljicL79913nymetdJXxNc+
a4D219XV0tJly2n06FE0etRo+vrrr6myoirMUYy2bttKEydOUo9TjqmqqjYc
E94/dOiQOhdLa/+mTZsMmeu3/cqcsLVr19DnX3xJhYUFNH78eFq2bBlVV9XE
1Z81azZ/nc844wyqUNc90/PH4/13sKyazm1fwOeUibGrc3K9pj4iZXvmVzvj
5pv3ZdbnHz78uPmu6mBXtjmmtrQR2jZPr4MPHz58+PDhJ6Ov/H+djyMS+ork
R08ohpFXvQ7YUVoeN9/ulinnHz78WH01LlFWFnm9xrhE9v4PP/xAp/IxRfq9
RWjts/psf0XlCXrnnXdUSzFPPeUUysoK9tecffbZ9I9//IOOHT9u8r//fh31
7NlTzXfyySfTKcpxgec//9nP6Q8PPUR79uxz3f5JkybxNp911lnk8/kcjoxf
+6dNm0a33vZb1dT80087nT8/88wz6f7771fHfMXDP3DggPT6zp8/31wvi1sk
7c8ftyn024I31C8UGo/Kf3/wCGtp5tN5HQsC7wGruZHR+Yn+/MGHnx6+ncrs
a2yzw5jMpEdmmQc+fPjw4cOHn1x+eZWfmnUoFOJVi+ud6fEm+L7A//nFuWep
3n748FPZn78gGJfokksvJZ+vNiL/3nvvlWJZB5+fRB8pcYrqqf2bNm2mq1pd
RT/96dn0xBP/pNVr1qjXN5WVlTTs02H0s7PPVutwdavWtG+f3u8zZ/bswDE/
pa7duqrrulVUVKjpW7ZupX/+4+/qMRf/4iI6cPCAq/Y//fQzvM25uXnhGxpj
+3fs2EF9+vRRzSbnNqEXX3yJVq78jsorguN7ampq6LvA9quvvkoXXHABnXXm
WWpfVjz85s0v5P1Eb7zxRtzf//0Hfhkac6rHqM7JlddA4PHvAvdb/vhlXH39
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
4OFKCya1Pn/w4aetHy7dMatVO5gpSSzCubnw4cOHDx8+/GTyKyr91KJLYXDO
Wej//mKcCT1dj2f96JBFcfOt0zPn/MOHH87X1jj7LLRGVzz9DRs20CknnyzN
P1MsJU5RdXV1g7T/ul/9SvJHjRxhkS82/6WXXpL6TSrKTzhUNfrXX51zJ4zP
Eh+zTs5S43UrfUkfffgRlZT8GHdfu23fvl3yTf1+Eb7/fT4f/bL3GPN6mMJv
CHw8aqjf6Ld/nGmPpdDnDz78tPMDacyKsTjKynH23NQOPnz48OHDh58K/gNP
zJPikWbneYX+IX2eQXAugYfO71RIZccs5qVE6dulWd/S7/zDh2/na2OJWl7U
kmprauvFHzBggGHdsyyHMUXx9auqqujMM8+U/J07d1kcFZs/ZMiQYF+N2rYs
qqquqpfXv7z8OLVo0VKfR5elx+YWfXW8UeDet29fWr9+fdzff3t275b8d999
13RUJO2fMX8H//7XYxN5eN9QTq6H/zuh/cYwYtKWlP/8wYefrr60xWzKZobt
KG9iMfDhw4cPHz781PGnzd0uzS8TfytWYpNq6x+Lvxl/VrQxbn4sN/jw09nv
3r2Hep3/6aef1pu/ccMGOvlkuT/jJD6myGGeWxz8efPmBvtPsvTYRJHc3Pqv
vvoq75tR7uXHjhtLiOpm5a9auZLOO6+Zoe/tJMkXYyX97Oyf0cyZX8bNV24l
JdskWxnnJB0R4fv/7sdnS9//Wvwh+bcEfa5ysw5eOnK02tX7L5Zbun/+4cOv
Fz9ceTblmvugTAncNEvh2wofPnz48OHDTy7f5/PTlTeE5hTwOWfi3DM9lrX2
u3GXO6fEzVc3M/j8w4dv5fO4RC0vopra2nr177xTHlOk9duoY4rqsf1Dnh8i
jWFSYhPVx/l/5513pfYdOnCwXl//vXv30qOPPkpnn/1THtNaOr/aWJ/QeT7j
jDNp+fLlcfM3btwojWEqLBxuOsRt+3fvr6DG7b3S978cy8683sEjzy50rmEK
fP7gw09bn6cb9oSJte24rppcUYdkJuyCDx8+fPjw4Se7//x7K/hvweb+oeCc
My0uhTb2qHjdwbj5iW4/fPjJ5mtrnH366bB699etX0cnS3GKxDFFVfXmd+vW
VeqbGjFihEWu2M//J0OHhvpmglbpLnluW329/uUnymnG5zNo8ODB1KVzZ9Mc
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
pU6dOtH5F1xAS75ZQqeecirPW7KtxPb8KzF/OnfprMbT3rlrV1Tnv7q6is48
6yzuTZs2Vc4X4eu/Y8dOOu3006l/v5uFQ929/so69edfcL56/vv+pi/VBs5L
vN5/U6ZMEcZp5ZDP57OpkvX7f/ikTaZ+oHDf/39+YXFE7Xfy7Y5K588/fPgN
6TPbBPubXAv7su1TLL4l4cOHDx8+fPgp539QsJZfK0hr3ISuF7JD1w88jmng
8bm3l6ZN++HDb0i/e/frQrGQbfptspz6gKz6jsz5tVg6tuOHXPrBMUXVhhYQ
FRR4uX/22WfTW2+/Rcyvn4C62lq699776PTTTqclS5aoaX/561+58dfH/mp5
fjZu2kx5bfOoyblN6Pvvv4/p/Pe6oTdv/+DBg4Us0b3+H/7fh2pZyrpnhw4d
Cuv7A+fDm++lxo0bq8cNGDBA7TuL5/tPiZukvWZ33H6Hbbny0YxvdLhtEu8j
cvv9//3mw3JNUuzzBx9+pvrmA4TnFuXIRbqD5HpZ5YUPHz58+PDhp4p//EQ1
XdRtJP8NWfsduZEQk6JR6JpBS2vRpZDKjlfFxU90++HDbyj/m2++Efpuslz2
B1mP9zH2D7maU5Z1UsS+Nk5IbH9tbU0w7pDSP3HHHTRv3jzau2c37dmzhyZN
mki5uW3UNb0mTZ7ID6ytqaN77r0n6Gdl0VNPPU0/bPmBDhzYT18tWkSPPjpI
PaZt23a0/cftMZ//999/n7dBXQcsDq9/YUGBGg/onHPOUeefjS4aTWvXrqUj
R47QwUA7lLhDs2bNDLTtSbr8iitU+/zzzqf8/Px6ef+1CZxnrY2jRo6Q2s+f
27z/Zy3cxdcuE9e7d/r+v+PPs1L68wcffmb6zmXb53CuG2P6fikHc1Nf+PDh
w4cPH34q+M+9s1xa90zrE1KvIXicCq8+ByGw/V7+mrj5pr0Zdv7hZ4a/dOlS
GjhwUOD+iNrPoD8OokGBR+U+cNBAeuSRYPqgwP5HBg3keR55JLBPOX5Q4B54
PmjQI6HyQsdpz/mjkjaQP9f3ufcnTp5k2f7amlp6/fV/UYsWLYU+qyw65ZRT
qF+//rRp0ybLMzxy5Ci6+urWhv6rLGp11VXkzc+nmtqauJx/pc9KqYtSvhJ3
WhkDZH5VIn/9Dx46TK/+61W65upr6JSTs0iOERV8/vOfn0P9+/en4cOHU4Xl
2m6xv/8OB+qh+WeddRYdLz9uXZZNat9HvlS/34PjhLyuvv/nLylN6c8ffPiZ
5ptyMctUV8fzsNzGQ8MUBR8+fPjw4cNPXb90XyU1udbLY5lqvyXn5Opp+hyE
4L7Leoym8ooac2Ep2H748OFH5yvXNKW7Smnx14tpyeLFdOjQQeeDQredO3fR
gkVf0fz586mkZHvUvnlDT72+Z0/ehzNs2DDb46Nt//HyciouLlbHU82ZPYeW
LV0aaNcO54Pi5Hs8Ht7PpsyFi+T1X/rdPnmdS/W5x/H7v/Mdk031S4b3H3z4
8N37zCKPlGaqRLgbk58x5xrAhw8fPnz48FPPf+R/Furr2wixKbR7jjA3QbuO
eNuzOm6+XYv4szQ///Dhw4+vXzRmLJ+Tp/QZNbRfn+3v0aMH7yda9PWiiPzf
PDyDjx/Sxw3lO37/j5m2JanaDx8+fDe+TQqzziVu8f4r68IcpbD54MOHDx8+
fPgp46/eeCh0faD/lqzHL9X6hsTfoPPpF78aRWXHquPih22X4w0+fPjwZb+u
ro5aNG8R7Cs69RTat29fg/p2JcXql+4u5XPqWrduHZE/f8lufYwo7yvySN/r
xu//Vn3GUG2t3109k+j1hw8fvn2JzqWzKGrA5G2Lg+HDhw8fPnz4qen3H/il
MOdAj1ttXCeZjykK3F//ZFXcfDe50/n8w4cPP77+m2++yeN1v/zSyw3uhy8x
cv/Vl1/h8+lGjx4dkd/r/mm8P0gcG5ot/R4gf/+/X7BGLjuFXn/48OE7ecxc
I2Z64ro0fR+zTIUPHz58+PDhp6Y/++tderwKfp3gDfUJafFMPcFY1qHfnJt3
HUGHjlZblJZ67YcPH356+VVVlXRRy4vUPpWm5zajqsqqBvXj3f6KihPUtGmz
0Fiiq8nntxvnY/ZnLtgVWo9A/27P5nPPvHz+mfj937LrSCo7XkPJ0n748OFH
6buqg13Z5pja0kZo2zy9Dj58+PDhw4efLn6v+8Tfmz2h6wiveu2QE7p+yA71
GwXXP/PQi/+3Im3aDx8+/PTylXXHtFg+H374YUq3/5133ubjo6ZMmeLaV47v
dvc0ab5ZtrCmWU5oTrG+5llw32sfr5J8u1Yk8+sPHz58O5XZ19hmhzGZSY/M
Mg98+PDhw4cPP/X9uUt2S/PKGuVpfUWh36DzvOp+MQZq886FtP9wVVx8q+1M
Ov/w4cOPr+/3+6nbr7qpfSu/+MUvqLqyqkH9sJBLv6q6is6/4EK1Hb/5zW8i
8qfO2c7nDutziL08fnVOrj5mVPtub/mrUXT0WHXStB8+fPiR+3o8JCZmNDwV
/kpFMrEAs23bSCEXfPjw4cOHDz9tfGU9HPl35dB1hVVci9A8hufeXh43P9Ht
hw8ffnr527aV0E9/crY6Fuf5559vcD8e7X/uuefUPqKfnPUTKikpce0zP1GX
O6fyMUON8rSYc6HfANpo3/He0LziYDy6tz5bTU63VHr94cPPTN/uYKcEZlFf
wz5pvxF1U3n48OHDhw8ffir6Xy3bzddGFucp6PPQPHzemfb78/kdC2nXvoq0
aD98+PDTz3///ffUfpbTTzud1m1Y3+B+LO1fXbw6UO9T1foPGzYsIl9Z017r
GxLXOtP6jLRxoeJvApf2HE3lJ2oM5ab26w8ffub58g5mSrE6xtplpqzM9My+
hvDhw4cPHz78dPH7DZypr5cszVfw8linvO8odM3xyDML4uYbn2Xa+YcPH358
fcb8dPvtt1PWSSdR1y5dye/3Nagfbfvr6uqobbt2ah/RXXcNiMivqvJR65vG
6X1BeeIaZ8KalnyNguDj+8PXJk374cOHH71vWx9mdmwh07FW24bawocPHz58
+PDT0l9WvD/UD+TlsYm0WEXZ0rwzfbtx4P7Nyr1p0X748OGnn3/s2DFq3bq1
2ufywgsvpET7n3rqSbW+eXm5VF5eHpH/ykcrTWOIpO9v9ftdXOssn67oNYYq
q3xJ03748OFH5zummUsOU0X7XMxyt5AAHz58+PDhw08r/7Y/z5KuMRrxawxx
zplHmJeWT93vmUZ+P0uL9sOHDz/9/NJdpdS8eXPKOjmLJk+e3OC+uRT7XJ9+
9pnaR9SiZUvas3t3RH7p/hN0fqdCIU51vjRXOJuPF/VI3+n/GbVeKifdXn/4
8DPFd7XTNrN5h2O5QiaHKN7w4cOHDx8+/DTwizccpMZtzdcWjUJrnmWLv1Gr
8ayDz0dP+yEuvlWmTDr/8OHDrx9/y9YtdPHFF9NZZ51FXy9alJTtX7hwIZ1+
+ulqPbdu2xqx/+Dg+Yb+IU8wlrWhb19cB+2XvcdQVY3Ptvx0ef3hw884nxmS
bPqYrI5nVgUy8ZERrx2z5uHDhw8fPnz46eXf/fhs/ltzjjh/IbReTk4oTpF4
3XHF9aPouBgDNQY/0e2HDx9+evq7S/dQq9at6ZxzzqHi4uIG9/Wn5vYvX75c
rdd///c1tHffnoj9ZcUH1HnA8ne23t8vzxvW1yvwjN+UFO2HDx9+nHyL6jC7
rTBVj+jGDI/w4cOHDx8+/LTyfygpo6btC/kcBXkOg5dff0jXHoH7yx+ujItv
ecug8w8fPvz688vKymjQwIE0ZMiQhPh2tyeeeIIGBup17OjRiH1l3m/Pe6eF
xn7qfUTy+E/zmmfX/nYi1dX5w1cujV5/+PAzwg+X7pjVqh3MlCQW4dxc+PDh
w4cPH366+IPfWCrFKeJ9QkLMohxx/ZzAvVmHQtq282hatB8+fPjwU8UfPmmT
NP4zJ9Sf3yg0dihbWJ9Aj2ntodmLS+Pih0vS09Pz/MOHnzR+II1ZMRZHWTnO
npvawYcPHz58+PDT2T9ytIou6T5Kj1udq19v6PMXvFKcC+U65IEn5sXFT3T7
4cOHDz8VfGW+7xXXjw7FIdL787OFeWbid7b2PX7Hn2bGxbcqIZPOP3z4yeZL
W8ymbGbYjvImFgMfPnz48OHDzwx/6OgNeuzqXH2uQnaeh6fxPiQtPfA4c8HO
uPiJbj98+PDhJ7v/xOtLpe9fPp4oFIOoUZ4+zkjrLzq3XQFt3FYWF9863bgv
8ht8+PCj8MOVZ1OuuQ/KlMBNsxS+rfDhw4cPHz789PHrfH7qdMckKSZqtjB+
KNhv5BXmoAXv19w4lo5X1sbs27QufI40Of/w4cOH73Rb+f0hatzWK33/5mjj
hrS4crnaupTaeFAPPfvWt3HxLXNk0PmHDz/pfJ5u2BMm1rbjumpyRR2SmbAL
Pnz48OHDh5/O/sKle0J9Qh4SYxLp8xk80u/W2rijZ/+9LC5+otsPHz58+Mno
19T5qdPtky2/f3NCa1Nqa5s1EuaeKfOJlXnFsfp6Qmaef/jwk9K34MQkxphT
Vvt94ZlgGnz48OHDhw8/Y/wBj80xrbEs9hfp1yj6WsuN2xbQ8tX74+LztAw9
//Dhw4dv3PH60FW237/aupTaOCNx7QHP+M1x8Y1JmXb+4cNPVt++NOawzwYP
JfK/loxdi+HDhw8fPnz46eyX7DpG53UoNMRH9fA4GDnCnIZs/lt2PnX87SSq
qfHF7FvfMuf8w4cPH75427K9LPCdXOD4/cv35erx5DrcNkmdTxyrn+j2w4cP
335b7jNi8n4m2+aah2kLP9CubvDhw4cPHz78TPL/5+1l0hwzHsM6zxPqP/Ly
+WliPKM3hq2Ki893Z+j5hw8fPnzFZ35GN/7+c1ffv1psa22O8IJvdsXsGzIb
mpT+5x8+/GT3jXUxVcjFTTokzPGm3fDhw4cPHz78jPHLT9TQVb3H8jio+hrL
8jo6wd+z9biqym/em7cdjdmXEjLw/MOHDx++suEZu9H1929wbFFwDtpDTy+M
i5/o9sOHD9/eNxfHDM+ZlGzMz5x2CpmYqdzgI3z48OHDhw8/8/yZX+0MXZMY
frvO9fC7uO6O9hv3Db+bTn4/S/n2w4cPH34i/X0HKuji60ZH9P2rxa4+cKgq
Zt+qRfrz9D//8OEnvS9KNo4d7/bGjBumBPjw4cOHDx9+pvkPPjnf5jdsfS3m
RtpcCGH+w39GrIuLz/9m6PmHDx9+ZvrKnJPb/jwzqu/f0VMMsauj8BPdfvjw
4UfgO1VGm7/GIq8zE545HgsfPnz48OHDzyj/wKFKuvi6Ufp1iHa9kpdvipkq
zoNo2rGQ1m06ErNvyGixL73PP3z48DPTHzpyg2n9Mjffvzc/MtMp5Ilr3yKj
xb70Pf/w4aeCb7tbrZv9wWFNx8NdtBs+fPjw4cOHn/b+iMmb+XWJPO8heM3C
10UT1mtWHjvdOomqquti9s1ZMuv8w4cPP7P8jVuP0Hkd5TUn3Xz/XtipkLbt
Ohazn+j2w4cP363PLJ9aJzE5MUw9bLMxmw348OHDhw8ffkb5yn9Lbhk0i1+v
KPMdjPMcsvM8wprN+u/cT765NGbfrj2Zcv7hw4efOX51rZ+63TmFrx/QiM8z
C//9+0HB2ph9y40MOv/w4aeSz2wT7G9yLezLtk9h5mfw4cOHDx8+/Iz0t5eW
U/POhfz6JPi7tlePmyHMi8gJjSdS191pm6/Gw47VD9MswzHpd/7hw4efGf5T
byxVv0OzhXXMtL4ip+/frndNodo6f8y+6VmGnX/48FPVNx8gPLcoRy7SHSTX
yyovfPjw4cOHDz/T/Pe8q0PzHzzCb90eYT6EMA9CiJdxec/RtO9QZcx+otsP
Hz58+PXpz1+yO9Qn5JFjV4e+a+2+f5u1K6Di9Ydi9vUnmXn+4cNPTd+5bPsc
znVjTN8v5WBu6gsfPnz48OHDzxS/zu+n7ndPk+OmCvMhcnhMVW9w3plwvTPg
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
zRXV55F59LGAluueeXme5l2H0/S521Oi/fDhw4cf6VpnjDGnrPb7wjPBNPjw
4cOHDx8+/DTyZ361ky6/voiPPcgxrpstXYPK/UX6Nap4jJd+8/AM2rr9mCvf
cT+l//mHDz8Sf+aCndSqzxjHz58+nkjvG5LWNjPEqFfWQyzZdTwl2g8fPnz4
dr59acxhnw0eSuR/LRm7FsOHDx8+fPjw4ae+f+BQFd35l1mh+WZe3hckjUPI
E8chCLGM8jzCdae+T4mX/danxVRd7U/69sOHn+z+7gOV9Pun5rv+/Enj/6Q5
Zno86ybtvPSv/6ykujqLz2iStR8+fPjwnX0y9BkxeT+TbXPNw7SFH2hXN/jw
4cOHDx8+/PTzWeBSsXDCJjq/UyEfO9QoT5uXos8x09fT1uLgevn8NHkcUnDu
S+sbx9IYLc51ErcfPvxk9Kuq69Q41Rd2KYzq86fNEdXHFwWPu+amsbTku31J
33748OHDd+sb62KqkIubdEiY40274cOHDx8+fPjw09TfXHKEug2YKqybrcfD
bcTHLngN81608Qxe6Vo2h8+B8VL/h7+ktZsPJ3374cNPFv+LBTspt++4uHz+
tOfK/cEn51HZ0Zqkbz98+PDhu/XNxTHDcyYlG/Mzp51CJmYqN/gIHz58+PDh
w4ef7n51jU+Nk5vTzsvXQtLGF0ljF3I9/K5dn2rXsfr1aj7vc2rc1kt/HLIo
uOZ2ErcfPvxE+ms2HlZjfGlzyeL1+WvZdQQVTtic9O2HDx8+/Ih9UbJx7Hi3
N2bcMCXAhw8fPnz48OGnv79gWWkwZq42h8VyDIO+Frc2p8W45ra8HlM+Xdhl
uLrWWk2NL6nbDx9+Q/pHjlbRM28uo6ZtvcIYovy4fP563T+NSnaaY8tb1j9D
zz98+PDTwHeqjDZ/jUVeZyY8czwWPnz48OHDhw8/A/zDR6rVMUDG9ZPE+Nam
mLnCPBj9WlZfi0m7t//tBJo2bzv5mb2f6PbDh1/ffnllHb3rWUstuw43rTOY
I9yj+fyd17mQPiz4nnw++1oluv3w4cOHH6tvu1utm5vvP5udjoe7aDd8+PDh
w4cPH34a+4tX7KV2t0zg16XyvJfgNStfF01Yr7uR1E+UL82H0dZm6nrHZJoy
+0dDXZKr/fDhx9uvrfGr88D+64Yi/fPDP0sead6ZuOag28/fTQ99Tlu2lyVt
++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
V/uV7v37XLpl0Cy6edBMuv6+6dT93mn0q7smU5u+4ym37zi6sleROr9LuSux
f7TnrfqMVfO07T+eetwzjXoG7r9+cAbd8miwrN/9cx795cVF9Px739EHBWto
5JTNNGPBDlpWvI9+KCmjQ0cqye+zaEsc25/o8w8fPnz48JPRdy7bPodz3RjT
90s5mJv6wocPHz58+PDhw4cPHz58+PDhw29I35SLWaa6Op6H5TYeGqYo+PDh
w4cPHz58+PDhw4cPHz58+MnnM4s8UpqpEuFuTH7GnGsAHz58+PDhw4cPHz58
+PDhw4cPP1G+TQqzziVu8f4r68IcpbD54MOHDx8+fPjw4cOHDx8+fPjw4SfE
t6yHizIjqwGTty0Ohg8fPnz48OHDhw8fPnz48OHDh59Y395j5hox0xPXpen7
mGUqfPjw4cOHDx8+fPjw4cOHDx8+/CTwXdXBrmxzTG1pI7Rtnl4HHz58+PDh
w4cPHz58+PDhw4cPP7l8O5XZ19hmhzGZSY/MMg98+PDhw4cPHz58+PDhw4cP
Hz78xPt6PCQmZjQ8Ff5KRTKxALNt20ghF3z48OHDhw8fPnz48OHDhw8fPvwk
8O0OdkpgFvU17JP2G1E3lYcPHz58+PDhw4cPHz58+PDhw4ffsL68g5lSrI6x
dpkpKzM9s68hfPjw4cOHDx8+fPjw4cOHDx8+/ET7tvVhZscWMh1rtW2oLXz4
8OHDhw8fPnz48OHDhw8fPvyk8R3TzCWHqaJ9Lma5W0iADx8+fPjw4cOHDx8+
fPjw4cOHn1Df1U7bzOYdjuUKmRyieMOHDx8+fPjw4cOHDx8+fPjw4cNPtM8M
STZ9TFbHM6sCmfjIiNeOWfPw4cOHDx8+fPjw4cOHDx8+fPjwE+xbVIfZbYWp
ekQ3ZniEDx8+fPjw4cOHDx8+fPjw4cOHn3g/XLpjVqt2MFOSWIRzc+HDhw8f
Pnz48OHDhw8fPnz48OE3uB9IY1aMxVFWjrPnpnbw4cOHDx8+fPjw4cOHDx8+
fPjwk8WXtphN2cywHeVNLAY+fPjw4cOHDx8+fPjw4cOHDx9+EvnhyrMp19wH
ZUrgplkK31b48OHDhw8fPnz48OHDhw8fPnz4DezzdMOeMLG2HddVkyvqkMyE
XfDhw4cPHz58+PDhw4cPHz58+PAT6ltwYhJjzCmr/b7wTDANPnz48OHDhw8f
Pnz48OHDhw8fftL49qUxh302eCiR/7Vk7FoMHz58+PDhw4cPHz58+PDhw4cP
P3E+GfqMmLyfyba55mHawg+0qxt8+PDhw4cPHz58+PDhw4cPHz78ZPGNdTFV
yMVNOiTM8abd8OHDhw8fPnz48OHDhw8fPnz48BPum4tjhudMSjbmZ047hUzM
VG7wET58+PDhw4cPHz58+PDhw4cPH36S+KJk49jxbm/MuGFKgA8fPnz48OHD
hw8fPnz48OHDh580vlNltPlrLPI6M+GZ47Hw4cOHDx8+fPjw4cOHDx8+fPjw
E+rb7lbrZn9wWNPxcBfthg8fPnz48OHDhw8fPnz48OHDh9/APrN8ap3E5MQw
9bDNxmw24MOHDx8+fPjw4cOHDx8+fPjw4SfMZ7YJ9je5FvZl26cw8zP48OHD
hw8fPnz48OHDhw8fPnz4SeObDxCeW5QjF+kOkutllRc+fPjw4cOHDx8+fPjw
4cOHDx9+4nznsu1zONeNMX2/lIO5qS98+PDhw4cPHz58+PDhw4cPHz78hvT/
H7CVRCw=
    "], {{0, 375.}, {581., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{225.20312499999898`, Automatic},
  ImageSizeRaw->{581., 375.},
  PlotRange->{{0, 581.}, {0, 375.}}]], "Input",ExpressionUUID->"c6bb6bf3-9fe4-\
4790-a7db-8b59be20e651"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"differentialEqs", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "s", "]"}], "==", 
       RowBox[{
        RowBox[{"\[Lambda]", "[", "s", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x", "[", "s", "]"}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Alpha]", "]"}], "s"}]}], ")"}]}]}], ",", 
      " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "s", "]"}], "==", 
       RowBox[{
        RowBox[{"\[Lambda]", "[", "s", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"y", "[", "s", "]"}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Alpha]", "]"}], "s"}]}], ")"}]}]}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"algebraicEqs", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x", "[", "s", "]"}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Alpha]", "]"}], "s"}]}], ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"y", "[", "s", "]"}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Alpha]", "]"}], "s"}]}], ")"}], "2"]}], "==",
       "1"}], "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"initialConds", "[", "\[Beta]_", "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "==", 
      RowBox[{"Cos", "[", "\[Beta]", "]"}]}], ",", 
     RowBox[{
      RowBox[{"y", "[", "0", "]"}], "==", 
      RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.85420000259552*^9, 3.854200066040099*^9}, {
   3.8542001013234386`*^9, 3.854200101880423*^9}, {3.8542002211895*^9, 
   3.854200222972369*^9}, {3.854200736764029*^9, 3.8542007386613903`*^9}, {
   3.854200770828095*^9, 3.8542007800389843`*^9}, {3.854201423486245*^9, 
   3.854201423836211*^9}, {3.855652337419347*^9, 3.855652338211206*^9}, {
   3.855652383036372*^9, 3.855652383948059*^9}, {3.855653050478548*^9, 
   3.855653143345294*^9}, {3.8556534921160383`*^9, 3.855653515533051*^9}, {
   3.855653595695292*^9, 3.855653622220374*^9}, {3.855654661153575*^9, 
   3.855654661694601*^9}, 3.855654812380068*^9, {3.8556583550295486`*^9, 
   3.8556583816998873`*^9}},
 CellLabel->
  "In[306]:=",ExpressionUUID->"68d7520c-6f74-4b99-8400-e89f1d708e2a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
We\[CloseCurlyQuote]ll use ParametricNSolveValue again to cache our numerical \
solution\
\>", "Item",
 CellChangeTimes->{{3.8542014296838207`*^9, 3.85420143580902*^9}, {
  3.855653971517047*^9, 3.855653974349547*^9}, {3.8556542364735203`*^9, 
  3.855654246769853*^9}},ExpressionUUID->"250657d4-c412-4c61-8501-\
84ee80710be6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parametricNumericalSolution", "=", 
  RowBox[{"ParametricNDSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"differentialEqs", ",", "algebraicEqs", ",", 
      RowBox[{"initialConds", "[", "\[Beta]", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "\[Lambda]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", "0", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], ",", 
    RowBox[{"Method", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<IndexReduction\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{"\"\<IndexGoal\>\"", "->", "0"}]}], "}"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8556531546275797`*^9, 3.8556531921643677`*^9}, {
  3.855653545870327*^9, 3.855653572884128*^9}, {3.855653639033325*^9, 
  3.855653639462987*^9}, {3.8556536932506027`*^9, 3.855653734509334*^9}, {
  3.855658388252164*^9, 3.855658389843815*^9}},
 CellLabel->
  "In[309]:=",ExpressionUUID->"43995bd3-f5aa-45e0-9c27-21832c6e797a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["ParametricFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{}, {}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090884856*^-8}, {
                   0.0874367476365131, 0.08197166587636243}, {
                   0.18222810297558026`, 0.1358255024317191}, {
                   0.27073779576926765`, 0.13315455086535802`}, {
                   0.3575112797365835, 0.08143316377978886}, {
                   0.4516394623155443, -0.007347854733426912}, {
                   0.5394859823491253, -0.08816932746972758}, {
                   0.6346872009943513, -0.13787329990112937`}, {
                   0.7281522108132057, -0.12816574147938434`}, {
                   0.8153355580866803, -0.07001063326902106}, {
                   0.9098736039718, 0.02121659675083076}, {0.9999999090909091,
                    0.10024804094746914`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090880112*^-8}, {
                   0.0874367476365131, 0.08090369567458766}, {
                   0.18222810297558026`, 0.12746559200130417`}, {
                   0.27073779576926765`, 0.1116266937044405}, {
                   0.3575112797365835, 0.046963725126600256`}, {
                   0.4516394623155443, -0.04509050859182233}, {
                   0.5394859823491253, -0.11115559892361665`}, {
                   0.6346872009943513, -0.12642564594664163`}, {
                   0.7281522108132057, -0.07740196037964171}, {
                   0.8153355580866803, 0.004179083230780074}, {
                   0.9098736039718, 0.08937493944143977}, {0.9999999090909091,
                    0.12834702174618903`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090875369*^-8}, {
                   0.0874367476365131, 0.07984396759533968}, {
                   0.18222810297558026`, 0.11939549826670079`}, {
                   0.27073779576926765`, 0.09184904274707059}, {
                   0.3575112797365835, 0.017913117173780694`}, {
                   0.4516394623155443, -0.07109962300031061}, {
                   0.5394859823491253, -0.11717052830989395`}, {
                   0.6346872009943513, -0.09879571259704382}, {
                   0.7281522108132057, -0.022693471356141894`}, {
                   0.8153355580866803, 0.06128703302641453}, {0.9098736039718,
                    0.11605625481609519`}, {0.9999999090909091, 
                   0.10415981267620744`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090870287*^-8}, {
                   0.0874367476365131, 0.07879243663407876}, {
                   0.18222810297558026`, 0.1116081822210312}, {
                   0.27073779576926765`, 0.07372482040530459}, {
                   0.3575112797365835, -0.006267252216927747}, {
                   0.4516394623155443, -0.08743897872291118}, {
                   0.5394859823491253, -0.11109134853087661`}, {
                   0.6346872009943513, -0.06371549528296311}, {
                   0.7281522108132057, 0.02544576624054603}, {
                   0.8153355580866803, 0.09464282937855747}, {0.9098736039718,
                    0.10731931496853601`}, {0.9999999090909091, 
                   0.0516787429232188}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090865543*^-8}, {
                   0.0874367476365131, 0.07774905743802465}, {
                   0.18222810297558026`, 0.10409673959866513`}, {
                   0.27073779576926765`, 0.05716133039337165}, {
                   0.3575112797365835, -0.026084496726167965`}, {
                   0.4516394623155443, -0.09591154799603378}, {
                   0.5394859823491253, -0.09685594593277226}, {
                   0.6346872009943513, -0.02730376120671303}, {
                   0.7281522108132057, 0.061646715198529656`}, {
                   0.8153355580866803, 0.1046634148537508}, {0.9098736039718, 
                   0.07509702498429204}, {
                   0.9999999090909091, -0.006536873471333553}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.0909090908608*^-8}, {
                   0.0874367476365131, 0.07671378556951527}, {
                   0.18222810297558026`, 0.09685439581479163}, {
                   0.27073779576926765`, 0.042069810325321415`}, {
                   0.3575112797365835, -0.042006785469922474`}, {
                   0.4516394623155443, -0.09808544986431629}, {
                   0.5394859823491253, -0.07760167026270944}, {
                   0.6346872009943513, 0.0063643674428021085`}, {
                   0.7281522108132057, 0.08405712128907425}, {
                   0.8153355580866803, 0.09555213349985489}, {0.9098736039718,
                    0.03202960165577907}, {
                   0.9999999090909091, -0.054402034659985464`}}]}}, 
                AspectRatio -> 1, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Background -> 
                GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
                DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {Automatic, Automatic}, 
                Ticks -> {Automatic, Automatic}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "\[Lambda]"}], "}"}], 
                    HoldForm], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{}, {}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090884856*^-8}, {
                   0.0874367476365131, 0.08197166587636243}, {
                   0.18222810297558026`, 0.1358255024317191}, {
                   0.27073779576926765`, 0.13315455086535802`}, {
                   0.3575112797365835, 0.08143316377978886}, {
                   0.4516394623155443, -0.007347854733426912}, {
                   0.5394859823491253, -0.08816932746972758}, {
                   0.6346872009943513, -0.13787329990112937`}, {
                   0.7281522108132057, -0.12816574147938434`}, {
                   0.8153355580866803, -0.07001063326902106}, {
                   0.9098736039718, 0.02121659675083076}, {0.9999999090909091,
                    0.10024804094746914`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090880112*^-8}, {
                   0.0874367476365131, 0.08090369567458766}, {
                   0.18222810297558026`, 0.12746559200130417`}, {
                   0.27073779576926765`, 0.1116266937044405}, {
                   0.3575112797365835, 0.046963725126600256`}, {
                   0.4516394623155443, -0.04509050859182233}, {
                   0.5394859823491253, -0.11115559892361665`}, {
                   0.6346872009943513, -0.12642564594664163`}, {
                   0.7281522108132057, -0.07740196037964171}, {
                   0.8153355580866803, 0.004179083230780074}, {
                   0.9098736039718, 0.08937493944143977}, {0.9999999090909091,
                    0.12834702174618903`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090875369*^-8}, {
                   0.0874367476365131, 0.07984396759533968}, {
                   0.18222810297558026`, 0.11939549826670079`}, {
                   0.27073779576926765`, 0.09184904274707059}, {
                   0.3575112797365835, 0.017913117173780694`}, {
                   0.4516394623155443, -0.07109962300031061}, {
                   0.5394859823491253, -0.11717052830989395`}, {
                   0.6346872009943513, -0.09879571259704382}, {
                   0.7281522108132057, -0.022693471356141894`}, {
                   0.8153355580866803, 0.06128703302641453}, {0.9098736039718,
                    0.11605625481609519`}, {0.9999999090909091, 
                   0.10415981267620744`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090870287*^-8}, {
                   0.0874367476365131, 0.07879243663407876}, {
                   0.18222810297558026`, 0.1116081822210312}, {
                   0.27073779576926765`, 0.07372482040530459}, {
                   0.3575112797365835, -0.006267252216927747}, {
                   0.4516394623155443, -0.08743897872291118}, {
                   0.5394859823491253, -0.11109134853087661`}, {
                   0.6346872009943513, -0.06371549528296311}, {
                   0.7281522108132057, 0.02544576624054603}, {
                   0.8153355580866803, 0.09464282937855747}, {0.9098736039718,
                    0.10731931496853601`}, {0.9999999090909091, 
                   0.0516787429232188}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090865543*^-8}, {
                   0.0874367476365131, 0.07774905743802465}, {
                   0.18222810297558026`, 0.10409673959866513`}, {
                   0.27073779576926765`, 0.05716133039337165}, {
                   0.3575112797365835, -0.026084496726167965`}, {
                   0.4516394623155443, -0.09591154799603378}, {
                   0.5394859823491253, -0.09685594593277226}, {
                   0.6346872009943513, -0.02730376120671303}, {
                   0.7281522108132057, 0.061646715198529656`}, {
                   0.8153355580866803, 0.1046634148537508}, {0.9098736039718, 
                   0.07509702498429204}, {
                   0.9999999090909091, -0.006536873471333553}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.0909090908608*^-8}, {
                   0.0874367476365131, 0.07671378556951527}, {
                   0.18222810297558026`, 0.09685439581479163}, {
                   0.27073779576926765`, 0.042069810325321415`}, {
                   0.3575112797365835, -0.042006785469922474`}, {
                   0.4516394623155443, -0.09808544986431629}, {
                   0.5394859823491253, -0.07760167026270944}, {
                   0.6346872009943513, 0.0063643674428021085`}, {
                   0.7281522108132057, 0.08405712128907425}, {
                   0.8153355580866803, 0.09555213349985489}, {0.9098736039718,
                    0.03202960165577907}, {
                   0.9999999090909091, -0.054402034659985464`}}]}}, 
                AspectRatio -> 1, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Background -> 
                GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
                DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {Automatic, Automatic}, 
                Ticks -> {Automatic, Automatic}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "\[Lambda]"}], "}"}], 
                    HoldForm], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Generator: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["ParametricNDSolveValue", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Dependent variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "\[Lambda]"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Independent variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "s", "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ParametricFunction[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.855652353567698*^9, 3.855652385972082*^9, {3.8556531681460047`*^9, 
   3.8556531927347527`*^9}, 3.855653415097228*^9, {3.8556535475843887`*^9, 
   3.855653561591138*^9}, {3.85565361127608*^9, 3.855653640031187*^9}, {
   3.855653693786261*^9, 3.85565373478089*^9}, 3.8556542483090563`*^9, 
   3.855654688740057*^9, 3.855654817065936*^9, 3.855658390412629*^9},
 CellLabel->
  "Out[309]=",ExpressionUUID->"a044e86e-c9d6-4b02-8f1b-ceb74a2e17b4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Let\[CloseCurlyQuote]s write a visualization function to see if this looks \
like a natural motion\
\>", "Item",
 CellChangeTimes->{{3.855654313483096*^9, 3.855654337034233*^9}, {
  3.855654481390452*^9, 
  3.855654491873719*^9}},ExpressionUUID->"3963b48c-c121-493a-80e1-\
c2454fe39092"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"visualizeDimerCartesian", "[", 
     RowBox[{"\[Alpha]_", ",", "\[Beta]0_"}], "]"}], "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], "[", "s_", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Dashed", ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"2", 
            RowBox[{"AngleVector", "[", "\[Alpha]", "]"}]}]}], "}"}], "]"}], 
        ",", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"1", "/", "2"}]}], "]"}], ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Alpha]", "]"}], "s"}], ",", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Alpha]", "]"}], "s"}]}], "}"}], ",", 
          RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Dashed", ",", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"AngleVector", "[", "\[Beta]0", "]"}], ",", 
          RowBox[{"1", "/", "2"}]}], "]"}], ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "s", "]"}], ",", 
            RowBox[{"y", "[", "s", "]"}]}], "}"}], ",", 
          RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
     "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"2", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.855653179100038*^9, 3.85565318955473*^9}, {
   3.855653238126382*^9, 3.855653296166407*^9}, 3.855653664802856*^9, 
   3.855653701791779*^9, {3.855654507281748*^9, 3.855654516469777*^9}, {
   3.855658228294983*^9, 3.8556582929022493`*^9}},
 CellLabel->
  "In[310]:=",ExpressionUUID->"9afd0275-8d99-4747-80fc-1e9d567978b1"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"visualizeDimerCartesian", "[", 
           RowBox[{"\[Alpha]", ",", "\[Beta]0"}], "]"}], "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "@@", 
        RowBox[{"parametricNumericalSolution", "[", 
         RowBox[{"\[Alpha]", ",", "\[Beta]0"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Animate", "[", 
      RowBox[{
       RowBox[{"f", "[", "s", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"s", ",", "0", ",", "\"\<Displacement\>\""}], "}"}], ",", 
         "0", ",", "3"}], "}"}], ",", 
       RowBox[{"AnimationRunning", "\[Rule]", "False"}], ",", 
       RowBox[{"Paneled", "\[Rule]", "False"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", 
       RowBox[{"\[Pi]", "/", "4"}], ",", "\"\<Angle of Motion\>\""}], "}"}], 
     ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]0", ",", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "/", "3"}], ",", 
       "\"\<Initial Angle of Second Particle\>\""}], "}"}], ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"Paneled", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.855653308695271*^9, 3.855653327312936*^9}, 
   3.8556533663782463`*^9, {3.855653688801938*^9, 3.855653718687882*^9}, {
   3.855653848716344*^9, 3.855653863645067*^9}, {3.8556545308788137`*^9, 
   3.8556545390055017`*^9}, {3.855658406405348*^9, 3.8556584067603083`*^9}},
 CellLabel->
  "In[311]:=",ExpressionUUID->"2e10ddd7-ccb6-4760-8977-30b1bb64e5d7"]
}, Open  ]],

Cell["Great, this looks reasonable", "Item",
 CellChangeTimes->{{3.855654313483096*^9, 3.855654337034233*^9}, {
  3.855654481390452*^9, 3.855654491873719*^9}, {3.8556545925506573`*^9, 
  3.855654621139799*^9}},ExpressionUUID->"a9952d46-c3af-48b0-9170-\
3e849e7719c7"],

Cell[CellGroupData[{

Cell["Even though we\[CloseCurlyQuote]ve cached our numerical results", "Item",
 CellChangeTimes->{{3.855655374653412*^9, 
  3.85565540733039*^9}},ExpressionUUID->"a09f5cb5-8991-4eae-a16a-\
b262b5c0665a"],

Cell["this will still be too slow for our purposes", "Subitem",
 CellChangeTimes->{{3.855655374653412*^9, 
  3.855655398569661*^9}},ExpressionUUID->"7551a129-5d35-48f4-87c5-\
62bcff05d59b"],

Cell["as such we look for a symbolic solution", "Subitem",
 CellChangeTimes->{{3.855655374653412*^9, 3.8556554045398283`*^9}, {
  3.8556554612849913`*^9, 
  3.8556554650519743`*^9}},ExpressionUUID->"a76337d5-8871-44a6-a875-\
1e7e914bd052"]
}, Open  ]],

Cell["\<\
In-fact, switching to generalized coordinates leads to the simpler equation\
\>", "Item",
 CellChangeTimes->{{3.855654635560195*^9, 3.855654637593925*^9}, {
  3.855654874579391*^9, 3.8556548826049147`*^9}, {3.855654920032831*^9, 
  3.855654927419324*^9}, {3.8556556646463614`*^9, 3.855655702102647*^9}, {
  3.855655878668054*^9, 3.855655916611341*^9}, {3.8556585954432297`*^9, 
  3.855658622919302*^9}},ExpressionUUID->"fa5b10a4-0390-4b83-b2f4-\
c47c563708b3"],

Cell[BoxData[
 RowBox[{"\t", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Beta]", "'"}], 
    RowBox[{"(", "s", ")"}]}], " ", "==", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Nu]"}], ")"}], 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Beta]", 
      RowBox[{"(", "s", ")"}]}], "]"}]}]}]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.855655927611063*^9, 
  3.855655941794978*^9}},ExpressionUUID->"5548c545-7b6a-470a-a8f8-\
2260ca63a246"],

Cell[CellGroupData[{

Cell["Where we\[CloseCurlyQuote]ve introduced a \
\[OpenCurlyDoubleQuote]stickiness\[CloseCurlyDoubleQuote] coefficient \[Nu]", \
"Subitem",
 CellChangeTimes->{{3.855655985804974*^9, 
  3.8556560017617702`*^9}},ExpressionUUID->"ffb1fb47-d6a8-4876-9ba1-\
c624e0311f47"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"angleBetweenParticles", "[", 
    RowBox[{"\[Nu]_", ",", "\[Beta]0_"}], "]"}], "[", "s_", "]"}], "=", 
  RowBox[{"DSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[Beta]", "[", "s", "]"}], ",", "s"}], "]"}], "==", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Nu]"}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Beta]", "[", "s", "]"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"\[Beta]", "[", "0", "]"}], "==", "\[Beta]0"}]}], "}"}], ",", 
    RowBox[{"\[Beta]", "[", "s", "]"}], ",", "s"}], "]"}]}]], "Input",
 CellLabel->
  "In[325]:=",ExpressionUUID->"3d278cd9-f465-4a54-9bb5-a440f5f5607e"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ifun", 
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"", 2, 325, 592, 
   31272499686025674325, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.855656004139782*^9, 3.855658521895548*^9, 
  3.855658626948759*^9},
 CellLabel->
  "During evaluation of \
In[325]:=",ExpressionUUID->"2b359719-2a15-422b-83c3-acb261669ae6"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ifun", 
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"", 2, 325, 593, 
   31272499686025674325, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.855656004139782*^9, 3.855658521895548*^9, 
  3.855658626958939*^9},
 CellLabel->
  "During evaluation of \
In[325]:=",ExpressionUUID->"df69c338-e70f-4b6a-8478-354ca0779f88"],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"ArcCot", "[", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "s"}], "+", 
      RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
    RowBox[{"Cot", "[", 
     FractionBox["\[Beta]0", "2"], "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.855656004158827*^9, 3.855658521913459*^9, 
  3.855658626967354*^9},
 CellLabel->
  "Out[325]=",ExpressionUUID->"556c58ea-dae3-424e-a96a-f9a503bfd4d4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["For \[Nu]=0, the two solutions coincide!", "Item",
 CellChangeTimes->{{3.8556586574771423`*^9, 
  3.8556586649483967`*^9}},ExpressionUUID->"396bc32f-a72b-479b-b272-\
748ad73084a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"visualizeDimer", "[", 
    RowBox[{"\[Alpha]_", ",", "\[Beta]0_", ",", 
     RowBox[{"\[Nu]_", ":", "0"}]}], "]"}], "[", "s_", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Dashed", ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"2", 
            RowBox[{"AngleVector", "[", "\[Alpha]", "]"}]}]}], "}"}], "]"}], 
        ",", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"1", "/", "2"}]}], "]"}], ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Alpha]", "]"}], "s"}], ",", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Alpha]", "]"}], "s"}]}], "}"}], ",", 
          RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", 
          RowBox[{"1", "/", "3"}], ",", "0"}], "]"}], ",", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RotationTransform", "[", "\[Alpha]", "]"}], "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"s", ",", "0"}], "}"}], " ", "+", " ", 
            RowBox[{"AngleVector", "[", 
             RowBox[{
              RowBox[{"angleBetweenParticles", "[", 
               RowBox[{"\[Nu]", ",", 
                RowBox[{"\[Beta]0", "-", "\[Alpha]"}]}], "]"}], "[", "s", 
              "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"1", "/", "2"}]}], "]"}], ",", "Dashed", ",", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"AngleVector", "[", "\[Beta]0", "]"}], ",", 
          RowBox[{"1", "/", "2"}]}], "]"}], ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RotationTransform", "[", "\[Alpha]", "]"}], "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"s", ",", "0"}], "}"}], " ", "+", " ", 
            RowBox[{"AngleVector", "[", 
             RowBox[{
              RowBox[{"angleBetweenParticles", "[", 
               RowBox[{"\[Nu]", ",", 
                RowBox[{"\[Beta]0", "-", "\[Alpha]"}]}], "]"}], "[", "s", 
              "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
            RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"2", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.855656184351879*^9, 3.855656184723192*^9}, 
   3.8556562506659203`*^9, {3.855656294165319*^9, 3.855656319017646*^9}, {
   3.855656691178308*^9, 3.8556567158873243`*^9}, {3.855656783577388*^9, 
   3.855656799930645*^9}, {3.855656955986112*^9, 3.8556569561729603`*^9}, {
   3.8556570172926607`*^9, 3.855657022011438*^9}, {3.85565722510207*^9, 
   3.855657226158867*^9}, {3.85565726212726*^9, 3.855657262335751*^9}, {
   3.855658086252149*^9, 3.855658134213204*^9}, {3.8556587233819733`*^9, 
   3.85565873436384*^9}, {3.855658776935975*^9, 3.8556587804041843`*^9}},
 CellLabel->
  "In[332]:=",ExpressionUUID->"fd5e5652-f173-4dad-a371-7a9c846cd7d0"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"visualizeDimerCartesian", "[", 
           RowBox[{"\[Alpha]", ",", "\[Beta]0"}], "]"}], "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "@@", 
        RowBox[{"parametricNumericalSolution", "[", 
         RowBox[{"\[Alpha]", ",", "\[Beta]0"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Animate", "[", 
      RowBox[{
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"f", "[", "s", "]"}], ",", 
         RowBox[{
          RowBox[{"visualizeDimer", "[", 
           RowBox[{"\[Alpha]", ",", "\[Beta]0", ",", "\[Nu]"}], "]"}], "[", 
          "s", "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"s", ",", "0", ",", "\"\<Displacement\>\""}], "}"}], ",", 
         "0", ",", "3"}], "}"}], ",", 
       RowBox[{"AnimationRunning", "\[Rule]", "False"}], ",", 
       RowBox[{"Paneled", "\[Rule]", "False"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Nu]", ",", "0", ",", "\"\<Stickiness\>\""}], "}"}], ",", "0",
      ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", 
       RowBox[{"\[Pi]", "/", "4"}], ",", "\"\<Angle of Motion\>\""}], "}"}], 
     ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]0", ",", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "/", "3"}], ",", 
       "\"\<Initial Angle of Second Particle\>\""}], "}"}], ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"Paneled", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.855657070493659*^9, 3.855657077365818*^9}, {
  3.8556584421090517`*^9, 3.8556584430221643`*^9}, {3.8556586403748693`*^9, 
  3.855658650965269*^9}, {3.85565869049473*^9, 3.855658702968666*^9}},
 CellLabel->
  "In[333]:=",ExpressionUUID->"6e761bf8-a806-4f7c-ade0-67430b06d9ed"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Polymer Viscous Dragging", "Subsection",
 CellChangeTimes->{{3.8556588423169727`*^9, 
  3.8556588545969753`*^9}},ExpressionUUID->"c9b164e6-37a2-4161-8963-\
a0b5c6aac663"],

Cell[CellGroupData[{

Cell["\<\
We can work out the conditions for dragging multiple particles\
\>", "Item",
 CellChangeTimes->{{3.855658876567955*^9, 
  3.855658914351343*^9}},ExpressionUUID->"70b0abf3-5d6f-4cb1-a695-\
6ec25fb90686"],

Cell[CellGroupData[{

Cell["E.g. 5 particles being dragged by particle #3", "Subitem",
 CellChangeTimes->{{3.855658876567955*^9, 3.855658929789434*^9}, {
  3.855659282497447*^9, 
  3.855659282498479*^9}},ExpressionUUID->"bb1a112a-8401-41fb-9332-\
8b935d75cd06"],

Cell[CellGroupData[{

Cell["Note, the angles go like this: \[Beta]21, \
\[Beta]32,\[Beta]33,\[Beta]34,\[Beta]45", "Subsubitem",
 CellChangeTimes->{{3.855658876567955*^9, 3.855658929789434*^9}, {
  3.855659282619954*^9, 
  3.85565929385117*^9}},ExpressionUUID->"2f9ee788-806e-4b43-833b-\
7e69c664bec9"],

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", ",", " ", 
     RowBox[{"\[Beta]33", " ", "=", "0"}], ",", 
     RowBox[{"\[Beta]", "=", "angleBetweenParticles"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"d3", " ", "=", " ", 
         RowBox[{"s", " ", 
          RowBox[{"AngleVector", "[", 
           RowBox[{
            RowBox[{"\[Beta]", "[", 
             RowBox[{"\[Nu]", ",", "\[Beta]33"}], "]"}], "[", "s", "]"}], 
           "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"d4", " ", "=", " ", 
         RowBox[{"d3", " ", "+", " ", 
          RowBox[{"AngleVector", "[", 
           RowBox[{
            RowBox[{"\[Beta]", "[", 
             RowBox[{"\[Nu]", ",", 
              RowBox[{"\[Beta]34", "-", "\[Theta]"}]}], "]"}], "[", "s", 
            "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"d5", " ", "=", " ", 
         RowBox[{"d4", " ", "+", " ", 
          RowBox[{"AngleVector", "[", 
           RowBox[{
            RowBox[{"\[Beta]", "[", 
             RowBox[{"\[Nu]", ",", 
              RowBox[{"\[Beta]45", "-", "\[Theta]"}]}], "]"}], "[", "s", 
            "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"d2", " ", "=", " ", 
         RowBox[{"d3", " ", "+", " ", 
          RowBox[{"AngleVector", "[", 
           RowBox[{
            RowBox[{"\[Beta]", "[", 
             RowBox[{"\[Nu]", ",", 
              RowBox[{"\[Beta]32", "-", "\[Theta]"}]}], "]"}], "[", "s", 
            "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"d1", " ", "=", " ", 
         RowBox[{"d2", " ", "+", " ", 
          RowBox[{"AngleVector", "[", 
           RowBox[{
            RowBox[{"\[Beta]", "[", 
             RowBox[{"\[Nu]", ",", 
              RowBox[{"\[Beta]21", "-", "\[Theta]"}]}], "]"}], "[", "s", 
            "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"AngleVector", "[", "\[Theta]", "]"}]}], "}"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"RotationMatrix", "[", "\[Theta]", "]"}], ".", "d3"}], 
            ",", 
            RowBox[{"1", "/", "2"}]}], "]"}], ",", "\[IndentingNewLine]", 
          "Orange", ",", "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"RotationMatrix", "[", "\[Theta]", "]"}], ".", "d4"}], 
            ",", 
            RowBox[{"1", "/", "2"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"RotationMatrix", "[", "\[Theta]", "]"}], ".", "d5"}], 
            ",", 
            RowBox[{"1", "/", "2"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"RotationMatrix", "[", "\[Theta]", "]"}], ".", "d2"}], 
            ",", 
            RowBox[{"1", "/", "2"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"RotationMatrix", "[", "\[Theta]", "]"}], ".", "d1"}], 
            ",", 
            RowBox[{"1", "/", "2"}]}], "]"}], "\[IndentingNewLine]", ",", 
          "Black", ",", "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{"1", ",", 
            RowBox[{
             RowBox[{"RotationMatrix", "[", "\[Theta]", "]"}], ".", "d1"}]}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{"2", ",", 
            RowBox[{
             RowBox[{"RotationMatrix", "[", "\[Theta]", "]"}], ".", "d2"}]}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{"3", ",", 
            RowBox[{
             RowBox[{"RotationMatrix", "[", "\[Theta]", "]"}], ".", "d3"}]}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{"4", ",", 
            RowBox[{
             RowBox[{"RotationMatrix", "[", "\[Theta]", "]"}], ".", "d4"}]}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{"5", ",", 
            RowBox[{
             RowBox[{"RotationMatrix", "[", "\[Theta]", "]"}], ".", "d5"}]}], 
           "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "->", 
        RowBox[{"3", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], ",", 
       RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Nu]", ",", "0", ",", "\"\<Stickiness\>\""}], "}"}], ",", 
       "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", "\"\<Angle of Motion\>\""}], "}"}],
        ",", "0", ",", " ", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s", ",", "0", ",", "\"\<Displacement\>\""}], "}"}], ",", "0",
        ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Beta]45", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Beta]34", ",", 
         RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Beta]32", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Beta]21", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
     RowBox[{"Paneled", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.85565895637602*^9, 3.8556589629224663`*^9}, {
  3.8556590237251577`*^9, 3.855659047449005*^9}, {3.8556590786659727`*^9, 
  3.855659137848089*^9}, {3.855659178333205*^9, 3.8556592552374277`*^9}},
 CellLabel->
  "In[347]:=",ExpressionUUID->"2530fbb1-eb74-40d1-ac75-95e698842bff"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let\[CloseCurlyQuote]s see how we can generalize this", "Item",
 CellChangeTimes->{{3.855658876567955*^9, 3.855658914351343*^9}, {
  3.855659490999154*^9, 
  3.8556594958076468`*^9}},ExpressionUUID->"ab3e3617-5ebe-4cd3-8d2e-\
25139126e525"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", ",", " ", 
     RowBox[{"\[Beta]33", " ", "=", "0"}], ",", 
     RowBox[{"\[Beta]", "=", "angleBetweenParticles"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]33", "=", "0"}], ";", "\[IndentingNewLine]", 
    RowBox[{"d3", " ", "=", " ", 
     RowBox[{"s", " ", 
      RowBox[{"AngleVector", "[", 
       RowBox[{
        RowBox[{"\[Beta]", "[", 
         RowBox[{"\[Nu]", ",", "\[Beta]33"}], "]"}], "[", "s", "]"}], 
       "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"d4", " ", "=", " ", 
     RowBox[{"d3", " ", "+", " ", 
      RowBox[{"AngleVector", "[", 
       RowBox[{
        RowBox[{"\[Beta]", "[", 
         RowBox[{"\[Nu]", ",", 
          RowBox[{"\[Beta]34", "-", "\[Theta]"}]}], "]"}], "[", "s", "]"}], 
       "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"d5", " ", "=", " ", 
     RowBox[{"d4", " ", "+", " ", 
      RowBox[{"AngleVector", "[", 
       RowBox[{
        RowBox[{"\[Beta]", "[", 
         RowBox[{"\[Nu]", ",", 
          RowBox[{"\[Beta]45", "-", "\[Theta]"}]}], "]"}], "[", "s", "]"}], 
       "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"d2", " ", "=", " ", 
     RowBox[{"d3", " ", "+", " ", 
      RowBox[{"AngleVector", "[", 
       RowBox[{
        RowBox[{"\[Beta]", "[", 
         RowBox[{"\[Nu]", ",", 
          RowBox[{"\[Beta]32", "-", "\[Theta]"}]}], "]"}], "[", "s", "]"}], 
       "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"d1", " ", "=", " ", 
     RowBox[{"d2", " ", "+", " ", 
      RowBox[{"AngleVector", "[", 
       RowBox[{
        RowBox[{"\[Beta]", "[", 
         RowBox[{"\[Nu]", ",", 
          RowBox[{"\[Beta]21", "-", "\[Theta]"}]}], "]"}], "[", "s", "]"}], 
       "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"RotationTransform", "[", "\[Theta]", "]"}], "[", 
      RowBox[{"{", 
       RowBox[{"d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5"}], "}"}], 
      "]"}], "//", "Grid"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8556595082966948`*^9, 3.855659564875155*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"5c08a718-0f52-45af-a2f9-2eb0b5799c9b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"s", "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"ArcCot", "[", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "s"}], "+", 
               RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
             RowBox[{"Cot", "[", 
              FractionBox[
               RowBox[{"\[Beta]21", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}],
           "]"}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"ArcCot", "[", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "s"}], "+", 
               RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
             RowBox[{"Cot", "[", 
              FractionBox[
               RowBox[{"\[Beta]32", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}],
           "]"}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           RowBox[{"ArcCot", "[", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "s"}], "+", 
               RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
             RowBox[{"Cot", "[", 
              FractionBox[
               RowBox[{"\[Beta]21", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}],
           "]"}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           RowBox[{"ArcCot", "[", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "s"}], "+", 
               RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
             RowBox[{"Cot", "[", 
              FractionBox[
               RowBox[{"\[Beta]32", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}],
           "]"}]}], ")"}]}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"s", "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"ArcCot", "[", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "s"}], "+", 
               RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
             RowBox[{"Cot", "[", 
              FractionBox[
               RowBox[{"\[Beta]21", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}],
           "]"}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"ArcCot", "[", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "s"}], "+", 
               RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
             RowBox[{"Cot", "[", 
              FractionBox[
               RowBox[{"\[Beta]32", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}],
           "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           RowBox[{"ArcCot", "[", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "s"}], "+", 
               RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
             RowBox[{"Cot", "[", 
              FractionBox[
               RowBox[{"\[Beta]21", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}],
           "]"}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           RowBox[{"ArcCot", "[", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "s"}], "+", 
               RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
             RowBox[{"Cot", "[", 
              FractionBox[
               RowBox[{"\[Beta]32", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}],
           "]"}]}], ")"}]}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"s", "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"ArcCot", "[", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "s"}], "+", 
               RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
             RowBox[{"Cot", "[", 
              FractionBox[
               RowBox[{"\[Beta]32", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}],
           "]"}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         RowBox[{"ArcCot", "[", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "s"}], "+", 
             RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
           RowBox[{"Cot", "[", 
            FractionBox[
             RowBox[{"\[Beta]32", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}], 
        "]"}]}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"s", "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"ArcCot", "[", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "s"}], "+", 
               RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
             RowBox[{"Cot", "[", 
              FractionBox[
               RowBox[{"\[Beta]32", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}],
           "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         RowBox[{"ArcCot", "[", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "s"}], "+", 
             RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
           RowBox[{"Cot", "[", 
            FractionBox[
             RowBox[{"\[Beta]32", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}], 
        "]"}]}]}]},
    {
     RowBox[{"s", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
     RowBox[{"s", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"s", "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"ArcCot", "[", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "s"}], "+", 
               RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
             RowBox[{"Cot", "[", 
              FractionBox[
               RowBox[{"\[Beta]34", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}],
           "]"}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         RowBox[{"ArcCot", "[", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "s"}], "+", 
             RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
           RowBox[{"Cot", "[", 
            FractionBox[
             RowBox[{"\[Beta]34", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}], 
        "]"}]}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"s", "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"ArcCot", "[", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "s"}], "+", 
               RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
             RowBox[{"Cot", "[", 
              FractionBox[
               RowBox[{"\[Beta]34", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}],
           "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         RowBox[{"ArcCot", "[", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "s"}], "+", 
             RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
           RowBox[{"Cot", "[", 
            FractionBox[
             RowBox[{"\[Beta]34", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}], 
        "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"s", "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"ArcCot", "[", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "s"}], "+", 
               RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
             RowBox[{"Cot", "[", 
              FractionBox[
               RowBox[{"\[Beta]34", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}],
           "]"}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"ArcCot", "[", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "s"}], "+", 
               RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
             RowBox[{"Cot", "[", 
              FractionBox[
               RowBox[{"\[Beta]45", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}],
           "]"}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           RowBox[{"ArcCot", "[", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "s"}], "+", 
               RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
             RowBox[{"Cot", "[", 
              FractionBox[
               RowBox[{"\[Beta]34", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}],
           "]"}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           RowBox[{"ArcCot", "[", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "s"}], "+", 
               RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
             RowBox[{"Cot", "[", 
              FractionBox[
               RowBox[{"\[Beta]45", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}],
           "]"}]}], ")"}]}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"s", "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"ArcCot", "[", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "s"}], "+", 
               RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
             RowBox[{"Cot", "[", 
              FractionBox[
               RowBox[{"\[Beta]34", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}],
           "]"}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"ArcCot", "[", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "s"}], "+", 
               RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
             RowBox[{"Cot", "[", 
              FractionBox[
               RowBox[{"\[Beta]45", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}],
           "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           RowBox[{"ArcCot", "[", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "s"}], "+", 
               RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
             RowBox[{"Cot", "[", 
              FractionBox[
               RowBox[{"\[Beta]34", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}],
           "]"}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           RowBox[{"ArcCot", "[", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "s"}], "+", 
               RowBox[{"s", " ", "\[Nu]"}]}]], " ", 
             RowBox[{"Cot", "[", 
              FractionBox[
               RowBox[{"\[Beta]45", "-", "\[Theta]"}], "2"], "]"}]}], "]"}]}],
           "]"}]}], ")"}]}]}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.85565955395162*^9, 3.85565956525589*^9}},
 CellLabel->
  "Out[350]=",ExpressionUUID->"bb91079e-27ef-4111-b7bf-6fe5f8995dca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We notice these all have the same general form:", "Item",
 CellChangeTimes->{{3.8556596121669292`*^9, 
  3.855659621372135*^9}},ExpressionUUID->"5a1b0650-0dac-4419-bdfd-\
7b93c7862be7"],

Cell[TextData[{
 "Namely involve factors of \[Theta] + 2 ",
 Cell[BoxData[
  FormBox[
   RowBox[{"ArcCot", "[", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"s", " ", "\[Vee]", " ", 
       RowBox[{"-", "s"}]}]], 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Beta]", "-", "\[Theta]"}], ")"}], "/", "2"}], "]"}]}], 
    "]"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "bd82fde6-d954-4bfb-a62b-e3ca6848f033"]
}], "Subitem",
 CellChangeTimes->{{3.8556596121669292`*^9, 
  3.855659700246725*^9}},ExpressionUUID->"3d1a56fc-aa4b-4e7f-9a6d-\
29269f5a416d"],

Cell[CellGroupData[{

Cell["\<\
These get used over and over again, so it will be beneficial for us to \
precompute them\
\>", "Subitem",
 CellChangeTimes->{{3.8556596121669292`*^9, 3.855659702819145*^9}, {
  3.855659813405389*^9, 
  3.85565983595761*^9}},ExpressionUUID->"9cb93d42-5936-47c6-b223-\
eaab86bce901"],

Cell[BoxData[
 RowBox[{
  RowBox[{"precompute", "[", 
   RowBox[{
   "positions_", ",", "perturbedIndex_", ",", "s_", ",", "\[Nu]_", ",", " ", 
    "\[Theta]_"}], "]"}], ":=", " ", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dp", " ", "=", " ", 
       RowBox[{"Differences", "[", "positions", "]"}]}], ",", 
      "\[IndentingNewLine]", "betaList", ",", "\[IndentingNewLine]", "diffs", 
      ",", "\[IndentingNewLine]", "reducedAngles"}], "\[IndentingNewLine]", 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"betaList", " ", "=", 
      RowBox[{"ArcTan", "@@@", " ", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"dp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", 
             RowBox[{"perturbedIndex", "-", "1"}]}], "]"}], "]"}]}], ",", 
         RowBox[{"dp", "[", 
          RowBox[{"[", 
           RowBox[{"perturbedIndex", ";;", 
            RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"reducedAngles", "=", 
      RowBox[{"\[Theta]", " ", "+", 
       RowBox[{"2", " ", 
        RowBox[{"ArcCot", "[", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "s"}], "+", 
            RowBox[{"s", " ", "\[Nu]"}]}]], 
          RowBox[{"Cot", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"betaList", "-", "\[Theta]"}], ")"}], "/", "2"}], 
           "]"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"reducedAngles", "=", 
      RowBox[{"Insert", "[", 
       RowBox[{"reducedAngles", ",", "\[Theta]", ",", "perturbedIndex"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "reducedAngles", "]"}], ",", 
        RowBox[{"Sin", "[", "reducedAngles", "]"}]}], "}"}]}]}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[46]:=",ExpressionUUID->"48758cdf-9076-411f-859c-643d46927436"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Similarly, we write a recursive function to propagate these outwards from the \
perturbed index\
\>", "Item",
 CellChangeTimes->{{3.855659887277287*^9, 
  3.8556599375328007`*^9}},ExpressionUUID->"6cfd885c-a649-4ea9-b1c8-\
128e62075734"],

Cell[BoxData[
 RowBox[{
  RowBox[{"displacements", "[", 
   RowBox[{
   "perturbedIndex_", ",", "positionList_", ",", "s_", ",", "\[Nu]_", ",", 
    "\[Theta]_"}], "]"}], ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"newPositions", ",", "betaList", ",", "\[CapitalDelta]"}], "  ", 
     "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[CapitalDelta]", "=", 
      RowBox[{"precompute", "[", 
       RowBox[{
       "positionList", ",", "perturbedIndex", ",", "s", ",", "\[Nu]", ",", 
        "\[Theta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newPositions", "[", "perturbedIndex", "]"}], " ", "=", 
      RowBox[{
       RowBox[{"positionList", "[", 
        RowBox[{"[", "perturbedIndex", "]"}], "]"}], "+", 
       RowBox[{"s", " ", 
        RowBox[{"AngleVector", "[", "\[Theta]", "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newPositions", "[", "index_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"newPositions", "[", "index", "]"}], "=", 
       "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"nextIndex", "=", 
           RowBox[{"index", "-", 
            RowBox[{"Sign", "[", 
             RowBox[{"index", "-", "perturbedIndex"}], "]"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"newPositions", "[", "nextIndex", "]"}], " ", "+", " ", 
          RowBox[{"\[CapitalDelta]", "[", 
           RowBox[{"[", "index", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
        "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"newPositions", "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "\[CapitalDelta]", "]"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.855659951695511*^9, 3.855659955098749*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"ff891d83-f77a-4aab-bbe3-a4274ad3ad3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notice the function does three main things:", "Item",
 CellChangeTimes->{{3.855659956874419*^9, 3.8556599616950607`*^9}, {
  3.855660008295128*^9, 
  3.8556600114196978`*^9}},ExpressionUUID->"3ad077a2-27c1-4e2a-aae3-\
bf92456ae151"],

Cell["Precompute the costly trigonometric functions", "Subitem",
 CellChangeTimes->{{3.855659956874419*^9, 3.8556599616950607`*^9}, {
  3.855660008295128*^9, 
  3.855660037969212*^9}},ExpressionUUID->"99ce3b06-7c3f-4696-8cea-\
437483b43660"],

Cell[CellGroupData[{

Cell["Define the recursion base-case", "Subitem",
 CellChangeTimes->{{3.855659956874419*^9, 3.8556599616950607`*^9}, {
  3.855660008295128*^9, 
  3.855660052747414*^9}},ExpressionUUID->"a69c3e7f-a991-4a32-a22f-\
10911d5dc3b7"],

Cell["\<\
I.e. move the perturbed particle a distance s along the direction \[Theta]\
\>", "Subsubitem",
 CellChangeTimes->{{3.855659956874419*^9, 3.8556599616950607`*^9}, {
  3.855660008295128*^9, 
  3.855660077051442*^9}},ExpressionUUID->"ec153996-fec2-417e-a56e-\
31e678267fc6"]
}, Open  ]],

Cell["\<\
And then define the recursive function to either advance or decrease the \
index to sample the precomputed distances\
\>", "Subitem",
 CellChangeTimes->{{3.855659956874419*^9, 3.8556599616950607`*^9}, {
  3.855660008295128*^9, 
  3.855660128025588*^9}},ExpressionUUID->"13e4030b-ea95-42d8-baa5-\
33d0d75cbf31"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Self-avoiding Reptation", "Subsection",
 CellChangeTimes->{{3.8556588423169727`*^9, 3.8556588545969753`*^9}, {
  3.855660810511977*^9, 
  3.855660817049172*^9}},ExpressionUUID->"2104c72c-3123-47b9-894b-\
3f9b88791550"],

Cell[CellGroupData[{

Cell["\<\
Let\[CloseCurlyQuote]s wrap this all together in a single-chain reptation \
function\
\>", "Item",
 CellChangeTimes->{{3.8556601533358297`*^9, 
  3.855660170441846*^9}},ExpressionUUID->"8dd1ac36-fa3d-4854-beca-\
30d06bc1ae35"],

Cell[BoxData[
 RowBox[{
  RowBox[{"moveSingleChainRandomly", "[", " ", 
   RowBox[{"positions_", ",", "ds_", ",", 
    RowBox[{"stickiness_", ":", "0.1"}]}], "]"}], ":=", " ", 
  RowBox[{"displacements", "[", 
   RowBox[{
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"Length", "[", "positions", "]"}]}], "}"}], "]"}], ",", 
    "positions", ",", "ds", ",", "stickiness", ",", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"2", "\[Pi]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.85566017920218*^9, 3.8556602091865587`*^9}},
 CellLabel->
  "In[355]:=",ExpressionUUID->"0b72061b-7e9a-4060-b687-f90892251676"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"chainPositions", "=", 
   RowBox[{"collisionFreeCorrelatedPolymerChain2D", "[", 
    RowBox[{"8", ",", "0.4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chainPositions", "=", 
   RowBox[{
    RowBox[{"TranslationTransform", "[", 
     RowBox[{"-", 
      RowBox[{"Mean", "[", "chainPositions", "]"}]}], "]"}], "[", 
    "chainPositions", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"chainGraphic", "[", "chainPositions", "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"10", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8556602318564177`*^9, 3.855660316576001*^9}},
 CellLabel->
  "In[367]:=",ExpressionUUID->"c2cb5a3d-335c-49f8-9e27-92f9fb536e33"],

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"chainPositions", "=", 
     RowBox[{"moveSingleChainRandomly", "[", 
      RowBox[{"chainPositions", ",", "0.1"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Pause", "[", "0.1", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "100", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.855660338355472*^9, 3.855660362436129*^9}},
 CellLabel->
  "In[371]:=",ExpressionUUID->"c83e1d36-60fb-4da2-a8e9-b4182a4fcafb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Notice we\[CloseCurlyQuote]ll still run into the same issue of \
self-intersections when the polymer chains are long\
\>", "Item",
 CellChangeTimes->{{3.85566081946841*^9, 
  3.8556608496200457`*^9}},ExpressionUUID->"32ca1877-186d-4792-838f-\
37d3b08f9166"],

Cell[CellGroupData[{

Cell["We\[CloseCurlyQuote]ll brute-force a collision detection scheme again", \
"Subitem",
 CellChangeTimes->{{3.85566081946841*^9, 
  3.8556608701407337`*^9}},ExpressionUUID->"1253f9dc-e29b-4cf9-94ee-\
1aa8ca3df062"],

Cell["\<\
I.e. take a step, and only accept it if it doesn\[CloseCurlyQuote]t result in \
collisions\
\>", "Subsubitem",
 CellChangeTimes->{{3.85566081946841*^9, 
  3.855660884249161*^9}},ExpressionUUID->"025a5ba2-3498-4aae-941b-\
44a2bca18230"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We use a simple collision detection", "Item",
 CellChangeTimes->{{3.855660993041675*^9, 
  3.8556610007950077`*^9}},ExpressionUUID->"e68f09d3-36cc-4c91-b0ed-\
1a6730fb3a9c"],

Cell["\<\
I.e. we check for all particles within a radius of 1-\[Epsilon] at each \
position\
\>", "Subitem",
 CellChangeTimes->{{3.855660993041675*^9, 
  3.855661049087903*^9}},ExpressionUUID->"443e5768-d56f-4b5b-a7b4-\
a3f62934b7d4"],

Cell[CellGroupData[{

Cell["\<\
And make sure that length is equal to the number of particles\
\>", "Subitem",
 CellChangeTimes->{{3.855660993041675*^9, 
  3.855661067627119*^9}},ExpressionUUID->"2fdc022f-b293-43c3-9acb-\
f10119ecd23c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"collisionFreeQ", "[", "positions_", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nf", "=", 
      RowBox[{"Nearest", "[", "positions", "]"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"nf", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"All", ",", 
             RowBox[{"1.", "-", 
              SuperscriptBox["10", 
               RowBox[{"-", "6"}]]}]}], "}"}]}], "]"}], "]"}], "&"}], "/@", 
       "positions"}], "]"}], "<=", 
     RowBox[{"Length", "[", "positions", "]"}]}]}], "]"}]}]], "Input",
 CellLabel->"In[43]:=",ExpressionUUID->"d23a687a-d557-40fe-800b-ba19b137c670"],

Cell[BoxData[
 RowBox[{
  RowBox[{"moveSingleChain", "[", " ", 
   RowBox[{"positions_", ",", "ds_", ",", 
    RowBox[{"stickiness_", ":", "0.1"}]}], "]"}], ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "newPositions", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newPositions", "=", " ", 
      RowBox[{"displacements", "[", 
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"Length", "[", "positions", "]"}]}], "}"}], "]"}], ",", 
        "positions", ",", "ds", ",", "stickiness", ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"2", "\[Pi]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"collisionFreeQ", "[", "newPositions", "]"}], ",", 
       "newPositions", ",", "positions"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.855661081275622*^9, 3.855661088932228*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"8ffa6b45-53f6-45a3-855e-c44fd48a3982"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"chainPositions", "=", 
   RowBox[{"collisionFreeCorrelatedPolymerChain2D", "[", 
    RowBox[{"24", ",", "0.4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chainPositions", "=", 
   RowBox[{
    RowBox[{"TranslationTransform", "[", 
     RowBox[{"-", 
      RowBox[{"Mean", "[", "chainPositions", "]"}]}], "]"}], "[", 
    "chainPositions", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"chainGraphic", "[", "chainPositions", "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"15", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8556602318564177`*^9, 3.855660316576001*^9}, {
  3.855661107563879*^9, 3.855661112163015*^9}, {3.85566115692618*^9, 
  3.855661159142829*^9}},
 CellLabel->
  "In[399]:=",ExpressionUUID->"1028128c-83b0-47ca-9875-5016537d5813"],

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"chainPositions", "=", 
     RowBox[{"moveSingleChain", "[", 
      RowBox[{"chainPositions", ",", "0.1"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Pause", "[", "0.1", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "100", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.855660338355472*^9, 3.855660362436129*^9}, 
   3.85566114062735*^9},
 CellLabel->
  "In[402]:=",ExpressionUUID->"0a3e38f2-d05d-4f8d-a8dc-3950424a130a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multiple Chains Reptating", "Subsection",
 CellChangeTimes->{{3.8556612784439983`*^9, 
  3.855661281540303*^9}},ExpressionUUID->"ea09dac9-d04e-4d33-be26-\
5b350b9e91f8"],

Cell["We wish to extend this to multiple chains reptating", "Item",
 CellChangeTimes->{{3.855661385505871*^9, 
  3.855661400903737*^9}},ExpressionUUID->"a0e04359-7c71-47bf-aa37-\
15aaaf54772f"],

Cell[CellGroupData[{

Cell["But we similarly have to be concerned about collisions", "Item",
 CellChangeTimes->{{3.855661385505871*^9, 
  3.855661417640823*^9}},ExpressionUUID->"2b2fb7bc-5963-49dc-83e8-\
0f731ca1d854"],

Cell["We will use a hierarchical collision-detection!", "Subitem",
 CellChangeTimes->{{3.855661385505871*^9, 
  3.855661432956143*^9}},ExpressionUUID->"9e942319-462b-4278-877e-\
705e83898520"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
First, we start by checking if the axis-aligned bounding boxes of two chains \
overlap\
\>", "Item",
 CellChangeTimes->{{3.855661433865086*^9, 
  3.855661461879361*^9}},ExpressionUUID->"7047e99b-06ce-4c41-812a-\
5b23aec2a707"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"axesAlignedBoundingBoxes", "[", "positions_", "]"}], ":=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ",", 
       RowBox[{"1", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ",", 
       RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], "+", 
   RowBox[{"MinMax", "/@", 
    RowBox[{"Transpose", "[", "positions", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pairWiseAxesAlignedIntersection", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xMinA_", ",", "xMaxA_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"yMinA_", ",", "yMaxA_"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xMinB_", ",", "xMaxB_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"yMinB_", ",", "yMaxB_"}], "}"}]}], "}"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"xMaxA", ">", "xMinB"}], "&&", 
     RowBox[{"xMinA", "<", "xMaxB"}]}], ")"}], "&&", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"yMaxA", ">", "yMinB"}], "&&", 
     RowBox[{"yMinA", "<", "yMaxB"}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.855661474745223*^9, 3.855661475988696*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"04ec7c6a-9b8e-4579-9622-3627f11fe54f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"chainGraphic", "[", 
   RowBox[{"positions_", ",", "bb_", ",", 
    RowBox[{"col_", ":", 
     RowBox[{"RandomColor", "[", "]"}]}]}], "]"}], ":=", " ", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.25", "]"}], ",", "col", ",", 
      RowBox[{"Rectangle", "@@", 
       SuperscriptBox["bb", "\[Transpose]"]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FaceForm", "[", "None", "]"}], ",", 
      RowBox[{"EdgeForm", "[", 
       RowBox[{"col", "//", "Darker"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Disk", "[", 
         RowBox[{"#", ",", 
          RowBox[{"1", "/", "2"}]}], "]"}], "&"}], "/@", 
       RowBox[{"positions", "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;", 
          RowBox[{"-", "2"}]}], "]"}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FaceForm", "[", 
       RowBox[{"col", "//", "Darker"}], "]"}], ",", 
      RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Disk", "[", 
         RowBox[{"#", ",", 
          RowBox[{"1", "/", "2"}]}], "]"}], "&"}], "/@", 
       RowBox[{"positions", "[", 
        RowBox[{"[", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}], "]"}], "]"}]}]}], "}"}]}], 
   "\[IndentingNewLine]", "}"}]}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"f4caa316-f75c-496e-a21a-17a040e0c7b7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1111", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chainPositions", "=", 
   RowBox[{"collisionFreeCorrelatedPolymerChain2D", "[", 
    RowBox[{"12", ",", "0.4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"posA", "=", "chainPositions"}], ",", 
     RowBox[{"posB", "=", 
      RowBox[{
       RowBox[{"TranslationTransform", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", 
          RowBox[{"-", "3"}]}], "}"}], "]"}], "@", "chainPositions"}]}], ",", 
     "bbA", ",", "bbB"}], "}"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bbA", "=", 
     RowBox[{"axesAlignedBoundingBoxes", "[", "posA", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"bbB", "=", 
     RowBox[{"axesAlignedBoundingBoxes", "[", "posB", "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pairWiseAxesAlignedIntersection", "[", 
      RowBox[{"bbA", ",", "bbB"}], "]"}], "//", "Echo"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"MapThread", "[", 
      RowBox[{"chainGraphic", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"posA", ",", "posB"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"bbA", ",", "bbB"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Blue"}], "}"}]}], "}"}]}], "]"}], "]"}]}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.855661543149337*^9, 3.8556616109229937`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"8fd92479-5013-455b-b640-111414418aee"],

Cell[BoxData["True"], "Echo",
 CellChangeTimes->{
  3.8556624431502028`*^9},ExpressionUUID->"53f19abb-3cf4-4476-8c55-\
0c2b4bf50b33"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[1, 0, 0], Opacity[0.25], 
     RectangleBox[{-0.5, -2.390224640128515}, \
{4.871269615886817, 3.6172468445425503}]}, 
    {EdgeForm[RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 0]], FaceForm[None], 
     DiskBox[{0.48789978931200123, -0.8728996480634557}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{1.0939566180207008, -1.6683209957626195}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{2.083257212377393, -1.8142125102708158}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{3.080364105400652, -1.890224640128515}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{4.078294480542105, -1.8259209359580861}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{4.371269615886817, -0.8698008754689508}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{3.706589826414799, -0.12267252139086215}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{3.3298814397317824, 0.8036593799288965}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{2.5191973507937178, 1.389143203738453}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{1.84142659874595, 2.124416491481591}, NCache[
      Rational[1, 2], 0.5]]}, 
    {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 0]], 
     DiskBox[{0., 0.}, NCache[Rational[1, 2], 0.5]], 
     DiskBox[{1.9609585611696088, 3.1172468445425503}, NCache[
      Rational[1, 2], 0.5]]}}, {
    {RGBColor[0, 0, 1], Opacity[0.25], 
     RectangleBox[{-3.5, -5.390224640128515}, \
{1.871269615886817, 0.6172468445425503}]}, 
    {EdgeForm[RGBColor[0, 0, 
      NCache[
       Rational[2, 3], 0.6666666666666666]]], FaceForm[None], 
     DiskBox[{-2.512100210687999, -3.8728996480634557}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-1.9060433819792992, -4.6683209957626195}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-0.9167427876226069, -4.814212510270815}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{0.08036410540065209, -4.890224640128515}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{1.0782944805421053, -4.825920935958086}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{1.371269615886817, -3.869800875468951}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{0.706589826414799, -3.122672521390862}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{0.3298814397317824, -2.1963406200711035}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-0.48080264920628224, -1.610856796261547}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-1.15857340125405, -0.8755835085184089}, NCache[
      Rational[1, 2], 0.5]]}, 
    {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[0, 0, 
      NCache[
       Rational[2, 3], 0.6666666666666666]]], 
     DiskBox[{-3., -3.}, NCache[Rational[1, 2], 0.5]], 
     DiskBox[{-1.0390414388303912, 0.1172468445425503}, NCache[
      Rational[1, 2], 0.5]]}}}]], "Output",
 CellChangeTimes->{{3.855661552112196*^9, 3.855661618356192*^9}, 
   3.85566244317692*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"3c654387-7c87-4151-91c4-88629b21c712"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Next, we only keep points on each chain inside the overlap region\
\>", "Item",
 CellChangeTimes->{{3.855661433865086*^9, 3.855661461879361*^9}, {
  3.8556616249566927`*^9, 
  3.855661642261322*^9}},ExpressionUUID->"497eda49-07d2-4274-816b-\
8cfcd926d737"],

Cell[BoxData[
 RowBox[{
  RowBox[{"returnPointsInOverlap", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"positionsA_", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xMinA_", ",", "xMaxA_"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"yMinA_", ",", "yMaxA_"}], "}"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"positionsB_", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xMinB_", ",", "xMaxB_"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"yMinB_", ",", "yMaxB_"}], "}"}]}], "}"}]}], "}"}]}], "]"}], 
  ":=", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xMin", "=", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"xMinA", ",", "xMinB"}], "]"}], "-", 
        RowBox[{"1", "/", "2"}]}]}], ",", 
      RowBox[{"yMin", "=", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"yMinA", ",", "yMinB"}], "]"}], "-", 
        RowBox[{"1", "/", "2"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"xMax", "=", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{"xMaxA", ",", "xMaxB"}], "]"}], "+", 
        RowBox[{"1", "/", "2"}]}]}], ",", 
      RowBox[{"yMax", "=", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{"yMaxA", ",", "yMaxB"}], "]"}], "+", 
        RowBox[{"1", "/", "2"}]}]}]}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{"pos", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"xMax", ">", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ">", "xMin"}], "&&", 
          RowBox[{"yMax", ">", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ">", "yMin"}]}], "&"}]}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"pos", ",", 
        RowBox[{"{", 
         RowBox[{"positionsA", ",", "positionsB"}], "}"}]}], "}"}]}], "]"}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.855661721064062*^9, 3.8556617314077997`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"60465d11-11a6-482d-b331-54f05e4102b5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"posA", "=", "chainPositions"}], ",", 
     RowBox[{"posB", "=", 
      RowBox[{
       RowBox[{"TranslationTransform", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", 
          RowBox[{"-", "3"}]}], "}"}], "]"}], "@", "chainPositions"}]}], ",", 
     "bbA", ",", "bbB"}], "}"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bbA", "=", 
     RowBox[{"axesAlignedBoundingBoxes", "[", "posA", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"bbB", "=", 
     RowBox[{"axesAlignedBoundingBoxes", "[", "posB", "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"posA", ",", "posB"}], "}"}], "=", 
     RowBox[{"returnPointsInOverlap", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"posA", ",", "bbA"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"posB", ",", "bbB"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"MapThread", "[", 
      RowBox[{"chainGraphic", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"posA", ",", "posB"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"bbA", ",", "bbB"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Blue"}], "}"}]}], "}"}]}], "]"}], "]"}]}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{3.855661672631922*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"73124b3d-1bab-45d7-baba-a69e8e6a53c9"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[1, 0, 0], Opacity[0.25], 
     RectangleBox[{-0.5, -2.390224640128515}, \
{4.871269615886817, 3.6172468445425503}]}, 
    {EdgeForm[RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 0]], FaceForm[None], 
     DiskBox[{0.48789978931200123, -0.8728996480634557}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{1.0939566180207008, -1.6683209957626195}, NCache[
      Rational[1, 2], 0.5]]}, 
    {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 0]], 
     DiskBox[{0., 0.}, NCache[Rational[1, 2], 0.5]], 
     DiskBox[{2.083257212377393, -1.8142125102708158}, NCache[
      Rational[1, 2], 0.5]]}}, {
    {RGBColor[0, 0, 1], Opacity[0.25], 
     RectangleBox[{-3.5, -5.390224640128515}, \
{1.871269615886817, 0.6172468445425503}]}, 
    {EdgeForm[RGBColor[0, 0, 
      NCache[
       Rational[2, 3], 0.6666666666666666]]], FaceForm[None]}, 
    {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[0, 0, 
      NCache[
       Rational[2, 3], 0.6666666666666666]]], 
     DiskBox[{0.3298814397317824, -2.1963406200711035}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-0.48080264920628224, -1.610856796261547}, NCache[
      Rational[1, 2], 0.5]]}}}]], "Output",
 CellChangeTimes->{
  3.855661678345234*^9, {3.855661725536191*^9, 3.855661732783587*^9}, 
   3.855662446200679*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"8a01cfc8-80fe-4288-be8c-ff25fa70b5c7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["If the two chains are non-empty, we check pairwise distances", "Item",
 CellChangeTimes->{{3.8555137417755013`*^9, 3.855513761255863*^9}, {
  3.85551423280124*^9, 3.855514240073593*^9}, {3.8555151526976748`*^9, 
  3.855515161226368*^9}, {3.855515881897376*^9, 3.85551591081001*^9}, {
  3.855520987194358*^9, 
  3.85552100668781*^9}},ExpressionUUID->"ca0db60b-396d-42c9-97b1-\
8d1d96d90f53"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"posA", "=", "chainPositions"}], ",", 
     RowBox[{"posB", "=", 
      RowBox[{
       RowBox[{"TranslationTransform", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", 
          RowBox[{"-", "3"}]}], "}"}], "]"}], "@", "chainPositions"}]}], ",", 
     "bbA", ",", "bbB", ",", "dm"}], "}"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bbA", "=", 
     RowBox[{"axesAlignedBoundingBoxes", "[", "posA", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"bbB", "=", 
     RowBox[{"axesAlignedBoundingBoxes", "[", "posB", "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"posA", ",", "posB"}], "}"}], "=", 
     RowBox[{"returnPointsInOverlap", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"posA", ",", "bbA"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"posB", ",", "bbB"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MatrixForm", "[", "\[IndentingNewLine]", 
      RowBox[{"dm", "=", 
       RowBox[{"DistanceMatrix", "[", 
        RowBox[{"posA", ",", "posB"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
     "//", "Echo"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Min", "[", "dm", "]"}], "<", "1"}]}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8556617840217524`*^9, 3.855661822030601*^9}, {
  3.855661886498505*^9, 3.8556618901920357`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"5fdecfe3-d897-4e56-9b3f-0c75686f479c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2.2209758854282575`", "1.6810802495853059`"},
     {"1.3328412528101776`", "1.2177705723854262`"},
     {"0.9287710168454413`", "1.575807375265633`"},
     {"1.7945329454763803`", "2.5721112962320887`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Echo",
 CellChangeTimes->{
  3.855662448165267*^9},ExpressionUUID->"9ac4b4c6-39d8-42be-8ecf-\
429945f577fe"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.855661794168006*^9, 3.855661822380506*^9}, 
   3.855662448186955*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"b7533d19-f3af-4b8e-a2e9-0647a744af51"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
We can do a little faster by looping over a Nearest function until we find \
the first distance less than 1\
\>", "Subitem",
 CellChangeTimes->{{3.8556618356490717`*^9, 
  3.855661857814152*^9}},ExpressionUUID->"94dd0bd9-e2da-47b8-a0b3-\
dfda407c305b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"shortestDistanceLessThanOne", "[", 
   RowBox[{"posA_", ",", "posB_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nf", "=", 
       RowBox[{"Nearest", "[", 
        RowBox[{"posA", "->", "\"\<Distance\>\""}], "]"}]}], ",", 
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"d", "=", "2."}], ",", 
      RowBox[{"l", "=", 
       RowBox[{"Length", "[", "posB", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"d", ">", "1."}], " ", "&&", " ", 
        RowBox[{"i", "<=", "l"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"d", "=", 
         RowBox[{"First", "[", 
          RowBox[{"nf", "[", 
           RowBox[{"posB", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"i", "++"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d", "<", "1."}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[18]:=",ExpressionUUID->"c146544c-766d-4952-94e0-f28fd27ae216"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"posA", "=", "chainPositions"}], ",", 
     RowBox[{"posB", "=", 
      RowBox[{
       RowBox[{"TranslationTransform", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", 
          RowBox[{"-", "3"}]}], "}"}], "]"}], "@", "chainPositions"}]}], ",", 
     "bbA", ",", "bbB", ",", "dm"}], "}"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bbA", "=", 
     RowBox[{"axesAlignedBoundingBoxes", "[", "posA", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"bbB", "=", 
     RowBox[{"axesAlignedBoundingBoxes", "[", "posB", "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"posA", ",", "posB"}], "}"}], "=", 
     RowBox[{"returnPointsInOverlap", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"posA", ",", "bbA"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"posB", ",", "bbB"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"shortestDistanceLessThanOne", "[", 
     RowBox[{"posA", ",", "posB"}], "]"}]}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.855661871600664*^9, 3.855661875202189*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"141ea027-39a2-4b32-b489-36626168a62f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.855661875596073*^9, 3.855661892991724*^9}, 
   3.855662451110379*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"9d98dbd4-bb2f-4001-8124-226cb86e4eff"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The final piece we need is a connectivity matrix telling us which bounding \
boxes overlap\
\>", "Item",
 CellChangeTimes->{{3.855661913041297*^9, 
  3.8556619453826647`*^9}},ExpressionUUID->"42527b47-e773-4f9d-8184-\
3a4eddef17bf"],

Cell["\<\
We\[CloseCurlyQuote]ll construct this by looking at the upper-triangle part \
of the matrix at each step\
\>", "Subitem",
 CellChangeTimes->{{3.855661913041297*^9, 
  3.855661970314557*^9}},ExpressionUUID->"4cf79c90-bdcd-44b7-a51e-\
26e6da2ef7df"],

Cell[CellGroupData[{

Cell["Is this efficient? How can we do better?", "Subitem",
 CellChangeTimes->{{3.855661913041297*^9, 
  3.85566197771819*^9}},ExpressionUUID->"f1ff8df9-2a3a-4577-8ac5-\
47f164af11af"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"connectivityMatrixIndex", ",", "connectivityMatrix"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"connectivityMatrixIndex", "[", 
    RowBox[{"bbs_", ",", 
     RowBox[{"{", 
      RowBox[{"i_", ",", "j_"}], "}"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"pairWiseAxesAlignedIntersection", "[", 
     RowBox[{
      RowBox[{"bbs", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"bbs", "[", 
       RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "//", "Boole"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"connectivityMatrix", "[", "bbs_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s", "=", 
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "bbs", "]"}], "]"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ",", 
      RowBox[{"l", "=", 
       RowBox[{"Length", "[", "bbs", "]"}]}], ",", "is"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{"s", "->", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"connectivityMatrixIndex", "[", 
           RowBox[{"bbs", ",", "#"}], "]"}], "&"}], "/@", "s"}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "l"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"411b4aa5-e580-4550-b144-3d7bccb52a3a"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "collisionFreeCorrelatedPolymerChain2D", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"collisionFreeCorrelatedPolymerChain2D", "[", 
   RowBox[{"numberUnits_", ",", "correlation_", ",", 
    RowBox[{"origin_", ":", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ",", 
    RowBox[{"maxAttempts_", ":", "100"}]}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"start", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "origin", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"AngleVector", "[", 
          RowBox[{"origin", ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"angularRange", "[", "correlation", "]"}], "]"}]}], "]"}],
          "}"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"NestWhile", "[", 
     RowBox[{
      RowBox[{"addCorrelatedParticleToChain", "[", "correlation", "]"}], ",", 
      "start", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "#", "]"}], "<", "numberUnits"}], "&"}], ",", 
      "1", ",", "maxAttempts"}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellLabel->"In[26]:=",ExpressionUUID->"77ce739b-bb11-48f3-b592-5872a627b5b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SeedRandom", "[", "1111", "]"}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SeedRandom", "[", "11111", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"listOfPositions", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"collisionFreeCorrelatedPolymerChain2D", "[", 
        RowBox[{"40", ",", "0.3", ",", 
         RowBox[{"RandomReal", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "30"}], ",", "30"}], "}"}], ",", "2"}], "]"}]}], 
        "]"}], ",", "4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bbs", "=", 
     RowBox[{"axesAlignedBoundingBoxes", "/@", "listOfPositions"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cols", "=", 
     RowBox[{"RandomColor", "[", "4", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Echo", "[", 
     RowBox[{
      RowBox[{"MatrixForm", "[", 
       RowBox[{"connectivityMatrix", "[", "bbs", "]"}], "]"}], ",", 
      "\"\<Connectivity Matrix\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"graphicMultiple", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"MapThread", "[", 
      RowBox[{"chainGraphic", ",", 
       RowBox[{"{", 
        RowBox[{"listOfPositions", ",", "bbs", ",", "cols"}], "}"}]}], "]"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.855662470241838*^9, 3.8556624849871273`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"a3d5bc92-a40f-425e-9f07-8e0c6e9e50ba"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Connectivity Matrix\"\>",
   "EchoLabel"], "  ", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0", "0"},
      {"0", "0", "1", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[
    SparseArray[
     Automatic, {4, 4}, 0, {1, {{0, 0, 1, 1, 1}, {{3}}}, {1}}]]]]}]], "Echo",
 CellChangeTimes->{
  3.855662485348281*^9},ExpressionUUID->"0e077e1f-6fea-44b4-8602-\
a95a38363437"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.9128081900098961, 0.6090936304379417, 0.5817600363515538], 
     Opacity[0.25], 
     RectangleBox[{-25.25571001321872, 15.531305207379503}, \
{-10.014937504534378, 29.215079437228013}]}, 
    {EdgeForm[RGBColor[
     0.6085387933399308, 0.40606242029196116`, 0.38784002423436925`]], 
     FaceForm[None], 
     DiskBox[{-13.262661417146619, 16.43878148325432}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-13.125021318440734, 17.42926379164162}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-12.22926135001253, 17.873801842838034}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-12.168632187738996, 18.87196220304175}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-11.577601315871657, 19.67861114062224}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-11.918853814793161, 20.618582806141916}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-11.744180385211425, 21.603209229207106}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-12.125467115892608, 22.52766605838111}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-11.715676661461664, 23.43984574652226}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-10.827052958166151, 23.89848276415316}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-10.514937504534378, 24.848526943970203}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-10.98678973095498, 25.730204592786322}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-11.681026517037285, 26.449951273813827}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-12.492399583687648, 27.034479927272653}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-12.739006196914616, 28.003595595453042}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-13.441708653786035, 28.715079437228013}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-14.31497884563418, 28.22784317828426}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-13.98868540253158, 27.28257465083386}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-14.806583514842492, 26.707211567313333}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-15.805955719777874, 26.742640312741212}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-16.796250288256708, 26.881624727843484}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-17.722853600919553, 27.25766501951745}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-18.69469548106188, 27.02203106610363}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-19.41403444434288, 26.327371828847106}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-18.968554141584924, 25.43208008876755}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-18.739427763386853, 24.458683405593707}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-18.553542767724334, 23.476111897566152}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-19.300477548322604, 22.81121458704925}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-20.10704687931543, 23.40235409199016}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-21.057090427922397, 23.71447146694753}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-21.8392760889079, 24.33751688403096}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-21.32207299380302, 25.193379582373357}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-21.293242005096754, 26.192963883015487}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-22.199889696937237, 26.61485244991476}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-22.751284795285542, 25.78060821378396}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-23.21741109917105, 24.89589002767833}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-24.17466451907915, 25.185140593925386}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-24.75571001321872, 25.999011673237156}, NCache[
      Rational[1, 2], 0.5]]}, 
    {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[
     0.6085387933399308, 0.40606242029196116`, 0.38784002423436925`]], 
     DiskBox[{-14.175877210154596, 16.031305207379503}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-24.54982916228297, 26.977588739807782}, NCache[
      Rational[1, 2], 0.5]]}}, {
    {RGBColor[0.1629685137822714, 0.7702952192454355, 0.020086483808114952`], 
     Opacity[0.25], 
     RectangleBox[{-12.218221380134581, -17.864574902236097}, 
      {0.5762895485876374, -7.460447639078169}]}, 
    {EdgeForm[RGBColor[
     0.1086456758548476, 0.5135301461636237, 0.01339098920540997]], FaceForm[
     None], DiskBox[{-2.2916829154231655, -16.548661763716854}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-1.6733594390007576, -15.762738053357568}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-1.431251341537441, -14.792488771398187}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-1.5065030985409749, -13.795324204705265}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-1.206097547165471, -12.841512638040875}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-1.2175217563104677, -11.841577896447498}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-0.25775842982502417, -11.560767716550835}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{0.07628954858763742, -10.618211644946385}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-0.785598920637389, -10.111113758323949}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-1.682833173256141, -10.552668620065578}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-2.3453444607104794, -9.803616689959531}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-3.2672061900932667, -9.416097720231111}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-4.262696400528142, -9.51096204929281}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-4.975446172574839, -8.809543656001487}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-5.729761740499974, -8.153031642413175}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-6.711042231317692, -7.960447639078169}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-7.370068117851006, -8.712567896004533}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-8.242293762531313, -9.201671591310571}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-9.219203647805998, -9.415323354824476}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-9.99050659834819, -10.051791546083793}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-10.45644854878115, -10.936606836879974}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-10.289699108945896, -11.922606139270513}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-10.642186173756457, -12.858422824920666}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-10.905823705271375, -13.823044643032159}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-11.718221380134581, -14.406148422711949}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-11.566703059579421, -15.394602872110678}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-10.577743504961626, -15.542788564166873}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-10.585016671267311, -16.54276211434302}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-10.015259054683373, -17.364574902236097}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-9.015494461301115, -17.34287794809018}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-8.048141156830592, -17.089446331416255}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-7.258766462789163, -16.47553461756238}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-6.528734147012414, -15.79212199116334}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-7.048962397141614, -14.93809472709766}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-8.042467040082046, -14.824303143683931}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-8.532491099906464, -13.952594235393327}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-8.500794717575536, -12.953096691951059}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-8.205530858426256, -11.997680942928532}, NCache[
      Rational[1, 2], 0.5]]}, 
    {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[
     0.1086456758548476, 0.5135301461636237, 0.01339098920540997]], 
     DiskBox[{-3.0412281011381026, -17.21061494527244}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-8.470091118397232, -11.03331178703226}, NCache[
      Rational[1, 2], 0.5]]}}, {
    {RGBColor[0.0248316683154024, 0.3355553052012006, 0.5254786520271737], 
     Opacity[0.25], 
     RectangleBox[{-13.00087656780419, -8.51562738970965}, \
{1.0621449418623472, 0.25580601801471403}]}, 
    {EdgeForm[RGBColor[
     0.016554445543601602`, 0.2237035368008004, 0.35031910135144917`]], 
     FaceForm[None], 
     DiskBox[{-10.70931257082899, -6.835879300811861}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-10.722645054389645, -5.835968182320769}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-10.030478424176883, -5.114230448777684}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-9.24720681135469, -4.492550804147975}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-8.697117956185444, -3.6574446723188596}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-8.374597586190708, -2.710882148795739}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-7.799131565503387, -1.8930564589117025}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-6.799604273240225, -1.9238004342738713}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-6.105692400165596, -2.6438603709500215}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-5.209759687491532, -3.0880501663759117}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-4.66847179965962, -3.9288875005175794}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-4.045175100923044, -4.7108729385815415}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-3.128031509565386, -5.10942987658611}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-2.544398211035439, -5.921447224213027}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-1.8839923300190429, -6.672356055109933}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-1.2576727982005291, -7.451922501323877}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-0.43169652807530046, -8.01562738970965}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{0.3409246015590659, -7.380760009824279}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-0.1637815903141847, -6.517468830739955}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{0.5621449418623472, -5.829696579277194}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{0.07022164324506136, -4.959058038734973}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-0.5011158543593188, -4.138342823918552}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-1.392806805163468, -4.590987550226052}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-2.363185148065008, -4.349397253178217}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-2.822985413491406, -3.461374890895704}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-3.4718932795749757, -2.700507897699871}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-2.9831835467663526, -1.82806145403807}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-3.006985765053007, -0.8283447669688611}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-3.8186309217582464, -0.24419398198528597}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-4.665631411389116, -0.775786091186567}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-5.663939092202423, -0.7176330652192314}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-6.558423722409044, -0.2705343665808614}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-7.5482736021254935, -0.4126512748829038}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-8.342506378905979, -1.0202648826037648}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-9.018765247776892, -1.7569289459823394}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-9.981638116801516, -1.4869736939565839}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-10.585587298648806, -0.6899508675921248}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-11.525571318005841, -1.0311693362502452}, NCache[
      Rational[1, 2], 0.5]]}, 
    {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[
     0.016554445543601602`, 0.2237035368008004, 0.35031910135144917`]], 
     DiskBox[{-11.634993541209482, -7.214184390753076}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{-12.50087656780419, -1.2520305363642124}, NCache[
      Rational[1, 2], 0.5]]}}, {
    {RGBColor[0.2592727715291965, 0.7653529433997175, 0.04951685769666048], 
     Opacity[0.25], 
     RectangleBox[{1.962422800132389, -8.874478012418177}, \
{11.379023029261107, 4.023675920347964}]}, 
    {EdgeForm[RGBColor[
     0.17284851435279766`, 0.5102352955998117, 0.03301123846444032]], 
     FaceForm[None], 
     DiskBox[{6.8025247781700156, 1.9561720091081143}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{6.130772831306027, 2.6969481709035934}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{5.568170637657046, 3.523675920347964}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{4.65603689669497, 3.1137832043861784}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{4.748509905834977, 2.1180680128878304}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{3.7699559297921468, 1.9120774403589709}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{3.4717053596672915, 0.9575898304759515}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{4.037120162173152, 0.13278312517630453}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{4.333410309291755, -0.8223148534208846}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{5.085560011336314, -1.4813071338872654}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{5.69178431596247, -2.2766008484861766}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{6.642016535093718, -1.965058347814272}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{7.155973209968625, -1.1072422041380592}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{7.862505761812101, -0.39956165955205336}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{7.529622026079515, 0.5434062182066314}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{7.859289194018599, 1.487503436920374}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{7.983490201380264, 2.479760515388624}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{8.977664355801405, 2.587546185498386}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{9.706140434070594, 1.902474945852798}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{10.706081062379589, 1.8915781638960225}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{10.879023029261107, 0.9066461479217466}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{10.112257501219958, 0.2647188739975306}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{9.662274917427382, -0.6283184568478027}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{9.861898928568957, -1.6081910272240474}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{9.090644549346617, -2.244718074984285}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{8.117387450889057, -2.474436642588149}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{7.197484123108213, -2.8665818548982442}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{6.4968110217408, -3.58006430389063}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{5.626196380129199, -4.072029898024513}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{4.8181200429502224, -3.482952115986005}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{4.10187796501145, -2.7851002077777163}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{3.283506459401656, -3.3597897577139912}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{2.462422800132389, -3.930597627737689}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{2.891484355067467, -4.833872880402508}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{3.75754115942872, -5.333818489063665}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{4.726991393758518, -5.5791065710364744}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{5.293342730863739, -6.403270488566918}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{5.185110421012237, -7.397396118004268}, NCache[
      Rational[1, 2], 0.5]]}, 
    {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[
     0.17284851435279766`, 0.5102352955998117, 0.03301123846444032]], 
     DiskBox[{6.3818545918178415, 1.0489583659598054}, NCache[
      Rational[1, 2], 0.5]], 
     DiskBox[{4.9722466814779365, -8.374478012418177}, NCache[
      Rational[1, 2], 0.5]]}}}]], "Output",
 CellChangeTimes->{{3.85566247707909*^9, 3.855662485375963*^9}},
 CellLabel->"Out[39]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
IXaxDmblP/4EQ656++moktliw20EFpYrKX+byoCAHcnB0RIVcKKACP6fpuZt
UHxGSVlWcI7qQ4ypmmdp/jekyJHScs1whBPH6L0hyAiie9jUWfcAQtPanIAn
ZZRl2Au4vej6gf7HrR2g4YkdFzB6zx2SSVQiY2w0MW0OkjGQUO5eQqY+Tjo2
uapzdOO4fhdRAEL/ZG4EqC7ZnTs7J2aqaaqPSVFwdynS9wxCVFewUIKPSp1Q
83L9PTDIZbO0Snismcm8E6g4ypt74grSXRHCmAnMTDNIh6EHy81hhDu2/Io0
y88/0BiJl0cFwo/oNxdEsq2J/qYdc9pkAsUf/hSSPjgf1ak3Ivqb10FdPeE0
b6iD4xhzm3MD8sSAqD00H7WNs0Pu+mi+a07U/2UfDUgcojfvzUdd4vV8ohSB
ni5kvtG3HVmkPqJdYx9bpKUii+pzA1Q/E1aBpqJZNzimRkvx7q0wC5n9HqA0
NfU2qpnvcWaRqN+9SB25Wxeh8BmJfywWBrsn+KUpC4/s+sms8SiXLK8/9ObS
rcgETeHY/Eo9nrT91rTBvkXn9O8s/O/Psd//9/3z98/fP3///P3z989nO3/D
/KnpMVtz9kHbOjZ/vvfk/731i0mI/dzFj+9Ei02mzfxKPe4zR7p6OH01Xfn8
Bx7eefvLn59EWHMszffb68vLZpTBBXj1P0T3/ubz1wbD9urJuWmjq/G926vN
PXbOHjlM143aqyffTTv1OJ+6WlA+auk3381Scst7ffO/Xv3amZ6jlG6UV/77
O99yXJlzj+j2rHSZb4ak2nY1p7f/7W++RDc6NR+ZrUAm5+ZXakuS2Qn+yBwL
Q15ynJQK3PzalUuTJN3zan6lbyfhiN8NIxJ1E/4mCj0FoOFtDNjFg3ZYiZNI
DzK/bzXr/hPHi1Y47RgBtqxxfgx6jsCI+OqfePG0ojen/hossjfkHYnvio50
RzMC9cCq+FN5NfcYTokT9/6plJi5wt3bnHsEkpSbq73BNNk68AZAdQjQP6Ej
HfUcgxGPz3U1uarDswzh4Bs0wFVt9huxsEM4qmw34Ky2socdSSmRxJGzwoQm
JCe0Jjir5Djijg2gDHmBDTjiP0kBWE22FuUoi5xV/qBOzVtvSobmoHek5g/6
L5leKnl1p5fCV/886aWwrH6R6aWwDv5S91JCq/G9fyl1K753PuWeyqZDM3+e
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
\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"29e5b09c-db72-422e-b01a-8fe76a3a88c4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wrapping it all together", "Item",
 CellChangeTimes->{{3.855662491534045*^9, 
  3.855662495272839*^9}},ExpressionUUID->"f13dd67f-a4d0-4811-8654-\
f2de7b2fe078"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pairwiseChainCollisionQ", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"listOfPositions_", ",", "bbs_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i_", ",", "j_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"posA", "=", 
        RowBox[{"listOfPositions", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"bbA", "=", 
        RowBox[{"bbs", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"posB", "=", 
        RowBox[{"listOfPositions", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}], ",", 
       RowBox[{"bbB", "=", 
        RowBox[{"bbs", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}]}], "\[IndentingNewLine]", "}"}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"posA", ",", "posB"}], "}"}], "=", 
       RowBox[{"returnPointsInOverlap", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"posA", ",", "bbA"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"posB", ",", "bbB"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "posA", "]"}], "==", "0"}], "||", 
         RowBox[{
          RowBox[{"Length", "[", "posB", "]"}], "==", "0"}]}], ",", "False", 
        ",", 
        RowBox[{"shortestDistanceLessThanOne", "[", 
         RowBox[{"posA", ",", "posB"}], "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"collisionsFreeChainsQ", "[", "listOfPositions_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bbs", "=", 
        RowBox[{"axesAlignedBoundingBoxes", "/@", "listOfPositions"}]}], ",", 
       "\[IndentingNewLine]", "mij", ",", "nonzero"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mij", "=", 
       RowBox[{"connectivityMatrix", "[", "bbs", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nonzero", "=", 
       RowBox[{"mij", "[", "\"\<NonzeroPositions\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"NoneTrue", "[", 
       RowBox[{"nonzero", ",", 
        RowBox[{
         RowBox[{"pairwiseChainCollisionQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"listOfPositions", ",", "bbs"}], "}"}], ",", "#"}], "]"}],
          "&"}]}], "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"moveAllChains", "[", 
   RowBox[{"listOfPositions_", ",", "ds_"}], "]"}], ":=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"listOfPos", "=", "listOfPositions"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"listOfPos", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"moveSingleChain", "[", 
         RowBox[{"#", ",", "ds"}], "]"}], "&"}], "/@", "listOfPos"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"collisionsFreeChainsQ", "[", "listOfPos", "]"}], ",", 
       "listOfPos", ",", "listOfPositions"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellLabel->"In[40]:=",ExpressionUUID->"e51b1b8c-3a3b-4938-b29a-5da4e64aa9d8"],

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"Graphics", "[", 
   RowBox[{"MapThread", "[", 
    RowBox[{"chainGraphic", ",", 
     RowBox[{"{", 
      RowBox[{"listOfPositions", ",", "bbs", ",", "cols"}], "}"}]}], "]"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.855662533483087*^9, 3.855662534586904*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"f7c761a7-fef4-4ddd-b5b9-e3d8a51b0e38"],

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"listOfPositions", "=", 
     RowBox[{"moveAllChains", "[", 
      RowBox[{"listOfPositions", ",", ".1"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"bbs", "=", 
     RowBox[{"axesAlignedBoundingBoxes", "/@", "listOfPositions"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Pause", "[", "0.01", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "1000", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.855662526369999*^9, 3.855662545970525*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"6836538a-5c2f-4520-95da-202a4d41038f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440., 760.5},
WindowMargins->{{0, Automatic}, {0, Automatic}},
PrivateNotebookOptions->{"CloudPublishPath"->"/Published/3029-SP22__L10__\
polymer-reptation-and-step-growth__03-07-22.nb"},
FrontEndVersion->"13.0 for Linux x86 (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a0b0502b-fca7-4e65-9604-970b93e09968"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 633, 9, 85, "Subtitle",ExpressionUUID->"4381c544-06bb-45cb-b796-8a5b9e6f5286"],
Cell[CellGroupData[{
Cell[1216, 33, 603, 9, 69, "Chapter",ExpressionUUID->"e381d1e9-cca8-4125-b6a7-989ce835ed6e"],
Cell[1822, 44, 499, 10, 32, "Item",ExpressionUUID->"61eea390-b8f3-43d8-830b-8e45ed101a45"],
Cell[CellGroupData[{
Cell[2346, 58, 465, 10, 32, "Item",ExpressionUUID->"18ec1409-9f09-4991-a303-03ce8205c570"],
Cell[2814, 70, 517, 10, 26, "Subitem",ExpressionUUID->"9c2324da-17f6-4ffe-9d92-2a4eaff28473"]
}, Open  ]],
Cell[3346, 83, 538, 10, 32, "Item",ExpressionUUID->"842b4a17-62f2-4692-b9ad-44495c5a9784"],
Cell[CellGroupData[{
Cell[3909, 97, 168, 3, 68, "Section",ExpressionUUID->"04d5505a-0510-49bb-afe2-315110da04bb"],
Cell[4080, 102, 332, 7, 32, "Item",ExpressionUUID->"2efb080c-6960-42ef-be3d-19201bc63efa"],
Cell[4415, 111, 265, 5, 32, "Item",ExpressionUUID->"b96b53d9-b234-43d0-8b8b-2a08472b36f4"],
Cell[CellGroupData[{
Cell[4705, 120, 371, 7, 32, "Item",ExpressionUUID->"03b414f1-ffd0-4184-b4f8-3b471682a2a8"],
Cell[CellGroupData[{
Cell[5101, 131, 346, 5, 26, "Subitem",ExpressionUUID->"563a07e7-86c5-4830-bfec-f3dbf49abfea"],
Cell[5450, 138, 424, 8, 25, "Subsubitem",ExpressionUUID->"119d7a78-170c-4fda-9357-72c55c6262ae"],
Cell[5877, 148, 435, 8, 25, "Subsubitem",ExpressionUUID->"2a285c02-c1cf-4176-8c6f-df077c99b84f"],
Cell[CellGroupData[{
Cell[6337, 160, 497, 9, 25, "Subsubitem",ExpressionUUID->"a9743dca-59d4-40b9-8cab-2d1c8f00addf"],
Cell[CellGroupData[{
Cell[6859, 173, 2448, 65, 154, "Input",ExpressionUUID->"eb2b5e35-2f66-4525-9f31-cb8f5f4c27f3"],
Cell[9310, 240, 2625, 55, 327, "Output",ExpressionUUID->"63960f82-d2ab-43de-a0b2-af3e97331baa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11972, 300, 468, 13, 29, "Input",ExpressionUUID->"4999d29b-f304-4b91-9d11-b31a032cde22"],
Cell[12443, 315, 285, 8, 49, "Output",ExpressionUUID->"a7e4124c-b47d-45eb-a81f-786dce00f758"]
}, Open  ]],
Cell[12743, 326, 479, 12, 29, "Input",ExpressionUUID->"308348b8-b4e0-45f2-8b65-42575a10f798"],
Cell[CellGroupData[{
Cell[13247, 342, 212, 3, 29, "Input",ExpressionUUID->"d6159b43-10fe-4d60-8964-30a16e1ad1a0"],
Cell[13462, 347, 339, 9, 49, "Output",ExpressionUUID->"0ea2def5-b0ac-4f17-9618-c543ca27bef7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13838, 361, 210, 3, 29, "Input",ExpressionUUID->"5a81c74e-ab15-4d24-9e1c-dc3910371bcf"],
Cell[14051, 366, 216, 4, 33, "Output",ExpressionUUID->"836dc7bc-9e60-49b8-908f-79e106fb4133"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14340, 378, 270, 5, 32, "Item",ExpressionUUID->"51a9e389-ec0d-439a-96f3-5def3bca10f9"],
Cell[CellGroupData[{
Cell[14635, 387, 261, 5, 26, "Subitem",ExpressionUUID->"22aaa1c7-8a85-4802-a005-9a457267ef4b"],
Cell[14899, 394, 2010, 51, 195, "Input",ExpressionUUID->"2e6f8871-e0e0-4ff7-ba09-ec3a585e3405"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16958, 451, 253, 4, 32, "Item",ExpressionUUID->"dcf0d183-00de-4f6e-a831-f25cb1de24e8"],
Cell[17214, 457, 576, 12, 29, "Input",ExpressionUUID->"bf2ef67c-5e08-49b3-b3ea-c1f280bafbf5"],
Cell[CellGroupData[{
Cell[17815, 473, 503, 9, 29, "Input",ExpressionUUID->"7dda1576-035b-4473-b3c8-0d3e3fe66295"],
Cell[18321, 484, 1573, 31, 173, "Output",ExpressionUUID->"fd728a26-5b6a-43c1-b779-f6b62f22ddb9"]
}, Open  ]],
Cell[19909, 518, 243, 6, 26, "Subitem",ExpressionUUID->"fa44311f-c1b7-41d9-879c-d419c1cd893f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20189, 529, 333, 7, 32, "Item",ExpressionUUID->"5a25ceb4-e13e-480d-8f9d-0aa5b2a1c55f"],
Cell[20525, 538, 227, 4, 26, "Subitem",ExpressionUUID->"925857f2-5cce-4f0d-9733-a5232de19e87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20789, 547, 250, 4, 32, "Item",ExpressionUUID->"d509b70b-7e59-4731-aa57-827d0697e7b1"],
Cell[21042, 553, 316, 6, 26, "Subitem",ExpressionUUID->"8bbe50b0-91aa-43a4-ad40-0fbfecb3ffff"],
Cell[CellGroupData[{
Cell[21383, 563, 340, 5, 26, "Subitem",ExpressionUUID->"83b9dd9a-9a01-433a-88bf-4cec2c2edde0"],
Cell[CellGroupData[{
Cell[21748, 572, 231, 4, 25, "Subsubitem",ExpressionUUID->"21e74ef2-7f51-4ecc-898b-419c6b018118"],
Cell[CellGroupData[{
Cell[22004, 580, 340, 8, 29, "Input",ExpressionUUID->"2b21cf9c-b12c-4733-81b8-f28c4e0db3ba"],
Cell[22347, 590, 377, 10, 36, "Output",ExpressionUUID->"99f10841-3955-44c6-ae3a-8018f6164a87"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22773, 606, 181, 3, 25, "Subsubitem",ExpressionUUID->"dab50571-8ba6-4932-afb0-350fae154137"],
Cell[CellGroupData[{
Cell[22979, 613, 767, 22, 29, "Input",ExpressionUUID->"c1f72e76-3831-4451-984b-e87175af3f89"],
Cell[23749, 637, 2302, 74, 94, "Output",ExpressionUUID->"5bb537cb-c644-49d3-8862-f4a40e7b29b9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26112, 718, 305, 6, 26, "Subitem",ExpressionUUID->"4a98de8f-503a-4828-b2c9-1833b8be67e6"],
Cell[26420, 726, 237, 6, 25, "Subsubitem",ExpressionUUID->"8a9a4e64-1f81-42f8-aac9-d0f76da551f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26694, 737, 360, 7, 26, "Subitem",ExpressionUUID->"e4bfdeb7-bb77-4442-8258-1564b1135cf4"],
Cell[27057, 746, 316, 7, 25, "Subsubitem",ExpressionUUID->"59ef05d3-8d20-453e-8e48-9adeaaaf2b87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27410, 758, 316, 7, 26, "Subitem",ExpressionUUID->"b5ebd8ee-1d45-4d21-ba1c-3300d5e63acd"],
Cell[CellGroupData[{
Cell[27751, 769, 570, 15, 29, "Input",ExpressionUUID->"4426b8ea-fe8a-4d66-8439-64eebc08bb04"],
Cell[28324, 786, 2392, 74, 103, "Output",ExpressionUUID->"0610cf9f-6eb8-4cfd-93c6-585edc13ada0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30777, 867, 324, 7, 32, "Item",ExpressionUUID->"74fb40b8-3ec6-4825-b14f-994d0dd7efa9"],
Cell[31104, 876, 238, 6, 26, "Subitem",ExpressionUUID->"c8bb78a8-f9b2-4736-bea2-a2642c43802d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31379, 887, 195, 3, 32, "Item",ExpressionUUID->"a7f9105e-695b-4d91-a1d3-3b736d2be275"],
Cell[31577, 892, 289, 7, 26, "Subitem",ExpressionUUID->"ab8b38bd-5fc3-4e2b-b740-9d36f6ccc402"],
Cell[CellGroupData[{
Cell[31891, 903, 321, 7, 26, "Subitem",ExpressionUUID->"9963ab39-0fc3-412c-9f53-4e134ca8cebe"],
Cell[32215, 912, 248, 4, 25, "Subsubitem",ExpressionUUID->"11fcbd68-45dc-42aa-9476-0289bcf2eb4a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32512, 922, 235, 4, 32, "Item",ExpressionUUID->"ffb4a1a2-80c9-4ae6-8f46-ecd8c453b33c"],
Cell[32750, 928, 293, 7, 26, "Subitem",ExpressionUUID->"e65dfc59-4a73-48e1-8c25-9335a5139171"],
Cell[CellGroupData[{
Cell[33068, 939, 397, 7, 26, "Subitem",ExpressionUUID->"b6ea28b2-fa22-4971-a283-38aaa020e8e7"],
Cell[CellGroupData[{
Cell[33490, 950, 341, 7, 25, "Subsubitem",ExpressionUUID->"140dc154-9610-4496-81ad-a8cf67e785f1"],
Cell[33834, 959, 559, 13, 29, "Input",ExpressionUUID->"37b34dfd-448b-4ef3-b904-7254ce45d127"],
Cell[CellGroupData[{
Cell[34418, 976, 483, 10, 51, "Input",ExpressionUUID->"ab4ed817-95cc-466c-be30-9739dba354a0"],
Cell[34904, 988, 1125, 22, 319, "Output",ExpressionUUID->"641d151b-a812-400f-b78e-7c1e03aca386"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36102, 1018, 184, 3, 32, "Item",ExpressionUUID->"0c3eea75-d221-459a-a7f7-c668205e13fa"],
Cell[CellGroupData[{
Cell[36311, 1025, 1904, 49, 216, "Input",ExpressionUUID->"f89a77a9-502a-46b1-9925-df7d186b22d1"],
Cell[38218, 1076, 199, 6, 26, "Echo",ExpressionUUID->"c4a16e18-14a8-4545-88ad-2f76c1668ddb"],
Cell[38420, 1084, 1169, 25, 319, "Output",ExpressionUUID->"1c29a4b2-8503-4cdf-9883-3df3fd647278"]
}, Open  ]],
Cell[39604, 1112, 175, 3, 29, "Input",ExpressionUUID->"6af4cf97-1696-4149-a13b-8496cf9f681e"]
}, Open  ]],
Cell[39794, 1118, 155, 3, 32, "Item",ExpressionUUID->"6fddc9a9-8c2c-4486-a58b-2ba332b5b21a"],
Cell[CellGroupData[{
Cell[39974, 1125, 192, 3, 32, "Item",ExpressionUUID->"576090e0-1693-4ec4-a28d-c7f61b43728d"],
Cell[40169, 1130, 2346, 55, 339, "Input",ExpressionUUID->"fcb4fd9e-1f28-46be-823e-2ed17b23cf1b"],
Cell[42518, 1187, 343, 8, 29, "Input",ExpressionUUID->"b34351c4-f264-4e83-9606-ff821bd6db36"],
Cell[42864, 1197, 550, 13, 71, "Input",ExpressionUUID->"afa5d57a-fd33-40de-860b-6fc959de186b"]
}, Open  ]],
Cell[43429, 1213, 166, 3, 32, "Item",ExpressionUUID->"5edba076-e342-4fa4-95bb-53c471059fc5"],
Cell[CellGroupData[{
Cell[43620, 1220, 298, 7, 32, "Item",ExpressionUUID->"2b65a14c-7e54-4277-b339-1569d9a1d61c"],
Cell[CellGroupData[{
Cell[43943, 1231, 221, 4, 26, "Subitem",ExpressionUUID->"f521acbd-f43e-44c3-8fae-bc1b4b27f33a"],
Cell[CellGroupData[{
Cell[44189, 1239, 199, 3, 29, "Input",ExpressionUUID->"2c182dbd-9139-4ece-a475-85717546d2dd"],
Cell[44391, 1244, 18746, 384, 208, "Output",ExpressionUUID->"599e04f1-e6d6-4007-976f-18fe2d2c5221"]
}, Open  ]],
Cell[63152, 1631, 781, 16, 51, "Input",ExpressionUUID->"b4c3cce9-9ea2-4456-8b2f-92c431804117"],
Cell[CellGroupData[{
Cell[63958, 1651, 751, 19, 29, "Input",ExpressionUUID->"bfc4c58e-7dfe-490f-b02b-20d58ae42ebf"],
Cell[64712, 1672, 15727, 329, 854, "Output",ExpressionUUID->"9a2fecac-1b52-40cd-9a4e-ac24c65fd720"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[80512, 2009, 162, 3, 68, "Section",ExpressionUUID->"0fd23663-db07-4eb2-81fc-a10244a848b7"],
Cell[80677, 2014, 531, 10, 32, "Item",ExpressionUUID->"3f2830fb-3c9a-4702-bf4d-4de65a87315e"],
Cell[CellGroupData[{
Cell[81233, 2028, 502, 8, 32, "Item",ExpressionUUID->"a02bbda1-01c5-44b7-bdd9-805c2c4a70ef"],
Cell[81738, 2038, 567, 11, 26, "Subitem",ExpressionUUID->"8fa816b2-3096-4d7e-ab27-09f3df74c030"],
Cell[CellGroupData[{
Cell[82330, 2053, 510, 8, 26, "Subitem",ExpressionUUID->"cc5150b4-f3ed-4d6b-8469-f59ae7082c9c"],
Cell[82843, 2063, 556, 9, 25, "Subsubitem",ExpressionUUID->"340d6a69-a61f-463f-8fe8-f8cd4ae9cd98"]
}, Open  ]],
Cell[83414, 2075, 678, 13, 26, "Subitem",ExpressionUUID->"457358f5-20ab-46c7-8b0d-967fdf613c91"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84129, 2093, 172, 3, 54, "Subsection",ExpressionUUID->"d1f335f8-6531-4ebe-873e-0139269bbf7d"],
Cell[CellGroupData[{
Cell[84326, 2100, 338, 7, 32, "Item",ExpressionUUID->"722107b1-0079-43bd-91bf-f7fd9f90daaa"],
Cell[CellGroupData[{
Cell[84689, 2111, 1297, 32, 36, "Input",ExpressionUUID->"4b23b767-5cef-489d-a2e1-255001dd07b2"],
Cell[85989, 2145, 33659, 560, 316, "Output",ExpressionUUID->"36e6ffc1-fcc0-4290-9ad7-0a02d345c762"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[119697, 2711, 225, 5, 32, "Item",ExpressionUUID->"68031528-3c69-4ed2-9f6a-316c3c5b7c67"],
Cell[119925, 2718, 432, 8, 26, "Subitem",ExpressionUUID->"33f00087-3753-4cee-993c-9a25070a1b73"],
Cell[120360, 2728, 340, 5, 26, "Subitem",ExpressionUUID->"25545a32-96ff-4d0e-84de-de2a1828a43d"],
Cell[CellGroupData[{
Cell[120725, 2737, 417, 8, 26, "Subitem",ExpressionUUID->"9f4f6450-6add-463b-ac96-8fe4c7835a33"],
Cell[121145, 2747, 170654, 2803, 158, "Input",ExpressionUUID->"c6bb6bf3-9fe4-4790-a7db-8b59be20e651"],
Cell[291802, 5552, 2729, 72, 261, "Input",ExpressionUUID->"68d7520c-6f74-4b99-8400-e89f1d708e2a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[294580, 5630, 336, 7, 32, "Item",ExpressionUUID->"250657d4-c412-4c61-8501-84ee80710be6"],
Cell[CellGroupData[{
Cell[294941, 5641, 1077, 25, 51, "Input",ExpressionUUID->"43995bd3-f5aa-45e0-9c27-21832c6e797a"],
Cell[296021, 5668, 19356, 363, 64, "Output",ExpressionUUID->"a044e86e-c9d6-4b02-8f1b-ceb74a2e17b4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[315426, 6037, 297, 7, 32, "Item",ExpressionUUID->"3963b48c-c121-493a-80e1-c2454fe39092"],
Cell[315726, 6046, 2376, 67, 113, "Input",ExpressionUUID->"9afd0275-8d99-4747-80fc-1e9d567978b1"],
Cell[318105, 6115, 1932, 48, 113, "Input",ExpressionUUID->"2e10ddd7-ccb6-4760-8977-30b1bb64e5d7"]
}, Open  ]],
Cell[320052, 6166, 267, 4, 32, "Item",ExpressionUUID->"a9952d46-c3af-48b0-9170-3e849e7719c7"],
Cell[CellGroupData[{
Cell[320344, 6174, 204, 3, 32, "Item",ExpressionUUID->"a09f5cb5-8991-4eae-a16a-b262b5c0665a"],
Cell[320551, 6179, 189, 3, 26, "Subitem",ExpressionUUID->"7551a129-5d35-48f4-87c5-62bcff05d59b"],
Cell[320743, 6184, 239, 4, 26, "Subitem",ExpressionUUID->"a76337d5-8871-44a6-a875-1e7e914bd052"]
}, Open  ]],
Cell[320997, 6191, 470, 8, 32, "Item",ExpressionUUID->"fa5b10a4-0390-4b83-b2f4-c47c563708b3"],
Cell[321470, 6201, 452, 14, 25, "DisplayFormulaNumbered",ExpressionUUID->"5548c545-7b6a-470a-a8f8-2260ca63a246"],
Cell[CellGroupData[{
Cell[321947, 6219, 268, 5, 26, "Subitem",ExpressionUUID->"ffb1fb47-d6a8-4876-9ba1-c624e0311f47"],
Cell[CellGroupData[{
Cell[322240, 6228, 785, 22, 29, "Input",ExpressionUUID->"3d278cd9-f465-4a54-9bb5-a440f5f5607e"],
Cell[323028, 6252, 502, 12, 28, "Message",ExpressionUUID->"2b359719-2a15-422b-83c3-acb261669ae6"],
Cell[323533, 6266, 502, 12, 28, "Message",ExpressionUUID->"df69c338-e70f-4b6a-8478-354ca0779f88"],
Cell[324038, 6280, 461, 13, 48, "Output",ExpressionUUID->"556c58ea-dae3-424e-a96a-f9a503bfd4d4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[324548, 6299, 186, 3, 32, "Item",ExpressionUUID->"396bc32f-a72b-479b-b272-748ad73084a4"],
Cell[324737, 6304, 3846, 99, 133, "Input",ExpressionUUID->"fd5e5652-f173-4dad-a371-7a9c846cd7d0"],
Cell[328586, 6405, 2236, 58, 113, "Input",ExpressionUUID->"6e761bf8-a806-4f7c-ade0-67430b06d9ed"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[330871, 6469, 176, 3, 54, "Subsection",ExpressionUUID->"c9b164e6-37a2-4161-8963-a0b5c6aac663"],
Cell[CellGroupData[{
Cell[331072, 6476, 212, 5, 32, "Item",ExpressionUUID->"70b0abf3-5d6f-4cb1-a695-6ec25fb90686"],
Cell[CellGroupData[{
Cell[331309, 6485, 239, 4, 26, "Subitem",ExpressionUUID->"bb1a112a-8401-41fb-9332-8b935d75cd06"],
Cell[CellGroupData[{
Cell[331573, 6493, 279, 5, 25, "Subsubitem",ExpressionUUID->"2f9ee788-806e-4b43-833b-7e69c664bec9"],
Cell[331855, 6500, 7125, 175, 761, "Input",ExpressionUUID->"2530fbb1-eb74-40d1-ac75-95e698842bff"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[339041, 6682, 246, 4, 32, "Item",ExpressionUUID->"ab3e3617-5ebe-4cd3-8d2e-25139126e525"],
Cell[CellGroupData[{
Cell[339312, 6690, 2270, 57, 195, "Input",ExpressionUUID->"5c08a718-0f52-45af-a2f9-2eb0b5799c9b"],
Cell[341585, 6749, 12873, 369, 183, "Output",ExpressionUUID->"bb91079e-27ef-4111-b7bf-6fe5f8995dca"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[354507, 7124, 191, 3, 32, "Item",ExpressionUUID->"5a1b0650-0dac-4419-bdfd-7b93c7862be7"],
Cell[354701, 7129, 635, 19, 26, "Subitem",ExpressionUUID->"3d1a56fc-aa4b-4e7f-9a6d-29269f5a416d"],
Cell[CellGroupData[{
Cell[355361, 7152, 291, 7, 26, "Subitem",ExpressionUUID->"9cb93d42-5936-47c6-b223-eaab86bce901"],
Cell[355655, 7161, 2096, 54, 242, "Input",ExpressionUUID->"48758cdf-9076-411f-859c-643d46927436"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[357800, 7221, 247, 6, 32, "Item",ExpressionUUID->"6cfd885c-a649-4ea9-b1c8-128e62075734"],
Cell[358050, 7229, 2092, 49, 298, "Input",ExpressionUUID->"ff891d83-f77a-4aab-bbe3-a4274ad3ad3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360179, 7283, 238, 4, 32, "Item",ExpressionUUID->"3ad077a2-27c1-4e2a-aae3-bf92456ae151"],
Cell[360420, 7289, 241, 4, 26, "Subitem",ExpressionUUID->"99ce3b06-7c3f-4696-8cea-437483b43660"],
Cell[CellGroupData[{
Cell[360686, 7297, 226, 4, 26, "Subitem",ExpressionUUID->"a69c3e7f-a991-4a32-a22f-10911d5dc3b7"],
Cell[360915, 7303, 281, 6, 25, "Subsubitem",ExpressionUUID->"ec153996-fec2-417e-a56e-31e678267fc6"]
}, Open  ]],
Cell[361211, 7312, 320, 7, 26, "Subitem",ExpressionUUID->"13e4030b-ea95-42d8-baa5-33d0d75cbf31"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[361580, 7325, 224, 4, 54, "Subsection",ExpressionUUID->"2104c72c-3123-47b9-894b-3f9b88791550"],
Cell[CellGroupData[{
Cell[361829, 7333, 236, 6, 32, "Item",ExpressionUUID->"8dd1ac36-fa3d-4854-beca-30d06bc1ae35"],
Cell[362068, 7341, 664, 16, 29, "Input",ExpressionUUID->"0b72061b-7e9a-4060-b687-f90892251676"],
Cell[362735, 7359, 1034, 29, 71, "Input",ExpressionUUID->"c2cb5a3d-335c-49f8-9e27-92f9fb536e33"],
Cell[363772, 7390, 520, 12, 92, "Input",ExpressionUUID->"c83e1d36-60fb-4da2-a8e9-b4182a4fcafb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[364329, 7407, 267, 6, 32, "Item",ExpressionUUID->"32ca1877-186d-4792-838f-37d3b08f9166"],
Cell[CellGroupData[{
Cell[364621, 7417, 217, 4, 26, "Subitem",ExpressionUUID->"1253f9dc-e29b-4cf9-94ee-1aa8ca3df062"],
Cell[364841, 7423, 245, 6, 25, "Subsubitem",ExpressionUUID->"025a5ba2-3498-4aae-941b-44a2bca18230"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[365135, 7435, 179, 3, 32, "Item",ExpressionUUID->"e68f09d3-36cc-4c91-b0ed-1a6730fb3a9c"],
Cell[365317, 7440, 235, 6, 26, "Subitem",ExpressionUUID->"443e5768-d56f-4b5b-a7b4-a3f62934b7d4"],
Cell[CellGroupData[{
Cell[365577, 7450, 214, 5, 26, "Subitem",ExpressionUUID->"2fdc022f-b293-43c3-9acb-f10119ecd23c"],
Cell[365794, 7457, 780, 22, 32, "Input",ExpressionUUID->"d23a687a-d557-40fe-800b-ba19b137c670"],
Cell[366577, 7481, 1098, 26, 113, "Input",ExpressionUUID->"8ffa6b45-53f6-45a3-855e-c44fd48a3982"],
Cell[367678, 7509, 1132, 31, 71, "Input",ExpressionUUID->"1028128c-83b0-47ca-9875-5016537d5813"],
Cell[368813, 7542, 537, 13, 92, "Input",ExpressionUUID->"0a3e38f2-d05d-4f8d-a8dc-3950424a130a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[369411, 7562, 175, 3, 54, "Subsection",ExpressionUUID->"ea09dac9-d04e-4d33-be26-5b350b9e91f8"],
Cell[369589, 7567, 193, 3, 32, "Item",ExpressionUUID->"a0e04359-7c71-47bf-aa37-15aaaf54772f"],
Cell[CellGroupData[{
Cell[369807, 7574, 196, 3, 32, "Item",ExpressionUUID->"2b2fb7bc-5963-49dc-83e8-0f731ca1d854"],
Cell[370006, 7579, 192, 3, 26, "Subitem",ExpressionUUID->"9e942319-462b-4278-877e-705e83898520"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370235, 7587, 236, 6, 32, "Item",ExpressionUUID->"7047e99b-06ce-4c41-812a-5b23aec2a707"],
Cell[370474, 7595, 1425, 43, 51, "Input",ExpressionUUID->"04ec7c6a-9b8e-4579-9622-3627f11fe54f"],
Cell[371902, 7640, 1565, 45, 118, "Input",ExpressionUUID->"f4caa316-f75c-496e-a21a-17a040e0c7b7"],
Cell[CellGroupData[{
Cell[373492, 7689, 1783, 45, 257, "Input",ExpressionUUID->"8fd92479-5013-455b-b640-111414418aee"],
Cell[375278, 7736, 133, 3, 26, "Echo",ExpressionUUID->"53f19abb-3cf4-4476-8c55-0c2b4bf50b33"],
Cell[375414, 7741, 3088, 68, 402, "Output",ExpressionUUID->"3c654387-7c87-4151-91c4-88629b21c712"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[378551, 7815, 266, 6, 32, "Item",ExpressionUUID->"497eda49-07d2-4274-816b-8cfcd926d737"],
Cell[378820, 7823, 2254, 65, 154, "Input",ExpressionUUID->"60465d11-11a6-482d-b331-54f05e4102b5"],
Cell[CellGroupData[{
Cell[381099, 7892, 1661, 45, 216, "Input",ExpressionUUID->"73124b3d-1bab-45d7-baba-a69e8e6a53c9"],
Cell[382763, 7939, 1477, 34, 402, "Output",ExpressionUUID->"8a01cfc8-80fe-4288-be8c-ff25fa70b5c7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[384289, 7979, 396, 6, 32, "Item",ExpressionUUID->"ca0db60b-396d-42c9-97b1-8d1d96d90f53"],
Cell[CellGroupData[{
Cell[384710, 7989, 1715, 43, 298, "Input",ExpressionUUID->"5fdecfe3-d897-4e56-9b3f-0c75686f479c"],
Cell[386428, 8034, 759, 20, 72, "Echo",ExpressionUUID->"9ac4b4c6-39d8-42be-8ecf-429945f577fe"],
Cell[387190, 8056, 202, 3, 33, "Output",ExpressionUUID->"b7533d19-f3af-4b8e-a2e9-0647a744af51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387429, 8064, 262, 6, 26, "Subitem",ExpressionUUID->"94dd0bd9-e2da-47b8-a0b3-dfda407c305b"],
Cell[387694, 8072, 1182, 32, 154, "Input",ExpressionUUID->"c146544c-766d-4952-94e0-f28fd27ae216"],
Cell[CellGroupData[{
Cell[388901, 8108, 1405, 36, 216, "Input",ExpressionUUID->"141ea027-39a2-4b32-b489-36626168a62f"],
Cell[390309, 8146, 202, 3, 33, "Output",ExpressionUUID->"9d98dbd4-bb2f-4001-8124-226cb86e4eff"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[390572, 8156, 242, 6, 32, "Item",ExpressionUUID->"42527b47-e773-4f9d-8184-3a4eddef17bf"],
Cell[390817, 8164, 257, 6, 26, "Subitem",ExpressionUUID->"4cf79c90-bdcd-44b7-a51e-26e6da2ef7df"],
Cell[CellGroupData[{
Cell[391099, 8174, 184, 3, 26, "Subitem",ExpressionUUID->"f1ff8df9-2a3a-4577-8ac5-47f164af11af"],
Cell[391286, 8179, 1536, 44, 133, "Input",ExpressionUUID->"411b4aa5-e580-4550-b144-3d7bccb52a3a"],
Cell[392825, 8225, 1253, 32, 113, "Input",ExpressionUUID->"77ce739b-bb11-48f3-b592-5872a627b5b2"],
Cell[CellGroupData[{
Cell[394103, 8261, 1579, 42, 154, "Input",ExpressionUUID->"a3d5bc92-a40f-425e-9f07-8e0c6e9e50ba"],
Cell[395685, 8305, 819, 25, 72, "Echo",ExpressionUUID->"0e077e1f-6fea-44b4-8602-a95a38363437"],
Cell[396507, 8332, 32045, 608, 449, "Output",ExpressionUUID->"29e5b09c-db72-422e-b01a-8fe76a3a88c4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[428613, 8947, 166, 3, 32, "Item",ExpressionUUID->"f13dd67f-a4d0-4811-8654-f2de7b2fe078"],
Cell[428782, 8952, 3613, 96, 525, "Input",ExpressionUUID->"e51b1b8c-3a3b-4938-b29a-5da4e64aa9d8"],
Cell[432398, 9050, 399, 9, 29, "Input",ExpressionUUID->"f7c761a7-fef4-4ddd-b5b9-e3d8a51b0e38"],
Cell[432800, 9061, 638, 14, 113, "Input",ExpressionUUID->"6836538a-5c2f-4520-95da-202a4d41038f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

