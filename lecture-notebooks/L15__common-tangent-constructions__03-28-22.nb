(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    367202,       7031]
NotebookOptionsPosition[    355493,       6821]
NotebookOutlinePosition[    356839,       6853]
CellTagsIndexPosition[    356758,       6848]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["3.029 Spring 2022\[LineSeparator]Lecture 15 - 03/28/2022", "Subtitle",
 CellChangeTimes->{{3.8525512993398438`*^9, 3.8525513206118402`*^9}, {
   3.852652054138073*^9, 3.8526520591301193`*^9}, {3.853194369726288*^9, 
   3.8531943739664793`*^9}, 3.8531971130005827`*^9, {3.853361889945813*^9, 
   3.853361893353859*^9}, {3.854455749568426*^9, 3.8544557604776297`*^9}, {
   3.8545621484661007`*^9, 3.8545621501697083`*^9}, {3.85499650158072*^9, 
   3.854996504060568*^9}, {3.855176893175762*^9, 3.855176906151746*^9}, {
   3.855604699389501*^9, 3.855604707177799*^9}, {3.85582102333785*^9, 
   3.855821026740013*^9}, {3.8561799930634317`*^9, 3.8561800234790487`*^9}, {
   3.85637308472639*^9, 3.856373086934021*^9}, {3.856876646984232*^9, 
   3.85687665146917*^9}},ExpressionUUID->"85a29b7c-63a2-48ec-8ebe-\
120fbc1cd92d"],

Cell[CellGroupData[{

Cell["Chemical Potential Common Tangent", "Chapter",
 CellChangeTimes->{{3.852551340964005*^9, 3.852551346980482*^9}, 
   3.8526520737398577`*^9, {3.853194378006518*^9, 3.853194381142681*^9}, {
   3.853361935778483*^9, 3.853361942498363*^9}, {3.854456274982847*^9, 
   3.854456277927383*^9}, {3.8544565045315533`*^9, 3.854456514672267*^9}, 
   3.854562160779923*^9, {3.854996506556843*^9, 3.854996508477077*^9}, {
   3.854996641253805*^9, 3.854996643918687*^9}, {3.855604708758831*^9, 
   3.855604727103332*^9}, {3.855660670350954*^9, 3.855660672414981*^9}, {
   3.8558210308839273`*^9, 3.8558210389988337`*^9}, {3.856180026750667*^9, 
   3.856180028663183*^9}, {3.8563730901501093`*^9, 3.856373091878005*^9}, {
   3.8568766564578753`*^9, 
   3.8568766633937473`*^9}},ExpressionUUID->"e7fd79cd-4443-4448-a8c7-\
e2715a29613c"],

Cell[CellGroupData[{

Cell["\<\
Last lecture, we introduced partial molar quantities, and the \
tangent-intercept rule\
\>", "Item",
 CellChangeTimes->{{3.85637353525263*^9, 3.8563735921372833`*^9}, {
  3.856876681769505*^9, 
  3.856876704847982*^9}},ExpressionUUID->"0a8145a1-7bd3-4650-ae08-\
5377d29566cf"],

Cell["\<\
In particular we saw how the chemical potential can be obtained graphically \
from molar free energy plots\
\>", "Subitem",
 CellChangeTimes->{{3.85637353525263*^9, 3.856373564586499*^9}, {
  3.85637359663395*^9, 3.856373613349485*^9}, {3.856876710077532*^9, 
  3.856876732987672*^9}},ExpressionUUID->"99e12831-c739-4803-9af6-\
9a31259a7d72"]
}, Open  ]],

Cell["\<\
In this lecture, we will investigate miscibility gaps using the \
common-tangent construction\
\>", "Item",
 CellChangeTimes->{{3.85637353525263*^9, 3.856373564586499*^9}, {
  3.85637359663395*^9, 3.856373673669291*^9}, {3.8568767486934013`*^9, 
  3.8568767513793383`*^9}, {3.8568767984177713`*^9, 
  3.856876821530841*^9}},ExpressionUUID->"39066005-caf0-48c4-96df-\
1479c43c26ef"],

Cell[CellGroupData[{

Cell["Solution Models Overview", "Section",
 CellChangeTimes->{{3.8564567887493477`*^9, 3.8564567917244177`*^9}, {
  3.8564568468484173`*^9, 3.856456847738762*^9}, {3.856457866204562*^9, 
  3.856457870129093*^9}},ExpressionUUID->"5063ea6c-044f-485d-9578-\
67111fcdfbb3"],

Cell["\<\
Recall the molar GIbbs Free Energy of mixing for an ideal solution, is given \
simply by the configurational entropy\
\>", "Item",
 CellChangeTimes->{{3.856456848777323*^9, 
  3.856456914292417*^9}},ExpressionUUID->"c49fdc5e-4e09-4ab1-af8a-\
02a5759e8b20"],

Cell[BoxData[
 RowBox[{"\t", 
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[CapitalDelta]", 
         SubsuperscriptBox[
          UnderscriptBox[
           StyleBox["G", "TI"], "_"], 
          StyleBox["mix", FontSlant -> "Plain"], 
          StyleBox["ideal", FontSlant -> "Plain"]], "\[LongEqual]", "-", 
         StyleBox["T", "TI"], "\[CapitalDelta]", 
         SubscriptBox[
          UnderscriptBox[
           StyleBox["S", "TI"], "_"], 
          StyleBox["mix", FontSlant -> "Plain"]]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "\\Delta \\underline{G}_{\\mathrm{mix}}^{\\mathrm{ideal}} = - T \\Delta \
\\underline{S}_{\\mathrm{mix}}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "\[LineSeparator]", "\t", 
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[CapitalDelta]", 
         SubsuperscriptBox[
          UnderscriptBox[
           StyleBox["G", "TI"], "_"], 
          StyleBox["mix", FontSlant -> "Plain"], 
          StyleBox["ideal", FontSlant -> "Plain"]], "\[LongEqual]", 
         StyleBox["R", "TI"], 
         StyleBox["T", "TI"], 
         RowBox[{"[", 
           RowBox[{
             StyleBox["x", "TI"], "log", 
             StyleBox["x", "TI"], "+", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 StyleBox["x", "TI"]}], ")"}], "log", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 StyleBox["x", "TI"]}], ")"}]}], "]"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "\\Delta \\underline{G}_{\\mathrm{mix}}^{\\mathrm{ideal}} = R T \\left \
[x \\log x + \\left(1-x \\right) \\log \\left(1-x\\right) \\right]", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"]}]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.7735647893570647`*^9, 3.7735647902824917`*^9}, {
   3.7735660158612933`*^9, 3.773566016706119*^9}, {3.7735676244674263`*^9, 
   3.773567625284314*^9}, {3.7735678890224657`*^9, 3.773567891494249*^9}, {
   3.7735683430528593`*^9, 3.7735683437834396`*^9}, 3.773724600013646*^9, {
   3.853362665796761*^9, 3.853362666140524*^9}, {3.8533633046775913`*^9, 
   3.8533633120769987`*^9}, 3.853753756131023*^9, 3.8537540469197702`*^9, {
   3.853845341671569*^9, 3.8538453442330313`*^9}, {3.856374420720639*^9, 
   3.856374437234189*^9}, 3.856374787461862*^9, 3.856374915535125*^9, 
   3.8563753956491117`*^9, 3.856376013709388*^9, 3.856378704576075*^9, 
   3.8563791026258717`*^9, {3.856379748987887*^9, 3.85637975853432*^9}, 
   3.8563806752483473`*^9, {3.856380733131955*^9, 3.856380749826585*^9}, 
   3.856383216504706*^9, 3.8563850847030373`*^9, 3.856385370922572*^9, 
   3.856385647963335*^9, {3.856385804112977*^9, 3.856385807263814*^9}, 
   3.856456932475713*^9, {3.856456981196165*^9, 3.856457006843153*^9}, 
   3.85645705325445*^9},
 FontSize->18,
 CellTags->
  "eq:van-der-waals",ExpressionUUID->"4ce60f54-1605-4e9c-baa2-5fedc8dfa8ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"molarGibbsEnergy", "[", "\"\<Ideal\>\"", "]"}], "[", 
     RowBox[{"T_", ",", 
      RowBox[{"R_", ":", "8.314"}]}], "]"}], "[", "xB_", "]"}], "=", 
   RowBox[{"R", " ", "T", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "xB"}], ")"}], " ", 
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", "xB"}], "]"}]}], "+", 
      RowBox[{"xB", " ", 
       RowBox[{"Log", "[", "xB", "]"}]}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.856457421417231*^9, 3.856457448653925*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"952e7a9f-4988-448a-a7a9-4577a6eba8e2"],

Cell["\<\
Similarly for the regular solution, we introduce an enthalpic contribution\
\>", "Item",
 CellChangeTimes->{{3.85645701362176*^9, 3.85645702434079*^9}, {
  3.856457060939459*^9, 
  3.85645707684127*^9}},ExpressionUUID->"0e6317c5-ecb1-46cc-87d7-\
b327d4b8e8b7"],

Cell[BoxData[
 RowBox[{"\t", 
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[CapitalDelta]", 
         SubsuperscriptBox[
          UnderscriptBox[
           StyleBox["G", "TI"], "_"], 
          StyleBox["mix", FontSlant -> "Plain"], 
          StyleBox["regular", FontSlant -> "Plain"]], "\[LongEqual]", 
         "\[CapitalDelta]", 
         SubscriptBox[
          UnderscriptBox[
           StyleBox["H", "TI"], "_"], 
          StyleBox["mix", FontSlant -> "Plain"]], "-", 
         StyleBox["T", "TI"], "\[CapitalDelta]", 
         SubscriptBox[
          UnderscriptBox[
           StyleBox["S", "TI"], "_"], 
          StyleBox["mix", FontSlant -> "Plain"]]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "\\Delta \\underline{G}_{\\mathrm{mix}}^{\\mathrm{regular}} = \\Delta \
\\underline{H}_{\\mathrm{mix}} - T \\Delta \\underline{S}_{\\mathrm{mix}}", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "\[LineSeparator]", "\t", 
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[CapitalDelta]", 
         SubsuperscriptBox[
          UnderscriptBox[
           StyleBox["G", "TI"], "_"], 
          StyleBox["mix", FontSlant -> "Plain"], 
          StyleBox["regular", FontSlant -> "Plain"]], "\[LongEqual]", 
         StyleBox["R", "TI"], 
         StyleBox["T", "TI"], 
         RowBox[{"[", 
           RowBox[{
             StyleBox["x", "TI"], "log", 
             StyleBox["x", "TI"], "+", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 StyleBox["x", "TI"]}], ")"}], "log", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 StyleBox["x", "TI"]}], ")"}]}], "]"}], "+", "\[Omega]", 
         RowBox[{"(", 
           RowBox[{"1", "-", 
             StyleBox["x", "TI"]}], ")"}], 
         StyleBox["x", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\Delta \\underline{G}_{\\mathrm{mix}}^{\\mathrm{regular}} = R T \\left \
[x \\log x + \\left(1-x \\right) \\log \\left(1-x\\right) \\right] + \\omega \
(1-x)x", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], " "}]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.7735647893570647`*^9, 3.7735647902824917`*^9}, {
   3.7735660158612933`*^9, 3.773566016706119*^9}, {3.7735676244674263`*^9, 
   3.773567625284314*^9}, {3.7735678890224657`*^9, 3.773567891494249*^9}, {
   3.7735683430528593`*^9, 3.7735683437834396`*^9}, 3.773724600013646*^9, {
   3.853362665796761*^9, 3.853362666140524*^9}, {3.8533633046775913`*^9, 
   3.8533633120769987`*^9}, 3.853753756131023*^9, 3.8537540469197702`*^9, {
   3.853845341671569*^9, 3.8538453442330313`*^9}, {3.856374420720639*^9, 
   3.856374437234189*^9}, 3.856374787461862*^9, 3.856374915535125*^9, 
   3.8563753956491117`*^9, 3.856376013709388*^9, 3.856378704576075*^9, 
   3.8563791026258717`*^9, {3.856379748987887*^9, 3.85637975853432*^9}, 
   3.8563806752483473`*^9, {3.856380733131955*^9, 3.856380749826585*^9}, 
   3.856383216504706*^9, 3.8563850847030373`*^9, 3.856385370922572*^9, 
   3.856385647963335*^9, {3.856385804112977*^9, 3.856385807263814*^9}, 
   3.856456932475713*^9, {3.856456981196165*^9, 3.856457006843153*^9}, 
   3.85645705325445*^9, {3.8564571111772842`*^9, 3.856457139209527*^9}, 
   3.856457177332877*^9, {3.856457258536426*^9, 3.8564572719657373`*^9}},
 FontSize->18,
 CellTags->
  "eq:van-der-waals",ExpressionUUID->"a1d22062-7550-43e8-8711-41b5831d420d"],

Cell[CellGroupData[{

Cell[TextData[{
 "Where we\[CloseCurlyQuote]ve introduced the ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[Omega]", "\[LongEqual]", 
         StyleBox["z", "TI"], 
         RowBox[{"(", 
           RowBox[{
             SubscriptBox[
              StyleBox["E", "TI"], 
              RowBox[{
                StyleBox["A", "TI"], 
                StyleBox["A", "TI"]}]], "+", 
             SubscriptBox[
              StyleBox["E", "TI"], 
              RowBox[{
                StyleBox["B", "TI"], 
                StyleBox["B", "TI"]}]], "-", "2", 
             SubscriptBox[
              StyleBox["E", "TI"], 
              RowBox[{
                StyleBox["A", "TI"], 
                StyleBox["B", "TI"]}]]}], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "\\omega = z \\left( E_{AA} + E_{BB} - 2 E_{AB} \\right)", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c3543fc6-ba03-4e18-b53c-ae06fa4ef969"],
 " factor we saw last lecture"
}], "Subitem",
 CellChangeTimes->{{3.856457181115168*^9, 3.856457202968961*^9}, {
  3.856876854757278*^9, 
  3.856876873696433*^9}},ExpressionUUID->"508c0a86-85ca-49e1-9763-\
26fe938e5253"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"molarGibbsEnergy", "[", "\"\<Regular\>\"", "]"}], "[", 
     RowBox[{"\[Omega]_", ",", "T_", ",", 
      RowBox[{"R_", ":", "8.314"}]}], "]"}], "[", "xB_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "xB"}], ")"}], " ", "xB", " ", "\[Omega]"}], "+", 
    RowBox[{"R", " ", "T", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "xB"}], ")"}], " ", 
        RowBox[{"Log", "[", 
         RowBox[{"1", "-", "xB"}], "]"}]}], "+", 
       RowBox[{"xB", " ", 
        RowBox[{"Log", "[", "xB", "]"}]}]}], ")"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.856457390610367*^9, 3.8564574146610518`*^9}, {
  3.856457453250856*^9, 3.856457459796372*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"90e171ba-23fb-4445-b101-84409817598d"]
}, Open  ]],

Cell["\<\
Finally, for a general solution model - we additionally introduce activity \
coefficients in the configurational entropy\
\>", "Item",
 CellChangeTimes->{{3.856457220200642*^9, 
  3.856457242187159*^9}},ExpressionUUID->"8955f43a-7af7-4c27-a9bf-\
a41a9ab1679c"],

Cell[BoxData[
 RowBox[{"\t", 
  TemplateBox[<|"boxes" -> FormBox[
      RowBox[{"\[CapitalDelta]", 
        SubsuperscriptBox[
         UnderscriptBox[
          StyleBox["G", "TI"], "_"], 
         StyleBox["mix", FontSlant -> "Plain"], 
         StyleBox["general", FontSlant -> "Plain"]], "\[LongEqual]", 
        StyleBox["R", "TI"], 
        StyleBox["T", "TI"], 
        RowBox[{"[", 
          RowBox[{
            StyleBox["x", "TI"], "log", 
            RowBox[{"(", 
              RowBox[{
                SubscriptBox["\[Gamma]", 
                 StyleBox["B", "TI"]], 
                StyleBox["x", "TI"]}], ")"}], "+", 
            RowBox[{"(", 
              RowBox[{"1", "-", 
                StyleBox["x", "TI"]}], ")"}], "log", 
            RowBox[{"(", 
              RowBox[{
                SubscriptBox["\[Gamma]", 
                 StyleBox["A", "TI"]], "(", 
                RowBox[{"1", "-", 
                  StyleBox["x", "TI"]}], ")"}], ")"}]}], "]"}], "+", 
        "\[Omega]", 
        RowBox[{"(", 
          RowBox[{"1", "-", 
            StyleBox["x", "TI"]}], ")"}], 
        StyleBox["x", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
    "\\Delta \\underline{G}_{\\mathrm{mix}}^{\\mathrm{general}} = R T \\left \
[x \\log \\left( \\gamma_B x\\right) + \\left(1-x \\right) \\log \
\\left(\\gamma_A \\left(1-x\\right) \\right) \\right] + \\omega (1-x)x", 
    "state" -> "Boxes"|>,
   "TeXAssistantTemplate"]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.7735647893570647`*^9, 3.7735647902824917`*^9}, {
   3.7735660158612933`*^9, 3.773566016706119*^9}, {3.7735676244674263`*^9, 
   3.773567625284314*^9}, {3.7735678890224657`*^9, 3.773567891494249*^9}, {
   3.7735683430528593`*^9, 3.7735683437834396`*^9}, 3.773724600013646*^9, {
   3.853362665796761*^9, 3.853362666140524*^9}, {3.8533633046775913`*^9, 
   3.8533633120769987`*^9}, 3.853753756131023*^9, 3.8537540469197702`*^9, {
   3.853845341671569*^9, 3.8538453442330313`*^9}, {3.856374420720639*^9, 
   3.856374437234189*^9}, 3.856374787461862*^9, 3.856374915535125*^9, 
   3.8563753956491117`*^9, 3.856376013709388*^9, 3.856378704576075*^9, 
   3.8563791026258717`*^9, {3.856379748987887*^9, 3.85637975853432*^9}, 
   3.8563806752483473`*^9, {3.856380733131955*^9, 3.856380749826585*^9}, 
   3.856383216504706*^9, 3.8563850847030373`*^9, 3.856385370922572*^9, 
   3.856385647963335*^9, {3.856385804112977*^9, 3.856385807263814*^9}, 
   3.856456932475713*^9, {3.856456981196165*^9, 3.856457006843153*^9}, 
   3.85645705325445*^9, {3.8564571111772842`*^9, 3.856457139209527*^9}, 
   3.856457177332877*^9, {3.856457258536426*^9, 3.8564572719657373`*^9}, 
   3.856457368357592*^9},
 FontSize->18,
 CellTags->
  "eq:van-der-waals",ExpressionUUID->"a6e3f743-95dd-46d3-b698-8a4ef29dd9d1"],

Cell[CellGroupData[{

Cell["\<\
This allows us to introduce asymmetric molar Free energies w/ different \
chemical potentials of the pure compounds\
\>", "Subitem",
 CellChangeTimes->{{3.8564567928978987`*^9, 3.85645681987466*^9}, {
  3.8568768927325373`*^9, 
  3.856876939331519*^9}},ExpressionUUID->"d9765f0e-e0bf-475c-8395-\
720c7fbb6cf5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"molarGibbsEnergy", "[", "\"\<General\>\"", "]"}], "[", 
     RowBox[{
     "\[Gamma]A_", ",", "\[Gamma]B_", ",", "\[Omega]_", ",", "T_", ",", 
      RowBox[{"R_", ":", "8.314"}]}], "]"}], "[", "xB_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "xB"}], ")"}], " ", "xB", " ", "\[Omega]"}], "+", 
    RowBox[{"R", " ", "T", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "xB"}], ")"}], " ", 
        RowBox[{"Log", "[", 
         RowBox[{"\[Gamma]A", 
          RowBox[{"(", 
           RowBox[{"1", "-", "xB"}], ")"}]}], "]"}]}], "+", 
       RowBox[{"xB", " ", 
        RowBox[{"Log", "[", 
         RowBox[{"\[Gamma]B", " ", "xB"}], "]"}]}]}], ")"}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.856457469778426*^9, 3.85645750158048*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"ad989793-3ec0-452f-a7be-8ed4c9146224"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"molarGibbsEnergy", "[", "\"\<Ideal\>\"", "]"}], "[", 
         "temperature", "]"}], "[", "xB", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"molarGibbsEnergy", "[", "\"\<Regular\>\"", "]"}], "[", 
         RowBox[{"\[Omega]", ",", "temperature"}], "]"}], "[", "xB", "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"molarGibbsEnergy", "[", "\"\<General\>\"", "]"}], "[", 
         RowBox[{
         "\[Gamma]A", ",", "\[Gamma]B", ",", "\[Omega]", ",", "temperature"}],
          "]"}], "[", "xB", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"xB", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Thread", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Red", ",", "Blue", ",", "Black"}], "}"}], ",", "Thick"}], 
        "}"}], "]"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "550"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"LineLegend", "[", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Ideal Solution Model\>\"", ",", 
          "\"\<Regular Solution Model\>\"", ",", 
          "\"\<General Solution Model\>\""}], "}"}]}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Mole Fraction B, \!\(\*SubscriptBox[\(x\), \(B\)]\)\>\"", ",", 
        "\"\<Molar Gibbs Energy, \!\(\*UnderscriptBox[\(G\), \(_\)]\)\>\""}], 
       "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"temperature", ",", "1"}], "}"}], ",", ".001", ",", "1"}], 
    "}"}], ",", "\[IndentingNewLine]", "Delimiter", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", "1"}], "}"}], ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", "\[IndentingNewLine]", 
   "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Gamma]A", ",", "0.8"}], "}"}], ",", "0.5", ",", "1.5"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Gamma]B", ",", "1.2"}], "}"}], ",", "0.5", ",", "1.5"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Paneled", "\[Rule]", "False"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.856457549885662*^9, 3.8564578108229523`*^9}, 
   3.856866249201926*^9},
 CellLabel->
  "In[160]:=",ExpressionUUID->"e53b4186-7418-4599-8cd3-7fd17c38e566"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`temperature$$ = 
    1, $CellContext`\[Gamma]A$$ = 0.8, $CellContext`\[Gamma]B$$ = 
    1.2, $CellContext`\[Omega]$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`temperature$$], 1}, 0.001, 1}, {{
       Hold[$CellContext`\[Omega]$$], 1}, -5, 5}, {{
       Hold[$CellContext`\[Gamma]A$$], 0.8}, 0.5, 1.5}, {{
       Hold[$CellContext`\[Gamma]B$$], 1.2}, 0.5, 1.5}}, Typeset`size$$ = {
    759., {176., 181.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`temperature$$ = 
        1, $CellContext`\[Gamma]A$$ = 0.8, $CellContext`\[Gamma]B$$ = 
        1.2, $CellContext`\[Omega]$$ = 1}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`molarGibbsEnergy[
         "Ideal"][$CellContext`temperature$$][$CellContext`xB], 
         $CellContext`molarGibbsEnergy[
         "Regular"][$CellContext`\[Omega]$$, \
$CellContext`temperature$$][$CellContext`xB], 
         $CellContext`molarGibbsEnergy[
         "General"][$CellContext`\[Gamma]A$$, $CellContext`\[Gamma]B$$, \
$CellContext`\[Omega]$$, $CellContext`temperature$$][$CellContext`xB]}, \
{$CellContext`xB, 0, 1}, PlotStyle -> Thread[{{Red, Blue, Black}, Thick}], 
        Frame -> True, LabelStyle -> Directive[Black, 16], ImageSize -> 550, 
        PlotLegends -> 
        LineLegend[
         Automatic, {
          "Ideal Solution Model", "Regular Solution Model", 
           "General Solution Model"}], 
        FrameLabel -> {
         "Mole Fraction B, \!\(\*SubscriptBox[\(x\), \(B\)]\)", 
          "Molar Gibbs Energy, \!\(\*UnderscriptBox[\(G\), \(_\)]\)"}], 
      "Specifications" :> {{{$CellContext`temperature$$, 1}, 0.001, 1}, 
        Delimiter, {{$CellContext`\[Omega]$$, 1}, -5, 5}, 
        Delimiter, {{$CellContext`\[Gamma]A$$, 0.8}, 0.5, 
         1.5}, {{$CellContext`\[Gamma]B$$, 1.2}, 0.5, 1.5}}, 
      "Options" :> {Paneled -> False}, "DefaultOptions" :> {}],
     ImageSizeCache->{779., {260.1875, 265.8125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`molarGibbsEnergy["Ideal"][
         Pattern[$CellContext`T, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`R, 
           Blank[]], 8.314]][
         Pattern[$CellContext`xB, 
          Blank[]]] = $CellContext`R $CellContext`T ((1 - $CellContext`xB) 
          Log[1 - $CellContext`xB] + $CellContext`xB 
          Log[$CellContext`xB]), $CellContext`molarGibbsEnergy["Regular"][
         Pattern[$CellContext`\[Omega], 
          Blank[]], 
         Pattern[$CellContext`T, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`R, 
           Blank[]], 8.314]][
         Pattern[$CellContext`xB, 
          Blank[]]] = (
          1 - $CellContext`xB) $CellContext`xB $CellContext`\[Omega] + \
$CellContext`R $CellContext`T ((1 - $CellContext`xB) 
           Log[1 - $CellContext`xB] + $CellContext`xB 
           Log[$CellContext`xB]), $CellContext`molarGibbsEnergy["Regular"][
         Pattern[$CellContext`\[Gamma]A, 
          Blank[]], 
         Pattern[$CellContext`\[Gamma]B, 
          Blank[]], 
         Pattern[$CellContext`\[Omega], 
          Blank[]], 
         Pattern[$CellContext`T, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`R, 
           Blank[]], 8.314]][
         Pattern[$CellContext`xB, 
          Blank[]]] = (
          1 - $CellContext`xB) $CellContext`xB $CellContext`\[Omega] + \
$CellContext`R $CellContext`T ((1 - $CellContext`xB) 
           Log[(
              1 - $CellContext`xB) $CellContext`\[Gamma]A] + $CellContext`xB 
           Log[$CellContext`xB $CellContext`\[Gamma]B]), \
$CellContext`molarGibbsEnergy["General"][
         Pattern[$CellContext`\[Gamma]A, 
          Blank[]], 
         Pattern[$CellContext`\[Gamma]B, 
          Blank[]], 
         Pattern[$CellContext`\[Omega], 
          Blank[]], 
         Pattern[$CellContext`T, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`R, 
           Blank[]], 8.314]][
         Pattern[$CellContext`xB, 
          Blank[]]] = (
          1 - $CellContext`xB) $CellContext`xB $CellContext`\[Omega] + \
$CellContext`R $CellContext`T ((1 - $CellContext`xB) 
           Log[(1 - $CellContext`xB) $CellContext`\[Gamma]A] + \
$CellContext`xB Log[$CellContext`xB $CellContext`\[Gamma]B])}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.856457675423616*^9, 3.856457743024412*^9}, {
   3.856457779228714*^9, 3.856457811084856*^9}, 3.8568662497600403`*^9, {
   3.856875821748414*^9, 3.856875849597477*^9}, 3.856881370635153*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"0a53e441-8ad2-45e7-aece-a3f9ba4b6018"]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Common Tangent Construction", "Section",
 CellChangeTimes->{{3.8568769516758966`*^9, 
  3.856876957319303*^9}},ExpressionUUID->"d463c09f-8e72-4701-b936-\
94a195265394"],

Cell[CellGroupData[{

Cell["\<\
Adding enthalpic contributions in  the regular and general solution models \
above introduces a competition between the configuration entropy at low \
temperatures, manifesting in the loss of convexity\
\>", "Item",
 CellChangeTimes->{{3.856876960454816*^9, 3.856877051468769*^9}, 
   3.856877182328566*^9},ExpressionUUID->"8f5a63ad-71a6-4836-8f73-\
1997ba9ee3e3"],

Cell["\<\
As we\[CloseCurlyQuote]ve seen before a loss of convexity in thermodynamic \
potentials suggests a phase transition\
\>", "Subitem",
 CellChangeTimes->{{3.856876960454816*^9, 
  3.856877078886392*^9}},ExpressionUUID->"15aee468-c3d8-48d2-8ff5-\
a0c790ed141d"]
}, Open  ]],

Cell["\<\
In particular, this introduces a range of compositions where the free energy \
of a single homogeneous solution is higher than the weighted-average of the \
mechanical mixture of two solutions with the same average composition\
\>", "Item",
 CellChangeTimes->{{3.856876960454816*^9, 3.856877045376951*^9}, {
  3.856877079904628*^9, 
  3.85687712288941*^9}},ExpressionUUID->"982d49c1-e597-4c1b-9788-\
12c07bbf7325"],

Cell["\<\
As such, the homogenous solution separates into two homogenous solutions with \
different compositions each to reach equilibrium\
\>", "Item",
 CellChangeTimes->{{3.856876960454816*^9, 3.856877045376951*^9}, {
  3.856877079904628*^9, 3.85687713696253*^9}, {3.856877183890114*^9, 
  3.856877184261649*^9}},ExpressionUUID->"8975b716-77c8-4871-b0f2-\
105e439b924e"],

Cell[CellGroupData[{

Cell["\<\
At a single temperature, these limiting compositions can be computed with the \
common tangent construction\
\>", "Item",
 CellChangeTimes->{{3.856876960454816*^9, 3.856877036546154*^9}, 
   3.856877106429901*^9, {3.8568771439726553`*^9, 
   3.85687718590055*^9}},ExpressionUUID->"74e66a60-969e-4446-a2a0-\
12a8b1fd75ff"],

Cell["\<\
Repeating the construction over a range of temperature represents the \
miscibility gap\[LongDash]boundary of the two-phase region\
\>", "Subitem",
 CellChangeTimes->{{3.856876960454816*^9, 3.856877036546154*^9}, 
   3.856877106429901*^9, {3.8568771439726553`*^9, 
   3.856877189310523*^9}},ExpressionUUID->"8c3c7ef6-4386-4be9-aa3f-\
d95e23c14696"]
}, Open  ]],

Cell["\<\
Similar to L05 and P02, we will compute the common tangent construction \
numerically using FindRoot and the appropriate equations\
\>", "Item",
 CellChangeTimes->{{3.856877231998987*^9, 
  3.856877296237759*^9}},ExpressionUUID->"577be190-c649-4dd7-bed1-\
bfe8c6701d7e"],

Cell[BoxData[
 RowBox[{"\t", 
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox["\[Mu]", 
          StyleBox["A", "TI"]], 
         RowBox[{"(", 
           SubsuperscriptBox[
            StyleBox["x", "TI"], 
            StyleBox["B", "TI"], 
            StyleBox["A", "TI"]], ")"}], "\[LongEqual]", 
         SubscriptBox["\[Mu]", 
          StyleBox["A", "TI"]], 
         RowBox[{"(", 
           SubsuperscriptBox[
            StyleBox["x", "TI"], 
            StyleBox["B", "TI"], 
            StyleBox["B", "TI"]], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\mu_A(x_B^{A}) = \\mu_A(x_B^{B})", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "\[LineSeparator]", "\t", 
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          RowBox[{
            FractionBox[
             RowBox[{"\[PartialD]", 
               UnderscriptBox[
                StyleBox["G", "TI"], "_"]}], 
             RowBox[{"\[PartialD]", 
               StyleBox["x", "TI"]}]], "\[VerticalSeparator]"}], 
          RowBox[{
            StyleBox["x", "TI"], "\[LongEqual]", 
            SubsuperscriptBox[
             StyleBox["x", "TI"], 
             StyleBox["B", "TI"], 
             StyleBox["A", "TI"]]}]], "\[LongEqual]", 
         SubscriptBox[
          RowBox[{
            FractionBox[
             RowBox[{"\[PartialD]", 
               UnderscriptBox[
                StyleBox["G", "TI"], "_"]}], 
             RowBox[{"\[PartialD]", 
               StyleBox["x", "TI"]}]], "\[VerticalSeparator]"}], 
          RowBox[{
            StyleBox["x", "TI"], "\[LongEqual]", 
            SubsuperscriptBox[
             StyleBox["x", "TI"], 
             StyleBox["B", "TI"], 
             StyleBox["B", "TI"]]}]]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "\\left.\\frac{\\partial \\underline{G}}{\\partial x}\\right|_{x = \
x_B^A} = \\left.\\frac{\\partial \\underline{G}}{\\partial x}\\right|_{x = \
x_B^B}}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"]}]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.7735647893570647`*^9, 3.7735647902824917`*^9}, {
   3.7735660158612933`*^9, 3.773566016706119*^9}, {3.7735676244674263`*^9, 
   3.773567625284314*^9}, {3.7735678890224657`*^9, 3.773567891494249*^9}, {
   3.7735683430528593`*^9, 3.7735683437834396`*^9}, 3.773724600013646*^9, {
   3.853362665796761*^9, 3.853362666140524*^9}, {3.8533633046775913`*^9, 
   3.8533633120769987`*^9}, 3.853753756131023*^9, 3.8537540469197702`*^9, {
   3.853845341671569*^9, 3.8538453442330313`*^9}, {3.856374420720639*^9, 
   3.856374437234189*^9}, 3.856374787461862*^9, 3.856374915535125*^9, 
   3.8563753956491117`*^9, 3.856376013709388*^9, 3.856378704576075*^9, 
   3.8563791026258717`*^9, {3.856379748987887*^9, 3.85637975853432*^9}, 
   3.8563806752483473`*^9, {3.856380733131955*^9, 3.856380749826585*^9}, {
   3.856877524588386*^9, 3.85687752907246*^9}, 3.856877583128718*^9, {
   3.856877682567892*^9, 3.856877697746252*^9}, {3.8568809242846107`*^9, 
   3.856880950024741*^9}},
 FontSize->18,
 CellTags->
  "eq:van-der-waals",ExpressionUUID->"272d3e93-cf45-4f63-9290-6aeda2a5d4c1"],

Cell[CellGroupData[{

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubsuperscriptBox[
        StyleBox["x", "TI"], 
        StyleBox["B", "TI"], 
        RowBox[{
          StyleBox["A", "TI"], "/", 
          StyleBox["B", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "x_B^{A/B}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "9f3e4d10-cbd2-477d-b8dc-785a270e2ec4"],
 " are the two limiting compositions of the miscibility gap on the A-rich and \
B-rich phases"
}], "Subitem",
 CellChangeTimes->{{3.856877592085226*^9, 3.8568776303226767`*^9}, {
  3.856880961768955*^9, 
  3.856880968301221*^9}},ExpressionUUID->"a7428b92-000b-451d-95d1-\
0b637329f94c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"chemicalPotentialA", "[", "\"\<General\>\"", "]"}], "[", 
     RowBox[{
     "\[Gamma]A_", ",", "\[Gamma]B_", ",", "\[Omega]_", ",", "T_", ",", 
      RowBox[{"R_", ":", "8.314"}]}], "]"}], "[", "xB_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"molarGibbsEnergy", "[", "\"\<General\>\"", "]"}], "[", 
      RowBox[{
      "\[Gamma]A", ",", "\[Gamma]B", ",", "\[Omega]", ",", "T", ",", "R"}], 
      "]"}], "[", "xB", "]"}], "-", 
    RowBox[{"xB", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"molarGibbsEnergy", "[", "\"\<General\>\"", "]"}], "[", 
        RowBox[{
        "\[Gamma]A", ",", "\[Gamma]B", ",", "\[Omega]", ",", "T", ",", "R"}], 
        "]"}], "'"}], "[", "xB", "]"}]}]}]}], ";"}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"64ce45f7-a48f-40bd-ae5e-60ed5232683d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
First, we want to check if the function indeed loses convexity\
\>", "Item",
 CellChangeTimes->{{3.856877928720924*^9, 
  3.856877944545801*^9}},ExpressionUUID->"2102d5f5-0a5c-4712-a36a-\
9abfc12e1d67"],

Cell[CellGroupData[{

Cell["We\[CloseCurlyQuote]ll use a built-in function we introduced in L06", \
"Subitem",
 CellChangeTimes->{{3.856877928720924*^9, 
  3.8568779561375017`*^9}},ExpressionUUID->"83d6ee52-dc29-4be8-ad37-\
d7b67710b253"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"convexQ", "[", "modelName_", "]"}], "[", "params__", "]"}], ":=", 
  
  RowBox[{
   RowBox[{"FunctionConvexity", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"molarGibbsEnergy", "[", "modelName", "]"}], "[", "params", 
         "]"}], "[", "xB", "]"}], ",", 
       RowBox[{"1", ">", "xB", ">", "0"}]}], "}"}], ",", "xB"}], "]"}], "===",
    "1"}]}]], "Input",
 CellChangeTimes->{{3.856877969206739*^9, 3.8568780831990767`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"c336990b-229e-48c5-b58f-94d8ca381ef2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"convexQ", "[", "\"\<General\>\"", "]"}], "[", 
  RowBox[{"0.8", ",", "1.1", ",", 
   RowBox[{"-", "1"}], ",", "0.25"}], "]"}]], "Input",
 CellChangeTimes->{{3.856878049851316*^9, 3.856878087342848*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"9f1fc54b-2205-4c34-8010-1a85b9846e37"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.8568780587682867`*^9, 3.856878105065494*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"9de05b55-9b40-43e3-89b2-acbac407bc4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"convexQ", "[", "\"\<General\>\"", "]"}], "[", 
  RowBox[{"0.8", ",", "1.1", ",", "5", ",", "0.25"}], "]"}]], "Input",
 CellChangeTimes->{
  3.856878110217021*^9, {3.85687903294676*^9, 3.856879033120738*^9}, {
   3.856879264617733*^9, 3.856879264836488*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"44538659-e63e-4633-9e09-cc057aad1f9b"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.856878110403635*^9, 3.856879033382038*^9, 
  3.8568792650777607`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"44600bf0-9bff-4696-8ca4-5390506bd01a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
We\[CloseCurlyQuote]ll use a similar lookup-table approach for initial guesses\
\>", "Item",
 CellChangeTimes->{{3.856878116854703*^9, 
  3.856878130605424*^9}},ExpressionUUID->"21d599f4-006c-41f5-a1de-\
326eba90d05f"],

Cell[CellGroupData[{

Cell["\<\
But notice we now have a multidimensional coordinate space \
(\[Gamma]A,\[Gamma]B,\[Omega],T)\
\>", "Subitem",
 CellChangeTimes->{{3.856878116854703*^9, 
  3.856878161253606*^9}},ExpressionUUID->"03cf4e0c-f7e8-4ea0-a6fa-\
3ee2bc202f94"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"commonTangentConstruction", ",", "initialGuesses"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"initialGuesses", "[", "\"\<General\>\"", "]"}], "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.8", ",", "1.1", ",", "5", ",", "0.25"}], "}"}], "->", 
     RowBox[{"{", 
      RowBox[{"0.15", ",", "0.85"}], "}"}]}], "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"commonTangentConstruction", "[", "modelName_", "]"}], "[", 
   "params__", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"commonTangentConstruction", "[", "modelName", "]"}], "[", 
    "params", "]"}], "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"reversedGuesses", ",", "guessesX", ",", "sol"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"convexQ", "[", "modelName", "]"}], "[", "params", "]"}], 
        ",", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"molarGibbsEnergy", "[", "modelName", "]"}], "[", 
             "params", "]"}], "[", "xB", "]"}]}], "\[IndentingNewLine]", 
          "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"reversedGuesses", "=", 
       RowBox[{"AssociationMap", "[", 
        RowBox[{"Reverse", ",", 
         RowBox[{"initialGuesses", "[", "modelName", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"guessesX", "=", 
       RowBox[{"First", "[", 
        RowBox[{"Nearest", "[", 
         RowBox[{"reversedGuesses", ",", 
          RowBox[{"{", "params", "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"sol", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"chemicalPotentialA", "[", "modelName", "]"}], "[", 
               "params", "]"}], "[", "x1", "]"}], "==", 
             RowBox[{
              RowBox[{
               RowBox[{"chemicalPotentialA", "[", "modelName", "]"}], "[", 
               "params", "]"}], "[", "x2", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"molarGibbsEnergy", "[", "modelName", "]"}], "[", 
                "params", "]"}], "'"}], "[", "x1", "]"}], "==", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"molarGibbsEnergy", "[", "modelName", "]"}], "[", 
                "params", "]"}], "'"}], "[", "x2", "]"}]}]}], 
           "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"x1", ",", 
            RowBox[{"guessesX", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x2", ",", 
            RowBox[{"guessesX", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"AssociateTo", "[", 
       RowBox[{
        RowBox[{"initialGuesses", "[", "modelName", "]"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"{", "params", "}"}], "->", 
           RowBox[{"{", 
            RowBox[{"x1", ",", "x2"}], "}"}]}], ")"}], "/.", "sol"}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x1", ",", "x2"}], "}"}], "/.", "sol"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"molarGibbsEnergy", "[", "modelName", "]"}], "[", 
                 "params", "]"}], "[", "x1", "]"}], "+", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"molarGibbsEnergy", "[", "modelName", "]"}], "[", 
                   "params", "]"}], "'"}], "[", "x1", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{"xB", "-", "x1"}], ")"}]}]}], ",", 
              RowBox[{"x2", ">", "xB", ">", "x1"}]}], "}"}], "}"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"molarGibbsEnergy", "[", "modelName", "]"}], "[", 
             "params", "]"}], "[", "xB", "]"}]}], "]"}], "/.", "sol"}]}], 
       "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.856878455742208*^9, 3.8568786703907843`*^9}, {
   3.8568787104362383`*^9, 3.856878729472871*^9}, {3.856878818682334*^9, 
   3.856878895853006*^9}, {3.856878949702631*^9, 3.856878951206621*^9}, {
   3.85687905370218*^9, 3.8568790610698967`*^9}, {3.856879125526329*^9, 
   3.856879144740221*^9}, {3.8568791778033247`*^9, 3.8568792375299187`*^9}, {
   3.85687927367759*^9, 3.856879276500046*^9}, {3.856879661848545*^9, 
   3.856879680488497*^9}, 3.856879720512981*^9},
 CellLabel->"In[96]:=",ExpressionUUID->"bd97a70e-8bb0-4ce5-9a68-cc6a39da8128"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let\[CloseCurlyQuote]s see how this looks interactively!", "Item",
 CellChangeTimes->{{3.856879966314217*^9, 
  3.8568799896946983`*^9}},ExpressionUUID->"5dd09e11-019e-4619-a3de-\
baceac3dcaa3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pts", ",", "func"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pts", ",", "func"}], "}"}], "=", 
       RowBox[{
        RowBox[{"commonTangentConstruction", "[", "\"\<General\>\"", "]"}], 
        "[", 
        RowBox[{
        "\[Gamma]A", ",", "\[Gamma]B", ",", "\[Omega]", ",", "temperature"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"func", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"molarGibbsEnergy", "[", "\"\<General\>\"", "]"}], "[", 
            RowBox[{
            "\[Gamma]A", ",", "\[Gamma]B", ",", "\[Omega]", ",", 
             "temperature"}], "]"}], "[", "xB", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"xB", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"GridLines", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"pts", ",", "None"}], "}"}]}], ",", 
        RowBox[{"GridLinesStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Gray", ",", " ", "Dashed"}], "]"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"LabelStyle", "->", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "550"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"LineLegend", "[", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Common Tangent Construction\>\"", ",", 
             "\"\<General Solution Model\>\""}], "}"}]}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Mole Fraction B, \!\(\*SubscriptBox[\(x\), \(B\)]\)\>\"", ",", 
           "\"\<Molar Gibbs Energy, \!\(\*UnderscriptBox[\(G\), \
\(_\)]\)\>\""}], "}"}]}]}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"temperature", ",", "0.25"}], "}"}], ",", ".001", ",", "1"}], 
    "}"}], ",", "\[IndentingNewLine]", "Delimiter", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", "5"}], "}"}], ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", "\[IndentingNewLine]", 
   "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Gamma]A", ",", "0.8"}], "}"}], ",", "0.5", ",", "1.5"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Gamma]B", ",", "1.2"}], "}"}], ",", "0.5", ",", "1.5"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Paneled", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.856879303639604*^9, 3.8568794150986*^9}, {
  3.8568795098864117`*^9, 3.856879514527877*^9}, {3.856879549604577*^9, 
  3.85687958276005*^9}, {3.85687963225835*^9, 3.8568796424164133`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"82e95d8b-597b-4a53-a7bf-b041a618c2a2"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`temperature$$ = 
    0.25, $CellContext`\[Gamma]A$$ = 0.8, $CellContext`\[Gamma]B$$ = 
    1.2, $CellContext`\[Omega]$$ = 5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`temperature$$], 0.25}, 0.001, 1}, {{
       Hold[$CellContext`\[Omega]$$], 5}, -5, 5}, {{
       Hold[$CellContext`\[Gamma]A$$], 0.8}, 0.5, 1.5}, {{
       Hold[$CellContext`\[Gamma]B$$], 1.2}, 0.5, 1.5}}, Typeset`size$$ = {
    813., {172., 177.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`temperature$$ = 
        0.25, $CellContext`\[Gamma]A$$ = 0.8, $CellContext`\[Gamma]B$$ = 
        1.2, $CellContext`\[Omega]$$ = 5}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Block[{$CellContext`pts, $CellContext`func}, {$CellContext`pts, \
$CellContext`func} = $CellContext`commonTangentConstruction[
          "General"][$CellContext`\[Gamma]A$$, $CellContext`\[Gamma]B$$, \
$CellContext`\[Omega]$$, $CellContext`temperature$$]; Plot[{$CellContext`func, 
           $CellContext`molarGibbsEnergy[
           "General"][$CellContext`\[Gamma]A$$, $CellContext`\[Gamma]B$$, \
$CellContext`\[Omega]$$, $CellContext`temperature$$][$CellContext`xB]}, \
{$CellContext`xB, 0, 1}, GridLines -> {$CellContext`pts, None}, 
          GridLinesStyle -> Directive[Gray, Dashed], 
          PlotStyle -> {{Red, Thick}, {Black, Thick}}, Frame -> True, 
          LabelStyle -> Directive[Black, 16], ImageSize -> 550, PlotLegends -> 
          LineLegend[
           Automatic, {
            "Common Tangent Construction", "General Solution Model"}], 
          FrameLabel -> {
           "Mole Fraction B, \!\(\*SubscriptBox[\(x\), \(B\)]\)", 
            "Molar Gibbs Energy, \!\(\*UnderscriptBox[\(G\), \(_\)]\)"}]], 
      "Specifications" :> {{{$CellContext`temperature$$, 0.25}, 0.001, 1}, 
        Delimiter, {{$CellContext`\[Omega]$$, 5}, -5, 5}, 
        Delimiter, {{$CellContext`\[Gamma]A$$, 0.8}, 0.5, 
         1.5}, {{$CellContext`\[Gamma]B$$, 1.2}, 0.5, 1.5}}, 
      "Options" :> {Paneled -> False}, "DefaultOptions" :> {}],
     ImageSizeCache->{833., {256.1875, 261.8125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8568798162233143`*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"06cb2f22-698f-4f3d-a9ea-ce19d8bf2935"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["We can use this to construct a miscibility gap", "Item",
 CellChangeTimes->{{3.85688001484513*^9, 
  3.856880023144372*^9}},ExpressionUUID->"ca9f1c27-e7cb-485d-ad4b-\
6488952925f9"],

Cell[CellGroupData[{

Cell["\<\
I.e. concentrations for which the homogeneous solution phase-separates\
\>", "Subitem",
 CellChangeTimes->{{3.85688001484513*^9, 3.8568800557226553`*^9}, {
  3.8568809795306*^9, 
  3.856880982376172*^9}},ExpressionUUID->"32356a42-1a4e-4511-ae98-\
bb29857a1dd4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"Thread", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"commonTangentConstruction", "[", "\"\<General\>\"", "]"}],
            "[", 
           RowBox[{"0.8", ",", "1.1", ",", "5", ",", "#"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "}"}], "]"}], "]"}], 
     "&"}], "/@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0.25", ",", "0.3", ",", "0.0025"}], "]"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"0.25", "-", " ", "0.0025"}], ",", "0.15", ",", 
        RowBox[{"-", "0.0025"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "2"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Mole Fraction B, \!\(\*SubscriptBox[\(x\), \(B\)]\)\>\"", ",", 
      "\"\<Temperature, T\>\""}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.15", ",", "0.35"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotRangeClipping", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", "18"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.856880417739819*^9, 3.856880520127363*^9}, {
  3.856880655034123*^9, 3.856880679588489*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"8776d7b8-f8e4-47d2-94bb-d45b3d8c2a3d"],

Cell[BoxData[
 GraphicsBox[{
   LineBox[{{0.16910248204001577`, 0.25}, {0.8308975179599841, 0.25}}], 
   LineBox[{{0.1761427003196921, 0.2525}, {0.8238572996803074, 0.2525}}], 
   LineBox[{{0.18346782857719168`, 0.255}, {0.8165321714228082, 0.255}}], 
   LineBox[{{0.19109832222610343`, 0.2575}, {0.8089016777738961, 0.2575}}], 
   LineBox[{{0.1990575934654635, 0.26}, {0.8009424065345369, 0.26}}], 
   LineBox[{{0.20737265198233834`, 0.2625}, {0.7926273480176619, 0.2625}}], 
   LineBox[{{0.21607493684649076`, 0.265}, {0.7839250631535092, 0.265}}], 
   LineBox[{{0.22520141453599504`, 0.2675}, {0.7747985854640055, 0.2675}}], 
   LineBox[{{0.23479605548749125`, 0.27}, {0.765203944512509, 0.27}}], 
   LineBox[{{0.24491186246052538`, 0.2725}, {0.7550881375394746, 0.2725}}], 
   LineBox[{{0.2556137265122867, 0.275}, {0.7443862734877142, 0.275}}], 
   LineBox[{{0.2669825660176769, 0.2775}, {0.7330174339823232, 0.2775}}], 
   LineBox[{{0.2791215342072378, 0.28}, {0.7208784657927627, 0.28}}], 
   LineBox[{{0.29216572217783293`, 0.2825}, {0.707834277822167, 0.2825}}], 
   LineBox[{{0.3062981194715024, 0.28500000000000003`}, {0.6937018805284961, 
    0.28500000000000003`}}], 
   LineBox[{{0.32177762041355584`, 0.2875}, {0.6782223795864438, 0.2875}}], 
   LineBox[{{0.33899251794980834`, 0.29}, {0.6610074820501998, 0.29}}], 
   LineBox[{{0.3585753660631084, 0.2925}, {0.641424633936894, 0.2925}}], 
   LineBox[{{0.3816965645078546, 0.295}, {0.6183034354921582, 0.295}}], 
   LineBox[{{0.41107490982605355`, 0.2975}, {0.5889250901739347, 0.2975}}], 
   LineBox[{{0.45832541812363836`, 0.3}, {0.5416745818762195, 0.3}}], 
   LineBox[{{0.16232917440656655`, 0.2475}, {0.8376708255934334, 0.2475}}], 
   LineBox[{{0.15580683773431536`, 0.245}, {0.8441931622656845, 0.245}}], 
   LineBox[{{0.1495212743954067, 0.2425}, {0.8504787256045934, 0.2425}}], 
   LineBox[{{0.14345977167435686`, 0.24}, {0.8565402283256429, 0.24}}], 
   LineBox[{{0.13761089153952177`, 0.2375}, {0.862389108460478, 0.2375}}], 
   LineBox[{{0.13196429724366346`, 0.235}, {0.8680357027563368, 0.235}}], 
   LineBox[{{0.12651060913488352`, 0.23249999999999998`}, {0.8734893908651168,
     0.23249999999999998`}}], 
   LineBox[{{0.12124128385530093`, 0.22999999999999998`}, {0.8787587161446989,
     0.22999999999999998`}}], 
   LineBox[{{0.11614851242902509`, 0.2275}, {0.8838514875709749, 0.2275}}], 
   LineBox[{{0.11122513372904906`, 0.225}, {0.888774866270951, 0.225}}], 
   LineBox[{{0.10646456055823188`, 0.2225}, {0.8935354394417679, 0.2225}}], 
   LineBox[{{0.10186071614790095`, 0.22}, {0.8981392838520991, 0.22}}], 
   LineBox[{{0.0974079793150615, 0.2175}, {0.9025920206849386, 0.2175}}], 
   LineBox[{{0.09310113685893104, 0.215}, {0.9068988631410687, 0.215}}], 
   LineBox[{{0.0889353420435385, 0.2125}, {0.9110646579564614, 0.2125}}], 
   LineBox[{{0.08490607822301202, 0.21}, {0.9150939217769879, 0.21}}], 
   LineBox[{{0.08100912683314804, 0.2075}, {0.9189908731668519, 0.2075}}], 
   LineBox[{{0.07724053910631927, 0.205}, {0.9227594608936807, 0.205}}], 
   LineBox[{{0.07359661097442763, 0.2025}, {0.9264033890255723, 0.2025}}], 
   LineBox[{{0.0700738607117641, 0.2}, {0.9299261392882359, 0.2}}], 
   LineBox[{{0.06666900894070571, 0.1975}, {0.9333309910592942, 0.1975}}], 
   LineBox[{{0.06337896068138563, 0.195}, {0.9366210393186144, 0.195}}], 
   LineBox[{{0.060200789174423036`, 0.1925}, {0.9397992108255769, 0.1925}}], 
   LineBox[{{0.057131721245464576`, 0.19}, {0.9428682787545354, 0.19}}], 
   LineBox[{{0.05416912401325825, 0.1875}, {0.9458308759867418, 0.1875}}], 
   LineBox[{{0.05131049277050605, 0.185}, {0.948689507229494, 0.185}}], 
   LineBox[{{0.048553439889804755`, 0.1825}, {0.9514465601101952, 0.1825}}], 
   LineBox[{{0.045895684626396, 0.18}, {0.954104315373604, 0.18}}], 
   LineBox[{{0.043335043705841, 0.1775}, {0.956664956294159, 0.1775}}], 
   LineBox[{{0.04086942259863664, 0.175}, {0.9591305774013633, 0.175}}], 
   LineBox[{{0.038496807395621745`, 0.1725}, {0.9615031926043782, 0.1725}}], 
   LineBox[{{0.03621525720813662, 0.16999999999999998`}, {0.9637847427918634, 
    0.16999999999999998`}}], 
   LineBox[{{0.03402289702558232, 0.16749999999999998`}, {0.9659771029744176, 
    0.16749999999999998`}}], 
   LineBox[{{0.031917910970522934`, 0.16499999999999998`}, {0.968082089029477,
     0.16499999999999998`}}], 
   LineBox[{{0.029898535897978785`, 0.16249999999999998`}, {
    0.9701014641020212, 0.16249999999999998`}}], 
   LineBox[{{0.027963055291262837`, 0.15999999999999998`}, {
    0.9720369447087371, 0.15999999999999998`}}], 
   LineBox[{{0.026109793411742212`, 0.1575}, {0.9738902065882578, 0.1575}}], 
   LineBox[{{0.024337109664417857`, 0.155}, {0.9756628903355822, 0.155}}], 
   LineBox[{{0.022643393145306712`, 0.1525}, {0.9773566068546933, 0.1525}}], 
   LineBox[{{0.021027057340408196`, 0.15}, {0.9789729426595918, 0.15}}]},
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  BaseStyle->18,
  Frame->True,
  FrameLabel->{
    FormBox[
    "\"Mole Fraction B, \\!\\(\\*SubscriptBox[\\(x\\), \\(B\\)]\\)\"", 
     TraditionalForm], 
    FormBox["\"Temperature, T\"", TraditionalForm]},
  ImageSize->500,
  PlotRange->{{0, 1}, {0.15, 0.35}},
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{{3.856880451233262*^9, 3.8568804617131853`*^9}, {
  3.856880500628503*^9, 3.856880520301758*^9}, {3.856880656728705*^9, 
  3.85688067986479*^9}},
 CellLabel->
  "Out[159]=",ExpressionUUID->"81cc762d-7ef5-4fe7-9263-6c08017c6353"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["\<\
The miscibility gap indicates the unstable range of compositions the two \
phases separate.\
\>", "Item",
 CellChangeTimes->{{3.856880754436351*^9, 
  3.856880807623713*^9}},ExpressionUUID->"91c0b20a-9aaa-45ea-ada5-\
a6306b563acc"],

Cell[CellGroupData[{

Cell["\<\
The composition of each phase is determined by the limits of the miscibility \
gap. \
\>", "Item",
 CellChangeTimes->{{3.856880754436351*^9, 
  3.856880816695665*^9}},ExpressionUUID->"193efc5f-8ed8-4424-9684-\
d3c7bf65f57d"],

Cell["\<\
In order to know the fraction of each phase in the two phase region, the \
lever rule is used\
\>", "Subitem",
 CellChangeTimes->{{3.856880754436351*^9, 
  3.85688083005575*^9}},ExpressionUUID->"b95f76c7-d249-402e-9764-\
49901ccb11dc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\t", 
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["f", "TI"], 
          StyleBox["A", "TI"]], "\[LongEqual]", 
         FractionBox[
          SubscriptBox[
           StyleBox["l", "TI"], 
           StyleBox["B", "TI"]], 
          StyleBox["l", "TI"]]}], TraditionalForm], "errors" -> {}, "input" -> 
     "f_A = \\frac{l_B}{l}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "\[LineSeparator]", "\t", 
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["f", "TI"], 
          StyleBox["B", "TI"]], "\[LongEqual]", 
         FractionBox[
          SubscriptBox[
           StyleBox["l", "TI"], 
           StyleBox["A", "TI"]], 
          StyleBox["l", "TI"]], "\[LongEqual]", "1", "-", 
         SubscriptBox[
          StyleBox["f", "TI"], 
          StyleBox["A", "TI"]]}], TraditionalForm], "errors" -> {}, "input" -> 
     "f_B = \\frac{l_A}{l} = 1-f_A", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"]}]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.7735647893570647`*^9, 3.7735647902824917`*^9}, {
   3.7735660158612933`*^9, 3.773566016706119*^9}, {3.7735676244674263`*^9, 
   3.773567625284314*^9}, {3.7735678890224657`*^9, 3.773567891494249*^9}, {
   3.7735683430528593`*^9, 3.7735683437834396`*^9}, 3.773724600013646*^9, {
   3.853362665796761*^9, 3.853362666140524*^9}, {3.8533633046775913`*^9, 
   3.8533633120769987`*^9}, 3.853753756131023*^9, 3.8537540469197702`*^9, {
   3.853845341671569*^9, 3.8538453442330313`*^9}, {3.856374420720639*^9, 
   3.856374437234189*^9}, 3.856374787461862*^9, 3.856374915535125*^9, 
   3.8563753956491117`*^9, 3.856376013709388*^9, 3.856378704576075*^9, 
   3.8563791026258717`*^9, {3.856379748987887*^9, 3.85637975853432*^9}, 
   3.8563806752483473`*^9, {3.856380733131955*^9, 3.856380749826585*^9}, {
   3.856877524588386*^9, 3.85687752907246*^9}, 3.856877583128718*^9, {
   3.856877682567892*^9, 3.856877697746252*^9}, {3.8568809242846107`*^9, 
   3.856880950024741*^9}, {3.856881217475976*^9, 3.856881220532535*^9}},
 FontSize->18,
 CellTags->
  "eq:van-der-waals",ExpressionUUID->"f3850064-f889-4a66-a338-cf3891c98532"],

Cell["\<\
where the lever lengths are determined by the compositions as\
\>", "Subitem",
 CellChangeTimes->{{3.8568812249712343`*^9, 
  3.856881241789084*^9}},ExpressionUUID->"d278ba34-4aa4-4a56-9c38-\
378d4a03364f"],

Cell[BoxData[
 RowBox[{"\t", 
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["l", "TI"], 
          StyleBox["A", "TI"]], "\[LongEqual]", 
         SubscriptBox[
          StyleBox["x", "TI"], 
          StyleBox["B", "TI"]], "-", 
         SubsuperscriptBox[
          StyleBox["x", "TI"], 
          StyleBox["B", "TI"], 
          StyleBox["A", "TI"]]}], TraditionalForm], "errors" -> {}, "input" -> 
     "l_A = x_B - x_B^A", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "\[LineSeparator]", "\t", 
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["l", "TI"], 
          StyleBox["B", "TI"]], "\[LongEqual]", 
         SubsuperscriptBox[
          StyleBox["x", "TI"], 
          StyleBox["B", "TI"], 
          StyleBox["B", "TI"]], "-", 
         SubscriptBox[
          StyleBox["x", "TI"], 
          StyleBox["B", "TI"]]}], TraditionalForm], "errors" -> {}, "input" -> 
     "l_B = x_B^B - x_B", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "\[LineSeparator]", "\t", 
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["l", "TI"], "\[LongEqual]", 
         SubsuperscriptBox[
          StyleBox["x", "TI"], 
          StyleBox["B", "TI"], 
          StyleBox["B", "TI"]], "-", 
         SubsuperscriptBox[
          StyleBox["x", "TI"], 
          StyleBox["B", "TI"], 
          StyleBox["A", "TI"]]}], TraditionalForm], "errors" -> {}, "input" -> 
     "l = x_B^B - x_B^A", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"]}]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.7735647893570647`*^9, 3.7735647902824917`*^9}, {
   3.7735660158612933`*^9, 3.773566016706119*^9}, {3.7735676244674263`*^9, 
   3.773567625284314*^9}, {3.7735678890224657`*^9, 3.773567891494249*^9}, {
   3.7735683430528593`*^9, 3.7735683437834396`*^9}, 3.773724600013646*^9, {
   3.853362665796761*^9, 3.853362666140524*^9}, {3.8533633046775913`*^9, 
   3.8533633120769987`*^9}, 3.853753756131023*^9, 3.8537540469197702`*^9, {
   3.853845341671569*^9, 3.8538453442330313`*^9}, {3.856374420720639*^9, 
   3.856374437234189*^9}, 3.856374787461862*^9, 3.856374915535125*^9, 
   3.8563753956491117`*^9, 3.856376013709388*^9, 3.856378704576075*^9, 
   3.8563791026258717`*^9, {3.856379748987887*^9, 3.85637975853432*^9}, 
   3.8563806752483473`*^9, {3.856380733131955*^9, 3.856380749826585*^9}, {
   3.856877524588386*^9, 3.85687752907246*^9}, 3.856877583128718*^9, {
   3.856877682567892*^9, 3.856877697746252*^9}, {3.8568809242846107`*^9, 
   3.856880950024741*^9}, {3.856881217475976*^9, 3.8568812560602818`*^9}},
 FontSize->18,
 CellTags->
  "eq:van-der-waals",ExpressionUUID->"a2a49258-ecef-4e99-878d-be1e73350fc3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Convex Hull Construction", "Section",
 CellChangeTimes->{{3.8568813509455557`*^9, 3.8568813533899593`*^9}, {
  3.856883690590137*^9, 
  3.856883693369618*^9}},ExpressionUUID->"bb4c77dc-d8ca-4c38-aaa6-\
9c773bf42b43"],

Cell["\<\
In a binary compound, there are more than two competing phases and finding \
all common tangent constructions between these phases using the previous \
technique can become cumbersome\
\>", "Item",
 CellChangeTimes->{{3.856881429075392*^9, 3.856881446451438*^9}, {
  3.856881485885364*^9, 
  3.856881558921809*^9}},ExpressionUUID->"cb79b95a-3818-4a7a-bb76-\
edcf61e5f0e8"],

Cell[CellGroupData[{

Cell["\<\
Instead, we\[CloseCurlyQuote]ll demonstrate an equivalent technique using the \
Convex Hull\
\>", "Item",
 CellChangeTimes->{{3.856881429075392*^9, 3.856881446451438*^9}, {
  3.856881485885364*^9, 3.856881578333768*^9}, {3.8568816201595993`*^9, 
  3.856881627917841*^9}},ExpressionUUID->"b2dfdc35-2988-49a8-b665-\
9b207e3a122d"],

Cell["\<\
In-fact, we\[CloseCurlyQuote]ve already seen this when we were exploring the \
Legendre transform using supporting hyperplanes\
\>", "Subitem",
 CellChangeTimes->{{3.856881429075392*^9, 3.856881446451438*^9}, {
  3.856881485885364*^9, 3.856881578333768*^9}, {3.8568816201595993`*^9, 
  3.856881654767323*^9}},ExpressionUUID->"8363a011-4ca9-41b3-a81a-\
9db32d2b5bb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Let\[CloseCurlyQuote]s start by defining a binary compound with three phases \
given by\
\>", "Item",
 CellChangeTimes->{{3.8568817488251467`*^9, 3.856881813356326*^9}, {
  3.85688186634107*^9, 
  3.8568818684408407`*^9}},ExpressionUUID->"0bcac79a-1eb7-4691-be99-\
279e0391b0da"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "phase", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"phase", "[", "name_", "]"}], "[", "T_", "]"}], "[", "xs_List", 
    "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"phase", "[", "name", "]"}], "[", "T", "]"}], "/@", "xs"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"phase", "[", "\"\<A\>\"", "]"}], "[", "T_", "]"}], "[", "xB_", 
    "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"molarGibbsEnergy", "[", "\"\<General\>\"", "]"}], "[", 
     RowBox[{"0.9", ",", "1.1", ",", "3", ",", "T"}], "]"}], "[", "xB", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"phase", "[", "\"\<B\>\"", "]"}], "[", "T_", "]"}], "[", "xB_", 
    "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"molarGibbsEnergy", "[", "\"\<General\>\"", "]"}], "[", 
     RowBox[{"1.2", ",", "0.9", ",", "3", ",", "T"}], "]"}], "[", "xB", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"phase", "[", "\"\<C\>\"", "]"}], "[", "T_", "]"}], "[", "xB_", 
    "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"molarGibbsEnergy", "[", "\"\<General\>\"", "]"}], "[", 
     RowBox[{"0.9", ",", "0.9", ",", "4", ",", "T"}], "]"}], "[", "xB", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8568822222115192`*^9, 3.856882260130022*^9}, {
  3.8568830153776417`*^9, 3.8568830779073477`*^9}, {3.856883356144734*^9, 
  3.85688336025178*^9}, {3.8568834769692183`*^9, 3.856883484488431*^9}, {
  3.856885386989983*^9, 3.8568854084502773`*^9}, {3.8568856256595993`*^9, 
  3.856885670755846*^9}, {3.856885716336458*^9, 3.856885729030011*^9}},
 CellLabel->
  "In[419]:=",ExpressionUUID->"9e11c622-f367-4f45-8840-3104cee8955e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"phase", "[", "\"\<A\>\"", "]"}], "[", "T", "]"}], "[", "xB",
         "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"phase", "[", "\"\<B\>\"", "]"}], "[", "T", "]"}], "[", "xB",
         "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"phase", "[", "\"\<C\>\"", "]"}], "[", "T", "]"}], "[", "xB",
         "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"xB", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Thread", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Red", ",", "Blue", ",", "Black"}], "}"}], ",", "Thick"}], 
        "}"}], "]"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "550"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"LineLegend", "[", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Phase A\>\"", ",", "\"\<Phase B\>\"", ",", "\"\<Phase C\>\""}], 
         "}"}]}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Mole Fraction B, \!\(\*SubscriptBox[\(x\), \(B\)]\)\>\"", ",", 
        "\"\<Molar Gibbs Energy, \!\(\*UnderscriptBox[\(G\), \(_\)]\)\>\""}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T", ",", "0.275", ",", "\"\<Temperature\>\""}], "}"}], ",", 
     "0.1", ",", "1"}], "}"}], ",", 
   RowBox[{"Paneled", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.856881978078467*^9, 3.856882058213229*^9}, {
   3.8568820956370907`*^9, 3.8568822202547197`*^9}, {3.85688227072427*^9, 
   3.856882364722*^9}, 3.856885697976295*^9},
 CellLabel->
  "In[403]:=",ExpressionUUID->"43bc71d5-de70-443d-ae77-76b6faf19ec7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`T$$ = 0.275, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`T$$], 0.275, "Temperature"}, 0.1, 1}}, 
    Typeset`size$$ = {655., {172., 177.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`T$$ = 0.275}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`phase["A"][$CellContext`T$$][$CellContext`xB], 
         $CellContext`phase["B"][$CellContext`T$$][$CellContext`xB], 
         $CellContext`phase[
         "C"][$CellContext`T$$][$CellContext`xB]}, {$CellContext`xB, 0, 1}, 
        PlotStyle -> Thread[{{Red, Blue, Black}, Thick}], Frame -> True, 
        LabelStyle -> Directive[Black, 16], ImageSize -> 550, PlotLegends -> 
        LineLegend[Automatic, {"Phase A", "Phase B", "Phase C"}], 
        FrameLabel -> {
         "Mole Fraction B, \!\(\*SubscriptBox[\(x\), \(B\)]\)", 
          "Molar Gibbs Energy, \!\(\*UnderscriptBox[\(G\), \(_\)]\)"}], 
      "Specifications" :> {{{$CellContext`T$$, 0.275, "Temperature"}, 0.1, 
         1}}, "Options" :> {Paneled -> False}, "DefaultOptions" :> {}],
     ImageSizeCache->{675., {206.6875, 212.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.856882051549848*^9, 3.856882058428063*^9}, {
   3.856882130248117*^9, 3.856882204293911*^9}, 3.8568822946492558`*^9, {
   3.8568823455037327`*^9, 3.856882365041464*^9}, {3.856883091472063*^9, 
   3.85688309363008*^9}, {3.856885389937015*^9, 3.8568854106629972`*^9}, 
   3.856885632448319*^9, {3.856885692736177*^9, 3.8568856982561073`*^9}},
 CellLabel->
  "Out[403]=",ExpressionUUID->"bfc66aa7-56e3-4ae7-90b6-e35d8cba18d7"]
}, Open  ]],

Cell["Note our x Log [x] function is Indeterminate at x=0 | x =1", "Subitem",
 CellChangeTimes->{{3.8568831483549223`*^9, 
  3.856883188725996*^9}},ExpressionUUID->"f66a87a9-8199-4852-9f1d-\
4b8e31fc3420"],

Cell[CellGroupData[{

Cell["As such, we also define the following limits", "Subitem",
 CellChangeTimes->{{3.8568831483549223`*^9, 
  3.856883204313314*^9}},ExpressionUUID->"0489fa35-1c9b-455f-bb6b-\
48756bbc97f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"phase", "[", "\"\<A\>\"", "]"}], "[", "T_", "]"}], "[", "0", 
    "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"phase", "[", "\"\<A\>\"", "]"}], "[", "T_", "]"}], "[", "0.0", 
     "]"}], "=", 
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"phase", "[", "\"\<A\>\"", "]"}], "[", "T", "]"}], "[", "x", 
       "]"}], ",", 
      RowBox[{"x", "->", "0"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"phase", "[", "\"\<A\>\"", "]"}], "[", "T_", "]"}], "[", "1", 
     "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"phase", "[", "\"\<A\>\"", "]"}], "[", "T_", "]"}], "[", "1.0",
       "]"}], "=", 
     RowBox[{"Limit", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"phase", "[", "\"\<A\>\"", "]"}], "[", "T", "]"}], "[", "x", 
        "]"}], ",", 
       RowBox[{"x", "->", "1"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"phase", "[", "\"\<B\>\"", "]"}], "[", "T_", "]"}], "[", "0", 
    "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"phase", "[", "\"\<B\>\"", "]"}], "[", "T_", "]"}], "[", "0.0", 
     "]"}], "=", 
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"phase", "[", "\"\<B\>\"", "]"}], "[", "T", "]"}], "[", "x", 
       "]"}], ",", 
      RowBox[{"x", "->", "0"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"phase", "[", "\"\<B\>\"", "]"}], "[", "T_", "]"}], "[", "1", 
     "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"phase", "[", "\"\<B\>\"", "]"}], "[", "T_", "]"}], "[", "1.0",
       "]"}], "=", 
     RowBox[{"Limit", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"phase", "[", "\"\<B\>\"", "]"}], "[", "T", "]"}], "[", "x", 
        "]"}], ",", 
       RowBox[{"x", "->", "1"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"phase", "[", "\"\<C\>\"", "]"}], "[", "T_", "]"}], "[", "0", 
    "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"phase", "[", "\"\<C\>\"", "]"}], "[", "T_", "]"}], "[", "0.0", 
     "]"}], "=", 
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"phase", "[", "\"\<C\>\"", "]"}], "[", "T", "]"}], "[", "x", 
       "]"}], ",", 
      RowBox[{"x", "->", "0"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"phase", "[", "\"\<C\>\"", "]"}], "[", "T_", "]"}], "[", "1", 
    "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"phase", "[", "\"\<C\>\"", "]"}], "[", "T_", "]"}], "[", "1.0", 
     "]"}], "=", 
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"phase", "[", "\"\<C\>\"", "]"}], "[", "T", "]"}], "[", "x", 
       "]"}], ",", 
      RowBox[{"x", "->", "1"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8568832083921947`*^9, 3.8568832563378983`*^9}, {
  3.8568833119501877`*^9, 3.856883366154316*^9}},
 CellLabel->
  "In[424]:=",ExpressionUUID->"82e938c9-411c-4607-931f-94f3ecd5e128"],

Cell[BoxData[
 RowBox[{"Clear", "[", "phase", "]"}]], "Input",
 CellChangeTimes->{{3.8568833395163927`*^9, 3.856883343006716*^9}},
 CellLabel->
  "In[257]:=",ExpressionUUID->"e79a92db-3c5b-4a0e-9494-22b4fd096c5e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
We are interested in computing the convex-hull of the epigraph of the \
functions\
\>", "Item",
 CellChangeTimes->{{3.856882399106557*^9, 
  3.856882417694594*^9}},ExpressionUUID->"b7cb42a9-0575-49de-82c4-\
c586e80e2bf6"],

Cell[CellGroupData[{

Cell["\<\
and more specifically - the convex hull of the epigraph on the minimum of the \
functions\
\>", "Subitem",
 CellChangeTimes->{{3.856882399106557*^9, 3.856882427555306*^9}, {
  3.856882889578855*^9, 
  3.85688290312963*^9}},ExpressionUUID->"d6821476-f979-48e3-b171-\
e46774c6411b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"minimumPoints", "[", 
   RowBox[{"functionList_", ",", " ", "numPts_"}], "]"}], " ", ":=", 
  RowBox[{"Thread", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Subdivide", "[", "numPts", "]"}], ",", 
     RowBox[{"Min", "/@", 
      RowBox[{"Thread", "[", 
       RowBox[{"Through", "[", 
        RowBox[{"functionList", "[", 
         RowBox[{"Subdivide", "[", "numPts", "]"}], "]"}], "]"}], "]"}]}]}], 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.856882918972149*^9, 3.8568829194841433`*^9}},
 CellLabel->
  "In[430]:=",ExpressionUUID->"ee52b4bd-ccc8-4fa1-a39b-a2d34cb45a7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getConvexHullVertices", "[", "candidatePoints_", "]"}], " ", ":=", 
  " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"maxY", " ", "=", " ", 
       RowBox[{"Max", "[", 
        RowBox[{"Last", " ", "/@", " ", "candidatePoints"}], "]"}]}], ",", 
      "\[IndentingNewLine]", "amendedPoints"}], "\[IndentingNewLine]", "}"}], 
    ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"amendedPoints", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0.", ",", " ", 
           RowBox[{"1", " ", "+", " ", "maxY"}]}], "}"}], "}"}], ",", " ", 
        "candidatePoints", ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"1.", ",", " ", 
           RowBox[{"1", " ", "+", " ", "maxY"}]}], "}"}], "}"}]}], "]"}]}], 
     ";", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MeshCoordinates", "[", 
       RowBox[{"ConvexHullMesh", "[", "amendedPoints", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;", 
        RowBox[{"-", "2"}]}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8568829378221188`*^9, 3.856882938960767*^9}, {
  3.8568837017577963`*^9, 3.856883702960554*^9}},
 CellLabel->
  "In[431]:=",ExpressionUUID->"617a3651-0207-4dda-8425-18baf6324daf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let\[CloseCurlyQuote]s investigate what this function returns \
visually", "Item",
 CellChangeTimes->{{3.856883812425028*^9, 
  3.8568838383371058`*^9}},ExpressionUUID->"c5c5ed7c-b9e2-480d-bf89-\
7920158f5194"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ch", "=", 
     RowBox[{"getConvexHullVertices", "[", 
      RowBox[{"minimumPoints", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"phase", "[", "\"\<A\>\"", "]"}], "[", "0.3", "]"}], ",", 
          RowBox[{
           RowBox[{"phase", "[", "\"\<B\>\"", "]"}], "[", "0.3", "]"}], ",", 
          RowBox[{
           RowBox[{"phase", "[", "\"\<C\>\"", "]"}], "[", "0.3", "]"}]}], 
         "}"}], ",", "1000"}], "]"}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"phase", "[", "\"\<A\>\"", "]"}], "[", "0.3", "]"}], "[", 
        "xB", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"phase", "[", "\"\<B\>\"", "]"}], "[", "0.3", "]"}], "[", 
        "xB", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"phase", "[", "\"\<C\>\"", "]"}], "[", "0.3", "]"}], "[", 
        "xB", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"xB", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "LightGray"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "550"}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Large", "]"}], ",", 
        RowBox[{"Opacity", "[", "0.15", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", 
          RowBox[{"1", "/", "3"}], ",", "0"}], "]"}], ",", 
        RowBox[{"Point", "[", "ch", "]"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Mole Fraction B, \!\(\*SubscriptBox[\(x\), \(B\)]\)\>\"", ",", 
        "\"\<Molar Gibbs Energy, \!\(\*UnderscriptBox[\(G\), \(_\)]\)\>\""}], 
       "}"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.85688373193322*^9, 3.856883795366912*^9}, {
  3.856885161216186*^9, 3.856885165104682*^9}, {3.8568858289800053`*^9, 
  3.856885839261888*^9}},
 CellLabel->
  "In[442]:=",ExpressionUUID->"e077511b-85e1-4bef-825f-433375672296"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0.85], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
qhESFFZMLSxg+xjH5vo0wf9CSrkD
       "]]},
     Annotation[#, "Charting`Private`Tag$278133#1"]& ], 
    TagBox[
     {GrayLevel[0.85], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
bLp/
       "]]},
     Annotation[#, "Charting`Private`Tag$278133#2"]& ], 
    TagBox[
     {GrayLevel[0.85], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwt2Xk4VN8fB3BbpYRIKYmsbUISJfkURSGyR4VIobKXhEjWCi1I2UPKkiVL
SR1k+SayrzNmtZuZq41U+J2e5/fPzPN67tw7c+655/35nGdknDzNXXi4uLii
uLm4/r0bukx01k5a6fguhGY96OxAfHoSXtSN6iDar8TnrNKJ9mQkp77eeATG
Rn81DgR2ohFJ+Vv+iibwYks8q66uExm19ZelbbQEt9sDKy7xdiH5e5tzl6Rt
ocrHOXP6cBf6a+j8+JyiPTSJdtpNBHchm/Nz7x9uPA8lAZHjk0QXatCTqPqY
egE+Ln0iX1XsRqpyB0t+SLvBJdWouvTT3YifEfbMWtEDftEn1U7Wd6NhlSi9
2I1+cP5K/6GO2z0oIWNDrcLpq7A8KpJfsqwHGQrna39IvQZ2/eJyRdQeVMlp
3UtIB4C4UJLmf/t6UVyR6DYzxZsgsHf4RQuzF2WuM428szEceD293xyU7UeB
bY8brKvDIdRxok3pWD+yjqDxyJ2OAPET819qrvSj1T+9Q96lRkL5en1SS1U/
ut6TcJ0lHQPHohozRw0GkNmjIXcTxThQocm4jtsOolv8r7fGbEwAwc7UpERT
Etph8CC6zCsBaoSa2UWeJNQV4TlJak4AWXUtUlw8CcnzKhUoX0uE2Q3ftF99
IaGmhRzlnq4kMA9o7gk0JKPV35P2St97AqsfeLJ59g+j5OEbehWL6aClk30A
ZinosKRtDsUqAwy2bOXvWENFU3aay/iLMuC/26djD+6kIilWgHPRrkzQbdF0
KHGgIk83DQUuciYYnrSfXWqiItHzxS9y9z2DmeRbGZ8NaOiUbVbxzNcciLX0
TnFbRkcEyXLVM4lcGL4SVia8ho4i7fldLPRy4W/ys9x8CTp67ewpUZmQC5fv
7ApGKnQk5HEwIlDzOSQo7XG/aEtHjWGDdsuD86BQpGmuPp+O1ApFlkvy58OG
l9kbVPUZSGDp1hkDqWJ4LrS20cmZiZLdbOyV9IvB/cVm3exLTCTfo+Qo4lEM
gb2Lg2RfJtJ52e9Mel8M9boGYQfCmejty6SKKuUSmCkNb87LYSK2BavG6EsJ
bD/Z4n5khImsXjz+7CtYBu1dPo2f7UeQghln4uPdcqjW0tf8qDuKJEIMtC5m
lYPYoyOy0oajaE1R5t1VVeVwJ9lS5arZKPrNb6FsxigHl90zrcKOo6ijtsqX
sq8C7CeLqUtBo+iG6q3FX6MVkKEmG9pZMYq+CIuJKR+qgnWWPf+5yo0h/y/7
IfnHW5Ax579SSowhIeWK0U/81ZBJmwl3+DmGcmJV7/2RrAZ3u6mGlX/GUKfx
1kH7o9UwXf39s/nycbTzs5ivQlI1NKlYn62SHEfUZuJ5meY7cL2QUtZ2bBwZ
1OUKtd2ogWTu3v0G6eNIvFyEws2NgBZ5J0EKJlAlQ6+1XbseXtxY07LedxLV
u6dtsmU1ACk5vP6n7xT6qXhQuOhKM7ScWdjAozuNeOYL1mxSaAGLFFJtKQ8L
aSw5Vlq8agXzKLTrZxoLtYarf2na0Q6fOq0uGsmykfT96fmXnA6QI+0Sv5vO
RtNzVEqvahcUyQYJJPFwUM7UuxahuG5Y37D6TrsDBwltziNGRnqAdjko6XUR
B91zq7iQKd8HlXNJzOBpDpo6VBQtsKMPTDd89PdjcZDBhtz8ayp9MAg1du5s
DuJpTuAYa/VBi6eOkCXBQQHyftfmTftATPfRHunvHHSBqhZpHtgH05TjVQm/
OeiwVUkuX1cfyEe+TFzkJ9DsoYIR15B+UPzhG0+WI1BNznSKf3g/DMy7OKXI
EyiMX8kiMqYf7ormvrRVIJBQR2Fd9qN+qGG3J/YoEkjR4VU6Ja8ftHk0pj5u
J5B1cOkpy45+eBJeXhStQqCKt1WtIDMAniuNpgu0COSn1lC+/uMA/LXPUnQ2
JdAF9S2ZD/4bgCLjI08FTxLolEbQ3dVfBoB3vbB/FfYBLXUnnsEB+K42eXml
OYF4dHOEOZwBeMF3yPS5JYHizcLdGyUGwcTtnESDLYHyvY5s8fMZBM1SjS0P
nAmU6pMpQPgPwv6H+Ru2nydQrN/fWbfgQQhxtQqtxfa6Xt7mED0IVcxl6WwX
AmmGygcapQ8CV0ed+GFXAjXE8/XJtmDLPdjZdplA1FcNdztlhsDOaZgn8CqB
Oth8LLWtQ1B4ubZpEbtW6ahxgtIQHJ3R5gu7RqDM/MbVNppDsIP8hBXpTyCn
502xZOMhmBtbvHYngEBjaf/Fj/sPwU7VzofXgwnEvtf6aKFtCARD3OhfwwlE
+bz6h333EJSZfpdyiSDQl1UnLGsHhmDjq6ihfuxX0W1it5lDoCRh2fouEo8n
/Esi//wQSEQKpwdHE+hHYMfjtfIk0BXes37yLoH+uPekbL9BApJzjJrjQwJZ
apx9oBxCglz9hU812IXcY5F7wkmgllD0fcMjAtknz3kfjCPB41vSi+3YdY0S
x8yekWDjmuav+xIJFLXl3I/rLSS4GfT+4uxjAq3tYxv/J0EGtb8XFLakEehy
1jXdNmky0FLmlD2xGy4vaXbJk0Hqg1fbe+xrvCJyZGUyBE+7f7JNJ9Cgqvo8
oUuG90Vp6F4GgTLu3sgVv0SGE7VPKyhZBNp5eMXihXdkcPlxwWDPcwKV5Bds
HaglA7U67PENbHWxk2bHm8hgpOZ0uQ5bezw5Z2cnGcYFUc6JPAKZxO4wmhkj
w4qbSuaOLwjkM3giOUB0GDLyoNQjH68H3W91U+LDcFSA2+YVdmBh0vTpzcNw
X7YujI0dHkLV0dk2DNYQddm9gEBJCt6jPDrDsElm2137QgK99U5Qu+c2DLVP
lPlUXxFIh7TvzILHMBRSNEVdseuPDEd4+A3DHGGdl4HdIq44eDJkGKLsxS8K
FhOI/L4qZF3iMFybd9BhYnOtIrWm1w6Drst92+ulBDJ4JnOxVJwChj178o6V
4/EmCyk2SVJAItRsyQN7S9yfkSEZCiy13icSsH8H9DrxKVFAePBpMhW7yCzG
3uYQBdT7RwS9KvB8cX+1WnClQGmwVmxwJf6+uWExUQ8K7FGuvZSGzWK1dCv6
4uMffjJqsJsGcsxOBlPggO/9lN/YASWnTmQ/oECYiL2GdxVeHw61R45XU8B7
VfcGozcEarUq4rVHFOBtp0Scx35j9LTep4ECnjZC94KxH2r6HUr9QgHWum/O
r7CPCm/TJhgUqNS+rivwlkBqy9b94Z2gwFyLSYAMttQf7uoNbApo7Qs4ron9
a4ykqTtHgXWt1Ipz2AUf4vckClBBZDwalWInlwd9e7mGCmFqCXUN2OH5bqUf
1lHhF1vybD+2fZKeyoQ0FbbHvnX8gy3iMbfjgDoVwjPTnupUE2jReWTSdD8V
hqzXuplgT9l2vjivQ4X9Uds7z2I3HC1QjDtGheRpfY9AbP/NDrL0M1SwVSwi
l2I7nVS1Jp+jwkjCVq0P2Ca3ue/0X6DCi5W2e1uwFSezv7Z5UWHiOYuPji0q
eVXh01UqDDpbDk5jL5jo2zbcwOeb3jSaxe4pn6itDqfCp17Zlave4bwZf/uj
IoYKbXrPLNdiF0jc3VYaR4XDMeyDkthhobvu5yVTIURrZlIJ2+P14sdnaVTQ
qy4oVMe2HWufS3tGBef9BwS1sVWNfRwSCqkQbTWcdxxbMkTvUXwpPq7/nW6K
vaJMrPlOJRVsKMy3VtjfRkZ/R7yjwsG7JSqnsSniVcq3aqnAnW2n54jdYhjt
FNRIhUhn5o/z2BXBtkn+LVQo/WZ0xA07s2RHi087FRztE3dfwb7H/LNwpYcK
N1Nra7ywr69v2+02SIXRO19GfbGdj6e7nKfg8eCouoZtEuT5xIFJhW3XE0UC
sLWKD7XZTVChtdpULBBbkSHCbc2mwsm9RHkQtsg6prrZNzxfJ/y+B2P/NSh3
NZ6jwj0zavtN7IkbEakGf6kg7q9qGII9Zb3TNYuLBnLki07/7DizlkealwZp
kREb/rkv5m9K6jIaeJ6PufzvfCO50b0S/DR4ZORr/+/6tTVt7Y9X0YA1r8v5
93s0rCvd1gnSwG/dr003sAuJdN5HwjTYpPRw3B9bNiYqbY0oDXpfrzG7ip0s
66UZJ0aDzFW+p3ywhWpOdQqI08Dp2psFD+xwq8OXYjbSYIMC7dAl7HnO9mUr
JGlQrzQpc/HffEeLZoRL0cD4blemE/aIzJ99PDI0KFZMeX8Wu8Oy9fKCAg0G
9jR2mGPrc8qXB26jQfi8XLMxdk1UWuavHTQgZZ85rY+dV+3R812FBkf1rc7u
+/d8WNp4eKvRQLlL5LMq9kM28BPqNLjintW3DfvmFhHtqf00uEbd3SyO/ePt
fO9FbRp8jVcuFMJ2t2B4jurQYM+Pn8rLsK0iX2fT9Ggg7U8S/IqfdyWWlUD/
CRqsCKlWbcB+Y2mM7pykwbeMxtlKbL33ur46FjQoT5E9/hLbLk6FlHuKBuzD
9Q/vYceorizwc6bBtm6ZtyewxZ4s2W+7QINnB/Xp2tiZ3LOiZFcaTJ15krjz
3/W7GDf0PGhwqqjq2QrsMb8aQ9EAGnyZOWRSjfPBZ7hssTGQhtfDsf5c7IWj
L8sCbtLgXbc56z62mHiSBP02DbLO2Fa7YOu99ZwqjqPBkn7g6ErszAXZOydy
aLC5dLOPNs47pQsbdbjzaCAWp/1mC3bVF+Fv5S/xeBM4MXzYXzL+2koW02B9
2HR7C87XhcN926ff0qDF4eyoGbZdZMyn6HYaPH9krWyI83iMExKs3UWD5OD7
27die9tc2z3TQ8Pr5XMxL3b0NucnNkM0CLgodfYdzv/KFm03xVEa7N4uoKXw
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
       "]]},
     Annotation[#, "Charting`Private`Tag$278133#3"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[Large], 
    Opacity[0.15], 
    RGBColor[0, 
     NCache[
      Rational[1, 3], 0.3333333333333333], 0], 
    PointBox[CompressedData["
1:eJw9m3VYVNvbhjGOHeixRY+BiYGBWPAYCDbYjYiI3Y2gYuIxAFF+HhNRARVs
QQHdgDQi3SgxM0ztEsUWv83MO9/84/VezOzZe6+17vt51x57Om+du6a+kZFR
0wZGRnX/Gl6yqsc/zmZlMr/ufsye5eyAIev6+a4qyaLaCW72ncZcC81mfhzc
EL3Lbx02V7e/dXxdDv19G2Ku1Vb/1yGXOdDugV2F2y7UTGt6fX1kLr1/H7YK
i/e3XJjH7Ff3HdYk1B2XtvmNV2ny6POHMfnDzQZf9ucz48rsz/5vyxEMSrGd
/alBAR3vGNqnfNy441QBEzmtRX2zkycQdKaFtapZIR3fC8+W9Zn5zKuQGfMs
ec/rG//i+5eEnn0bFNH3nUHHSc0beLoVMS+6H9fOeXEOp8/m+9TyRfT9PnD0
kUdkOhUzV+N7PNqxzhf28qDevTOL6XzOY7WN7xITqxKm5LvuC9GsfNLFD8El
dH4XMHK45R4v41Km69D3po08L2J8pzv/WuwtpfP1R4P6pUxtSSmz1EV3RKR1
G/D6h/V7Ov9LONw2cqR1wHvm8n+6F06k5XYq/fOerucyUtrzxYoVH5iid1/n
ye5cQanPeb+NkR/o+q7i4aSgAe7ty5jODRe2GvzkGna9MdvZZ2sZXe917E44
NmdXUhmzWH9ATAn54jK2dTldfwC+Jrm27Dy2nJlpeWqikyIAjdear13mUk73
4yZ++Z9Z0+hcOcPOqTviTbR72uxx94hyuj+B2OD9NSykrJw5vUn58+7HQJx3
bXUkpHEF3a9bOG12pnOvoRWM2ckO0iXcwt/1Is06L6yg+3cb7dcYwde9gkm7
OSX80+/b6PLLN/RsYAXdzzu49DLyVpvkCqbubnVqGITp9h8G9eAq6P4GocPU
oYOi21QyzQpubbNqFgw3TV8XlUUl3e9gfFHH7w1eUsncq7tc4xDcbHCN/ele
Sfc/BG7FEYNUNyqZ6XWH63AXPq9meG2Jq6TxuItVW+dY+sorGd3tNrkHT69v
S+c2ktH43MPLwNrap/1kTN3dy+x1H0NM2C4vpspovO7jiDjaz2m9jBmw3Duu
pn8ofnxYNvbhKRmNXyjy8xOy7tyVMSnS0boMDcPnTWnNbFNkNJ5hMOY9Tvqq
ZMw6X84dFg/wbO/uklON5TS+D3Bx+dkz5n3ljHRy0iU/RPk3v79P2shpvB9i
dC1fes5ZzsyXJo80pHDrYzFt2mE5jf8jxHZ7HRZxTc7clu5ewa1HqD0wYEFJ
pJzmwyPYLH9/6HmBnPn8O3efuu9jNFzo4WL3WU7z4zFKFyw1P2+sYGx0E+Ax
fCtLGv9vkILmy2OE2skaLZqqYKTBq7sg8O0GTMxZraD58wS9l1yMa3FIwehP
7wmyas57N7ysoPn0BO9XOd6JeqZgRuheT9F+oMOP4RkKml9P4bCv98GNagVz
NCZVmkFP0U0+uotrgyqab08Rn5r3uHe3KiZHGn3pnmDbWqded0ZV0fx7huXl
lyZr7auY3roDPsPx/RnKL+uqaD4+Q5cunUqTPauYnboBeI6tsw+oVl2uovn5
HKacaWbckyrmTU1/aYSfI+Cozxw2tYrmazgs7j/tW1ZZxbTVnyAsXPv+dfVH
Fc3fcDA3p13v3VbJ6M4uORzbv268sWeAkuZzBLoms48vTlAyT64JwYkzIvAx
ccUBz0VKmt8RGNv81rWxW5RMfd0FR6A6uk1E7DElzfcXCNx61rnjFSUzVz9h
4GR123L8YyXN/xdIfHI31TxJyQTWXW7uC9y7khlaU6qk9fASZ5jJm05XK5nq
usMtfomJV6wuVDdW0fp4Cac+/4SZdVMxk+qmf8lLbLp7fLzlcBWtl0jMTFiZ
0N5Oxeimr2Mkml6ol5y0TEXrJxL1jUfHzdqmYirc6gYkEkPClw0NOaai9RSF
2zudvQouqZhhugkehRiFOLk0VEXrKwoLazbkh8eoGM+Lk6UpEwXL3AZP1uaq
aL1Fw8cl3VZQqpisXroBRp5xUv3ZP1W0/qJxvQs751grNdOzjv5cNFJcJ14/
31NN6/EV1r2ttN8/Us1sr1se215hENs6fbSdmtbnK+y8ONota4maia0b3U+v
kPqqSeTkTWpar6+R2HoX531QzRjrFyTWtY/dGe6jpvX7Gu71L9yLCFQzutv3
/TXe9vrO+T1T03pm0ELccmlGoprRnZ47g0Y5Qv2yAjWtbwaX/X4em61WM3qb
xyDOLWDX5R9qWu8xCB5wrO+b5homJHGGtKJjoOnPcskmGlr/Uj080SR0sIZx
kFajNEfhNe5Rg83WGuJBDCaMNqpubq9hvtXZJz4GVffSLE6t1BAfYrDnI99V
sVXDBHSpWxCx+LG8nfjPYQ3xIhZ/2kT9GuOjYabqBjgWC59ZnR4RoCF+xMK6
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
     "]]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"Molar Gibbs Energy, \\!\\(\\*UnderscriptBox[\\(G\\), \\(_\\)]\\)\"", 
      TraditionalForm], None}, {
     FormBox[
     "\"Mole Fraction B, \\!\\(\\*SubscriptBox[\\(x\\), \\(B\\)]\\)\"", 
      TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->550,
  LabelStyle->Directive[
    GrayLevel[0], 16],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-1.0221040894217768`, 0.45474552129504703`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8568837798699217`*^9, 3.8568837957493134`*^9}, 
   3.856885165438644*^9, 3.856885748798361*^9, {3.856885832057621*^9, 
   3.856885839604035*^9}},
 CellLabel->
  "Out[442]=",ExpressionUUID->"72091e7d-aa27-4c0c-baeb-8d892cb4c1db"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
As we can see, it returns the points on the epigraph - without connecting the \
common tangent points\
\>", "Subitem",
 CellChangeTimes->{{3.856883844310792*^9, 3.8568838785520773`*^9}, {
  3.856883933781793*^9, 
  3.856883940344302*^9}},ExpressionUUID->"7c8630ec-977c-43f4-b3c3-\
777454a2dafd"],

Cell["\<\
Each \[OpenCurlyDoubleQuote]set\[CloseCurlyDoubleQuote] of points on the \
epigraph corresponds to a homogeneous single-phase region b/w two phases\
\[LineSeparator]E.g. the left-most points correspond to a single-phase region \
b/w Phase-A and Phase-B\
\>", "Subsubitem",
 CellChangeTimes->{{3.856883844310792*^9, 3.8568838785520773`*^9}, {
  3.856883933781793*^9, 3.856883941473714*^9}, {3.856883982371214*^9, 
  3.856884057544332*^9}},ExpressionUUID->"fb8c72f0-ae53-46b0-9f9f-\
62fff504e327"],

Cell[CellGroupData[{

Cell["\<\
We can use this to split the epigraph according to these single phase-regions\
\
\>", "Subsubitem",
 CellChangeTimes->{{3.856883844310792*^9, 3.8568838785520773`*^9}, {
  3.856883933781793*^9, 3.856883941473714*^9}, {3.856883982371214*^9, 
  3.856884088944923*^9}},ExpressionUUID->"f85fce00-9864-4064-aa94-\
f604c1a907e0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ch", "=", 
     RowBox[{"Split", "[", 
      RowBox[{
       RowBox[{"getConvexHullVertices", "[", 
        RowBox[{"minimumPoints", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"phase", "[", "\"\<A\>\"", "]"}], "[", "0.3", "]"}], ",", 
            RowBox[{
             RowBox[{"phase", "[", "\"\<B\>\"", "]"}], "[", "0.3", "]"}], ",", 
            RowBox[{
             RowBox[{"phase", "[", "\"\<C\>\"", "]"}], "[", "0.3", "]"}]}], 
           "}"}], ",", "1000"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"First", "[", "#2", "]"}], "-", 
          RowBox[{"First", "[", "#1", "]"}]}], "<", 
         RowBox[{"1.001", "/", "1000"}]}], "&"}]}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"phase", "[", "\"\<A\>\"", "]"}], "[", "0.3", "]"}], "[", 
        "xB", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"phase", "[", "\"\<B\>\"", "]"}], "[", "0.3", "]"}], "[", 
        "xB", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"phase", "[", "\"\<C\>\"", "]"}], "[", "0.3", "]"}], "[", 
        "xB", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"xB", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "LightGray"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "550"}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Large", "]"}], ",", 
        RowBox[{"Opacity", "[", "0.15", "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", 
          RowBox[{"1", "/", "3"}], ",", "0"}], "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"ch", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "Purple", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"ch", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "Cyan", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"ch", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Mole Fraction B, \!\(\*SubscriptBox[\(x\), \(B\)]\)\>\"", ",", 
        "\"\<Molar Gibbs Energy, \!\(\*UnderscriptBox[\(G\), \(_\)]\)\>\""}], 
       "}"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.856884106579166*^9, 3.856884137885825*^9}, {
  3.856885169424592*^9, 3.8568851742802877`*^9}, {3.856885756708481*^9, 
  3.856885757616197*^9}, {3.856885842446498*^9, 3.8568858592532063`*^9}},
 CellLabel->
  "In[444]:=",ExpressionUUID->"4ef9ecf9-dc93-46a3-ad99-dec83b7f3758"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0.85], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
qhESFFZMLSxg+xjH5vo0wf9CSrkD
       "]]},
     Annotation[#, "Charting`Private`Tag$278261#1"]& ], 
    TagBox[
     {GrayLevel[0.85], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
bLp/
       "]]},
     Annotation[#, "Charting`Private`Tag$278261#2"]& ], 
    TagBox[
     {GrayLevel[0.85], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
qy4oVMe2HWufS3tGBef9BwS1sVWNfRwSCqkQbTWcdxxbMkTvUXwpPq7/nW6K
vaJMrPlOJRVsKMy3VtjfRkZ/R7yjwsG7JSqnsSniVcq3aqnAnW2n54jdYhjt
FNRIhUhn5o/z2BXBtkn+LVQo/WZ0xA07s2RHi087FRztE3dfwb7H/LNwpYcK
N1Nra7ywr69v2+02SIXRO19GfbGdj6e7nKfg8eCouoZtEuT5xIFJhW3XE0UC
sLWKD7XZTVChtdpULBBbkSHCbc2mwsm9RHkQtsg6prrZNzxfJ/y+B2P/NSh3
NZ6jwj0zavtN7IkbEakGf6kg7q9qGII9Zb3TNYuLBnLki07/7DizlkealwZp
kREb/rkv5m9K6jIaeJ6PufzvfCO50b0S/DR4ZORr/+/6tTVt7Y9X0YA1r8v5
93s0rCvd1gnSwG/dr003sAuJdN5HwjTYpPRw3B9bNiYqbY0oDXpfrzG7ip0s
66UZJ0aDzFW+p3ywhWpOdQqI08Dp2psFD+xwq8OXYjbSYIMC7dAl7HnO9mUr
JGlQrzQpc/HffEeLZoRL0cD4blemE/aIzJ99PDI0KFZMeX8Wu8Oy9fKCAg0G
9jR2mGPrc8qXB26jQfi8XLMxdk1UWuavHTQgZZ85rY+dV+3R812FBkf1rc7u
+/d8WNp4eKvRQLlL5LMq9kM28BPqNLjintW3DfvmFhHtqf00uEbd3SyO/ePt
fO9FbRp8jVcuFMJ2t2B4jurQYM+Pn8rLsK0iX2fT9Ggg7U8S/IqfdyWWlUD/
CRqsCKlWbcB+Y2mM7pykwbeMxtlKbL33ur46FjQoT5E9/hLbLk6FlHuKBuzD
9Q/vYceorizwc6bBtm6ZtyewxZ4s2W+7QINnB/Xp2tiZ3LOiZFcaTJ15krjz
3/W7GDf0PGhwqqjq2QrsMb8aQ9EAGnyZOWRSjfPBZ7hssTGQhtfDsf5c7IWj
L8sCbtLgXbc56z62mHiSBP02DbLO2Fa7YOu99ZwqjqPBkn7g6ErszAXZOydy
aLC5dLOPNs47pQsbdbjzaCAWp/1mC3bVF+Fv5S/xeBM4MXzYXzL+2koW02B9
2HR7C87XhcN926ff0qDF4eyoGbZdZMyn6HYaPH9krWyI83iMExKs3UWD5OD7
27die9tc2z3TQ8Pr5XMxL3b0NucnNkM0CLgodfYdzv/KFm03xVEa7N4uoKXw
rx4Iz/A3/Mbz89PxO+M1gbre34k6vkADPad473fYDy8rLG9fogF3M8Q8whZt
seMd4qPDN5PFcN1/jmhcIITokB7VXZhSRqA1f55+2yRHh+RDj8q1cP3qeLnX
O0uBDi7Fs42rse+f6iAUt9Gh/LWKF6WEQMKVy9i7d9Hh+cD3uFBsIW+vcQNN
Oii4XP+BcD1cPX6U7GtEh5l77yx34vrZmkizmz9Bhxj5z+zZIpwfRwIHb56k
g/TMpFQ9tsCzkr4YKzp4z0kft8FedXZTZ4YDHX73fn8XhOs1f/dM42dfOgzP
igmX4/rOh1KK5VLxcYlsvh7cPwxpHzlGTafD3ags7ljs4moW7WkWHY652IQd
xbarPCgqmkeHq18ShCpyCVRaRPXjKqMDb8WCaVwOri+pclrDzXSoGDvmvP0Z
fr4CChqSvtPhV6nCDm7c/8TNWZw1n8WONPfJT8X5dvXvT8F5OrT4Gx6wSP03
/hNbIxbpEHZU3TQ7hUAurkSM70oGpF1cG3TwKb7fNntMT0ozoGBZVpct7r8u
qb8bXGnEgCcV0iW7H+D86egtfHOCAb+/3fyAWwK07spMyMWTDIhdoppcxEa5
CoqNVgywPr/n59N4PP/i931CHRmw89KU5d9YAr2bPy8wd5UBLccD9PPu4PuJ
hA6OZDKgJvbWxrTbOA9Pb1/zKJsBfPtldm3DrpjTYx5+zoCfa0kfysII5KAa
EJNRgK+XuP5M0y0Cvc5i9tpVMuC7+M+AcRzip8PfeHR+ZkC61ToFkSBcv447
ZX6YZcDsqAJw++H+RklGB+YZkGG7uyPcl0AfhGgk9IcBb7wsWCuwO7rPitdx
MUElxL5xtQ/Ol7O2cR9XMeGAntTcGi/cf/mcDPpPigkW4eYHeXH/3vFU51SX
PhPS1tV6xOH9wc9piTVjSUygzj/o1DQjUELaeHPqEyZkdETy38f7jz2m5SEW
qUw4OFRYMI73K95lJ4jaLCYMMxv2Jprgfv166JeUQiboOuVaTBoRaHTZ2D2z
eiaspCbGXNUnUK906cr3bCakqG/2kjyA74+FAW/CkRFQWty2KVkWr0ejNxGS
BiOgnaHt3y9DoDN62/lzj4+A7DUX/fXYPHsEBCtNRqBuy66DD6VxvRNtXz9w
agQy7fijbkvietVhvUPyygioda92MFpPIAmTC2Y5iSOQvFy81GMlgUKORWSU
j41AzlDi8BzeL8oMGw5kR4yCMe9mxaUSDtLSDE/YqDYGISWrw5WdOeiMVPs8
d/cYWH7YYnFaiIN+tsQyvG6Nw0Cjs+mpbDZK5rP3M5efgE1OdQtnVdhoLaXi
GU/DBJiTPRL9C1loWfAty/3ek/CpW6PAnJ+FuF7aFzNEp6C5ZkhqyXoa+Twt
jhWtn4IDebMsqv8Uer8zml/EYxqeXpeyCPGfRCKGPkphQizw6ed7I+A4gTLr
hAW0RFgQaujRyLabQKr7iya/rmXBs9g/Fq1WE8hk28TzcxtZUG1bO37TaALd
WW4vc1ieBfXmBfFvNSYQ38fj67m0WFDT7bZ0a/UEmj0gw3XThQVXeR6YGFSM
I/Kuju6AGhYs2URv6fw9hjKmRYJ5EQs2DJ6blfo5hpxeWijG1rFwPUiYdCXG
0KR8//XMJhYoyNRu+MocQ7ObKJubO1hwYXx6V1frGBJZxbooNsoCnivtNd1p
Y0h/bMXfV4Js0K/ZaFOlPYZK0kF+xJ4NYh+afixeHkXfb3xfce4cGyZWbR6x
uDCKNGzypoed2SAScuVHtsMoeics/LrflQ0Chnnn9pqPoqZQyuHPPmwgKTa1
S2qOIpJTsENZJBs0Ciapv5ZG0PKt756GvmJDskR+UHXsCDpbrCGyeZENK2y8
M4ceM1Gl3S+hDi4ObNAXdl8bz0RCy6tX3+blAP2rhtmRSCaqPXOQf5KfA/Kz
dfpxfkwku+rIUvlaDuhbJ1+pO8lEY+fN2MbbObCrR3jHkxVM5CFx+VOQJQfU
BS5L5nswUFPjrmYVGw6QBx/3fT7PQNLeRAPDlgNLwzZ9TDsG6mj2qT3mwIH8
UJL9rD4DqV0NqBJz54BbePn9bCkGmmuPzC0M4QBbTfmuYCsdhUZk3SLnc+B8
bm1QjBQdCfqvMDxXxIEOAQ3GajE6eup6RXSsmAN/o82cI1bS0Wuj/dlEOQfC
m26dsfpBQ2MinQ08iAMvb0k+8vhEQ0bpXPzbuzlwP3Rc1MubhtZXOcRd/cMB
D+YR/g5PKsp+0Wj9e4EDvDX7yOU2VKT6dKd0CBcB9i9mvYKAio4HzxVHLyMg
ZTQ9vUyIioL04jtThAnQXqfyt7SAghjtH8Tq5QiIQiEXX1GHUdHE5hQhYwKG
1PmYlUpkFJ0W4UgxIcCjqNiXupqMzpuzFV6ZEdCjsKuqk0VCkjU1JSdsCAh7
8DVLuJCE7sSfbrrnREBtzhnT3q0k5Krx5OuqAAIUobT5ztohdGSaq2ookIDl
BlwbW4lBJJ3pGpR/kwD5G0erPn4eRH0r960wDMeft9eVaw8bREeH+yRj4glo
OPlMX449gGTDxY6teE6A/+B+gc6SfrS4L0iw/wUBW6Ti629E9aNBNrPreQEB
Z5R32Lw+24/u41f9UgLCLSmOdfz9aGmHuW9EDQHsxUajrlN9aIj6dp8VImAm
T/Lx1Z19qDJBZlG+noCyjxzPkIVe5LE4E93QTIBKffPrlxm9iNwZn87bTcDN
ZZrZjqQe9CZyzrm7lwD9hfeCei96UMIBh+3ZAwRcXOjM3ufXg4xylct1KQSI
mt3Ysn5lD1K0SwoQpRPA587a2t3ZjXiEF3UYTAK8l16sMn7Sjaqvt326NUnA
cbkDo2Ny3Shp1954MxYBK3eJRr0a60LejFRLGYIAy6ULu6/ldSHjx3wSX78S
wDved2bcpQttM75Mrf2B51eo1zBapgvxcffk3J8j4MEHk5rMwU5Eqzjg7vib
gMQ1+2lz9zpRjXu2iuoCAQ5sHdE/+zrRY2mBn0tLBFz7//8L/wPygGPs
       "]]},
     Annotation[#, "Charting`Private`Tag$278261#3"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[Large], 
    Opacity[0.15], 
    RGBColor[0, 
     NCache[
      Rational[1, 3], 0.3333333333333333], 0], 
    PointBox[CompressedData["
1:eJw1l2dYVFcXhVGMvaCxi0bB3jUiapT1Kd0GGiVRUZEgmqhoLGCwYsVYAFuI
LYgKiKCiCIrAAaQjMAzDwNA7DMzMvWKwB787czf3D896Zjj3nLP3Xu+aUc47
V27uqKenF9ZBT0/7t/2pqY/4dD5Pwr7cfyNd5myPqVvH+W0qySPtBE+7wXNv
hknZp8O/xe69tBU7WgbcObk1nz7fhYSbbS1/D5SxA/0fWld57kWrbbdbv8bI
6Pv7sZP7+Y9eDgXsD+XYGV3DDsJ/16X5jU0F9P9HYV5+W//dH3L2Q4Xd+b/c
jmFyhtXyt/qFtN4JDMh4s233mUIWY9uz46TTpxB0rqdZY/ciWt8bkevGLI30
LmJzI9Pd4//5Ex/fpYwaq6+g953DoEU99L08Fez5iJPNK55fwNnzct82jYLe
74sNvrXREqdidiN55OPdW/1gVxtkbCwppv1cxC8WfmsMF5Swko+6F6J75aIr
5cEltL/LmDXT1N3boJQNm1Y2urPXFcwffO9PE49S2u9V6HcsZW0lpWyti25F
ZA2fEP/JrIz274+j/WJmmQWUsWt/6x6cypINLv1aRue5howBmuK69eVMkfP+
x5p711Hqe/HStphyOt8NPFoUNOHggAo2pJND7ylPbmLvq0l7xuysoPPewr6U
Eyv2plWwn8UFYRnyzmVen0o6fwDep7n2GjKvki01PbPQqS4AXbZM37LOpZLu
4za+XD23ufOFSqZaoV3xNvo/7R4xIrqS7icQv/m8Dw+pqGRntzd8vv8mEBdd
ex8L6VJF93UHZyedG2I0rYpNOj1QOMIdfNshZtIQhyq6v7sYsFkPfgerWNZt
y6i3/93F0C9+YecDq+g+78H/RcydvulVTHtbgzsFYbFd+eSR6iq63yAMtJk2
ObZvNeteeGfXgu7B8Gwa69JoUk33HYx3ymSP4DXVLFR7XIMQ3Na/qfp8sJru
PwSexdGTG/+pZou1yw28D9+4Jd5uSdVUj/vYtHOFqV9tNdNdt2EovLw/rF3Z
uYbqE4oXgW1tT8fVMO3tSYweYKqhauhzmxqq1wMc4+dccvq1hk1w9ElqHR+G
T+Xr5j06U0P1C4NcnpJ3734NyxBWGzotHP9uz+pulVFD9QyHgebQab/GGrbV
T30QJg8R6bGv5EyXWqrvQ1xxPH9u+thaJmxOOPIjVH649O1pi1qq9yPMadOU
XnCuZauE5hFKCs8xJra2R2up/o+RODw+PPpmLbsr3F7hncdoOzBhdUlMLfXD
Y1g4lh15VljL/v1Ptl85NgKdHA65WP9bS/0RgdLVa6dfNKhjFroGiIBfdUmX
vybXUb9EIMy6pvNPNnVMKJ72QND0n7Aw/5c66p8nMF5zJannkTombu8J8lov
+nS6Vkf99ARlmzbcexlZx77XPU8xYKL9p5m5ddRfT2G/3/jwNmUdO56QKXTQ
UwyvnTPUVb+e+u0pkjMLIoyH17N8ofrCnWDXFieje7Prqf8i4Vjpb95sV8+M
dQtG4uQfuQ3vttZTP0Zi6NDBpele9WyPrgDPsHP5gcZN1+qpP59htHq0JOlJ
PXvVOl6o8DMEHPddocqsp36NgsmDp2MrqutZP3GDMHEd+82NT/XUv1Fgt21v
GfdrYLrdpUfh9/fb/nGf0ED9HI1h6aqIK/9rYE9ucsGpS6LxJnX9Aa+fGqi/
ozGvx52b89waWEfdgaPREts3OvFEA/X7cwTuPO886HoDWyk2DJwW3DWdH9FA
/f8cqU/uZ05Pa2CB2uPKniP0uiSstbSB5uEFzjHz7WdbGliLdrmfX2Dh9QWX
W7o00ny8gNOY78InDW9ki7TtX/IC2++fnG86s5HmJQZLUzamDLBuZLr23RCD
bpc7pKeta6T5iUFHgzlJy3Y1sipPbUFiMDVq3bSQE400Ty9xd4+zd6F/I5uh
a/CXSKjjzUvDGmm+XsKh9Td5VEIj87piLrTMS5jK9J9skTXSvMXC1yXbimto
ZHlGugKjwCCt4/LPjTR/sbg1VLXiRG8lG6V1f3UsMlwX3ro4SknzGIetr6vt
/pilZL9rx2NXHCar+mTPsVbSfMZhz5U5nnlrlCxRW923cciM6xpjvl1J8xqP
1D571T6HlcxAHEhsHZC4J8pXSfMbj4MdL4dGByqZ7vo+xuO10Uf1pUglzTND
T97Nf0mqkum2d5Chcz7XsaJQSfPNcO3S5xPLlUom0jwBSZ4Be699UtK8JyB4
womxr3o0sZDUJcJEJ6BpvEqdbthE8y/omamGYVOamL0wjUKPwvuHx/o7zJrI
DxLwvzl6LT3smtgHLX2SE1AfmmVyZmMT+UMC3N9ohtXtbGIBQ7UDkYhPjv35
7442kV8k4mvfl1/m+jYxG12BE+EQueDs9wFN5B+JMKssqun5uInxwdoNJiJ9
d8SyVNZEfiJ8fqe4t1NuE/PX7i4zEXO4dduLy5vIXxJhUDI71ETTxLTNZdsz
CVO9t/fY/V8T+U0SMo30pT49m5nWTaTLkrB/fA/4DGsm/0lCjffdi7smNjNt
twgtg7bb+j1nzW0mP0pC/yHuSoV1M9MdV5KEcL8tW50dmsmfkhBr7pqS7dLM
dMv1e4WS38fNN9zTTH71Ci0JZ7ss92pmOjv68RVm7r6z6RefZvKvV1h89Mlx
x5vNTIwPr8AHzAqa+6CZ/OwVLkyq0vv8vJnp7KDwFerrHmYGpDaTv71CVHTh
3EmyZnZEZzjJyLcsPX6tqpn8Lhlt+06XaTTNbJxugJIRVPLGc/yXZvK/ZIT1
Pulj3U3FcnXxIhlFqrZlSweqyA+T4Z66t3G2sYp5aMehLBl57g6+XaaryB+T
Yf3r7+7x81XsO207j0jBtbNvM9fZqsgvU+A9xS2uYrWKpWnbzykFo3OLDi52
VpF/puBi2SXTG24qtlNnkCmYuXHbsAJPFflpCi74/L269ZSKDdINfAqOb8vo
999FFflrKiZOHXJEdUvFdNsbnYrqeMPUV6Eq8ttUcAaV/Y5HqZir7klFv31K
n4lJKvLfVDwo+2FLTLaKacOT4LDYPGBN0kyFivw4FeuV5pmXalVM6477lanw
tDoWXMapyJ/TkLP4u2MGn1Vsg27BNFgsCfea3FlNfp2Ga9nW2TP6qllnnUGl
wcXjytmRhmry7zSMaMmo/jBWzbTV6P8wDU+Tgz/EzFCTn6ch3ehYi+t8NdOl
Oy4NXyLMWr9Yqcnf03HC8qcxh1aoWZt23GakY7RvSVDDOjX5fTqMsnffnO+q
ZkHadt6djoFO6ycf3KUm/xe+v93dPchTzZaLB8Y5Z5NbL0+oiQfp0DvzKOXl
BTV7py1Hazr+9fi7d7C/mviQAZWvzbVDgWp2S3tc0wyY74g8gzA18SIDGyz3
/6d6pmZWugvMwA172YBTTE38yMD0EY9aumeomUaHhwz0brj69IBUTTzJgL4i
yaOoRM2uau39cwYc1/XfMKpOTXzJRMvSwScdNGqms+cFmeg/v2uP/e/VxJtM
WPpn9Tqlp2E6ez2ciS9lH0KPdtMQfzIREiv/uqWfhon2lwnV7PUT5g/TEI8y
sTRutsV/xhqms5eOWfAxT9z+YLKG+JSFaPs+zMpEw3Tja54FeTelQ+4CDfEq
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
5dn5Cv79f+9MdoI=
     "]], 
    RGBColor[0.5, 0, 0.5], 
    PointBox[CompressedData["
1:eJwdVA1UjmcY/nznG+ZEfqIfSunDN51YjE9T7vPRD2tRYqU1a0kzRZ/kZ0lK
oqQ1ajZFIb75aXQ6ac3f7TejKCmm5rT2Po+y5nlq+VQoe5/3Puc973nOec71
XPd9XdftFBG7ZJVapVItlz/xzzCE09oJEiTfe5s3NZrjigsLLdQuEuxy2WVO
+IbjDKUk0LyvD7j+NcfBxeNCI+dIMNTCaNJEcXyqHZjyw3wJznSndhkiOZYe
5j9X+kngm//r9IQIjrvHPLnfHSRB/TXDl7+EcwzLvm7WhUlQ6ugX37SCo5sC
KN/3YTGaLzgKtMwYCb5P13vpPufY1Ju05lK8BB91ac0+yzmWxK3e9yJRguiZ
poTwYI5p7YEVDmkSVGYfqolfxlEm17w4S4Ksa40sNYjjNIWgBM/M2odZgRw1
nw1zLT0sQVXJh5v3L+aosDshgeni8YZ9/hzP+rYkWJ2V4NII2+eZfhxTr949
6l0uQVD1mOLkhRxD3Mt+33RFAuMwG1ujL0dXpWEJdnTsnhLqzVHtIjqW4Hz0
9ca58zk+LjJ6DnksQbOXldbBwFEZX7MEi7svqHrmclTabZXAq5CsqfbgqNDj
8rzJubD8jzkqcN0S1LW41EbO5qhSikD8qBDUzeLYsOX5JLfBBNLnaLWtMzie
7qzzjxhOIMrf2FPoxnG7PL0cGwLPllnMCprGcal0Iv+mI4FTKyseqVw5fqAI
QmBmrLb+5BSO/fUCkEDRvI7JfjqOD2W0EHcCw786U9U6kePJSj99hoGA6UV9
RZIzx20wU7YMgdj9TW2WThyXyGq0BxIoibJflu/AcbIiMAGbhtZXjuM4vj0l
CBIITtl8+4gtxwcThMIETrv2oJ01R5PMriSOwIPCnU++s+K41UooQqAybdLQ
vhEcA7J+XDcylcD40EdBqyw5TlQMQ+CF71bTbQuOr4VdcgisG9be5zyEY42Q
N58AkOdLEgZxPC7kKJL7DZ1ScFfD8VsxvmICjZ7+f1ipOS4S7ZYRSNra0hvy
jqGzYkAC5ncr3xx4y7BHwN0kcOsgNNzvZXivWhQBl8bq7apuhse8y7v66glk
mgO7XF4y3Hyl0G7aUwJbitS6wE6Gn+pF4giE9r8bbWQMnRRDE7gcEXI+vZ3h
K50QhIDlokH9eW0Mq44KQPl9D3OriTI8YiccTcGQ0b2m+G+GG3NsZEtTiPSt
TTrTzPATC+FA+ew8dezxPxmOVwJCIdezWH/gCcOXfUJgChsH1lWlPGJ4Z5Mg
SCHOblRN1EOGBSK+egpq+5rZ3rUMN4i4AQV9TqDK/h7DBSIevhReX34wjt1h
aK8EjsK5DXFpFZUM/xP2C6GwoNfglniD4W0/pWHobHS3dr/K8JCQdzWF6Tfn
TuWXGK4XchgprA92XFvwG0MfMb4tFAa8d/CuTznDsUqAKZxt8fdsK2XYIehl
UMhMvH9xxzmGtwTcPgrRZbkeY4oZ5h0UJd/fqyk/dpJh7EiRYAoxA2IcdCcY
eslpe3OKgrZJHWM6ytBWWQgUKlP+ybUvYMgShaEp2NS4ZmflMbxhFoLI7/11
NeDVAYY/rROAFLa1JdcE5zBcK6N11lEo658xoDSb4TyxTpsohHWkN2n2MrRW
FgwFD0vrpQHpDP8V66qdQpRqRXjuTobXxHrpojB6zy1zbTLD/wEGxA5T
     "]], 
    RGBColor[0, 1, 1], 
    PointBox[CompressedData["
1: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
AD03/r/pzLSXxS/Q8zegrb30Ye+L5+T/urD7bw==
     "]]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"Molar Gibbs Energy, \\!\\(\\*UnderscriptBox[\\(G\\), \\(_\\)]\\)\"", 
      TraditionalForm], None}, {
     FormBox[
     "\"Mole Fraction B, \\!\\(\\*SubscriptBox[\\(x\\), \\(B\\)]\\)\"", 
      TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->550,
  LabelStyle->Directive[
    GrayLevel[0], 16],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-1.0221040894217768`, 0.45474552129504703`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.856884138231717*^9, 3.856885174637939*^9, {3.8568857529223557`*^9, 
   3.856885758139496*^9}, {3.856885851726655*^9, 3.856885859622311*^9}},
 CellLabel->
  "Out[444]=",ExpressionUUID->"0b608d4e-09fa-4cb0-8dc1-07bdd59b1228"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
In-fact, we can color the single-phase region points according to their \
composition\
\>", "Item",
 CellChangeTimes->{{3.856884284975436*^9, 
  3.856884339188538*^9}},ExpressionUUID->"5b851260-b213-4f1b-8342-\
4428299aa98d"],

Cell[CellGroupData[{

Cell["and connect the various miscibility gaps with dotted lines", "Subitem",
 CellChangeTimes->{{3.856884284975436*^9, 
  3.856884358484728*^9}},ExpressionUUID->"abb49580-018e-4d9f-8ece-\
492152240709"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "MPLColorMap", "]"}], "\n", 
 RowBox[{
  RowBox[{"<<", "\"\<http://pastebin.com/raw/pFsb4ZBS\>\""}], ";"}]}], "Input",\

 CellLabel->
  "In[435]:=",ExpressionUUID->"1500abb2-390f-47a7-b9d5-1aa13c1a6250"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"freeEnergyLineGraphicAndMiscibilityGaps", "[", 
    RowBox[{"functionList_", ",", "numPts_"}], "]"}], " ", ":=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"convexHullPoints", " ", "=", " ", 
        RowBox[{"getConvexHullVertices", "[", 
         RowBox[{"minimumPoints", "[", 
          RowBox[{"functionList", ",", " ", "numPts"}], "]"}], "]"}]}], ",", 
       "singlePhasePoints", ",", "miscibilityGaps", ",", 
       RowBox[{"cf", "=", 
        RowBox[{"MPLColorMap", "[", "\"\<Magma\>\"", "]"}]}], ",", "cols"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"singlePhasePoints", "=", 
       RowBox[{"Split", "[", 
        RowBox[{"convexHullPoints", ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"First", "[", "#2", "]"}], "-", 
            RowBox[{"First", "[", "#1", "]"}]}], "<", 
           RowBox[{"1.001", "/", "numPts"}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"miscibilityGaps", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Last", "[", "#1", "]"}], ",", 
           RowBox[{"First", "[", "#2", "]"}]}], "}"}], "&"}], "@@@", 
        RowBox[{"Partition", "[", 
         RowBox[{"singlePhasePoints", ",", "2", ",", "1"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cols", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"cf", "[", 
           RowBox[{"First", "[", "#", "]"}], "]"}], "&"}], ",", 
         "singlePhasePoints", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Line", "[", 
             RowBox[{"#1", ",", 
              RowBox[{"VertexColors", "\[Rule]", "#2"}]}], "]"}], "&"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"singlePhasePoints", ",", "cols"}], "}"}]}], "]"}], ",", 
         "Black", ",", "Dotted", ",", 
         RowBox[{"Line", "/@", "miscibilityGaps"}]}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.856884473440645*^9, 3.856884601160709*^9}, {
  3.8568846778722477`*^9, 3.856884734280775*^9}, {3.856884765302154*^9, 
  3.856884873261839*^9}, {3.856884958880187*^9, 3.856885009691154*^9}, {
  3.856886047850485*^9, 3.856886050666502*^9}, {3.8568860891213913`*^9, 
  3.85688609325812*^9}},
 CellLabel->
  "In[454]:=",ExpressionUUID->"55d76443-fc05-48c0-bac0-0740c0e5bbeb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"phase", "[", "\"\<A\>\"", "]"}], "[", "0.3", "]"}], "[", 
        "xB", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"phase", "[", "\"\<B\>\"", "]"}], "[", "0.3", "]"}], "[", 
        "xB", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"phase", "[", "\"\<C\>\"", "]"}], "[", "0.3", "]"}], "[", 
        "xB", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"xB", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "LightGray"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "550"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Mole Fraction B, \!\(\*SubscriptBox[\(x\), \(B\)]\)\>\"", ",", 
        "\"\<Molar Gibbs Energy, \!\(\*UnderscriptBox[\(G\), \(_\)]\)\>\""}], 
       "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"freeEnergyLineGraphicAndMiscibilityGaps", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"phase", "[", "\"\<A\>\"", "]"}], "[", "0.3", "]"}], ",", 
       RowBox[{
        RowBox[{"phase", "[", "\"\<B\>\"", "]"}], "[", "0.3", "]"}], ",", 
       RowBox[{
        RowBox[{"phase", "[", "\"\<C\>\"", "]"}], "[", "0.3", "]"}]}], "}"}], 
     ",", "1000"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.856885052439968*^9, 3.85688511122701*^9}, {
   3.856885864656725*^9, 3.856885873465089*^9}, {3.8568860549979963`*^9, 
   3.8568860614382772`*^9}, 3.856886105432184*^9},
 CellLabel->
  "In[455]:=",ExpressionUUID->"c13989c0-6523-4981-9e7e-c3e3ae194045"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {GrayLevel[0.85], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
qhESFFZMLSxg+xjH5vo0wf9CSrkD
        "]]},
      Annotation[#, "Charting`Private`Tag$286809#1"]& ], 
     TagBox[
      {GrayLevel[0.85], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
bLp/
        "]]},
      Annotation[#, "Charting`Private`Tag$286809#2"]& ], 
     TagBox[
      {GrayLevel[0.85], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwt2Xk4VN8fB3BbpYRIKYmsbUISJfkURSGyR4VIobKXhEjWCi1I2UPKkiVL
SR1k+SayrzNmtZuZq41U+J2e5/fPzPN67tw7c+655/35nGdknDzNXXi4uLii
uLm4/r0bukx01k5a6fguhGY96OxAfHoSXtSN6iDar8TnrNKJ9mQkp77eeATG
Rn81DgR2ohFJ+Vv+iibwYks8q66uExm19ZelbbQEt9sDKy7xdiH5e5tzl6Rt
ocrHOXP6cBf6a+j8+JyiPTSJdtpNBHchm/Nz7x9uPA8lAZHjk0QXatCTqPqY
egE+Ln0iX1XsRqpyB0t+SLvBJdWouvTT3YifEfbMWtEDftEn1U7Wd6NhlSi9
2I1+cP5K/6GO2z0oIWNDrcLpq7A8KpJfsqwHGQrna39IvQZ2/eJyRdQeVMlp
3UtIB4C4UJLmf/t6UVyR6DYzxZsgsHf4RQuzF2WuM428szEceD293xyU7UeB
bY8brKvDIdRxok3pWD+yjqDxyJ2OAPET819qrvSj1T+9Q96lRkL5en1SS1U/
ut6TcJ0lHQPHohozRw0GkNmjIXcTxThQocm4jtsOolv8r7fGbEwAwc7UpERT
Etph8CC6zCsBaoSa2UWeJNQV4TlJak4AWXUtUlw8CcnzKhUoX0uE2Q3ftF99
IaGmhRzlnq4kMA9o7gk0JKPV35P2St97AqsfeLJ59g+j5OEbehWL6aClk30A
ZinosKRtDsUqAwy2bOXvWENFU3aay/iLMuC/26djD+6kIilWgHPRrkzQbdF0
KHGgIk83DQUuciYYnrSfXWqiItHzxS9y9z2DmeRbGZ8NaOiUbVbxzNcciLX0
TnFbRkcEyXLVM4lcGL4SVia8ho4i7fldLPRy4W/ys9x8CTp67ewpUZmQC5fv
7ApGKnQk5HEwIlDzOSQo7XG/aEtHjWGDdsuD86BQpGmuPp+O1ApFlkvy58OG
l9kbVPUZSGDp1hkDqWJ4LrS20cmZiZLdbOyV9IvB/cVm3exLTCTfo+Qo4lEM
gb2Lg2RfJtJ52e9Mel8M9boGYQfCmejty6SKKuUSmCkNb87LYSK2BavG6EsJ
bD/Z4n5khImsXjz+7CtYBu1dPo2f7UeQghln4uPdcqjW0tf8qDuKJEIMtC5m
lYPYoyOy0oajaE1R5t1VVeVwJ9lS5arZKPrNb6FsxigHl90zrcKOo6ijtsqX
sq8C7CeLqUtBo+iG6q3FX6MVkKEmG9pZMYq+CIuJKR+qgnWWPf+5yo0h/y/7
IfnHW5Ax579SSowhIeWK0U/81ZBJmwl3+DmGcmJV7/2RrAZ3u6mGlX/GUKfx
1kH7o9UwXf39s/nycbTzs5ivQlI1NKlYn62SHEfUZuJ5meY7cL2QUtZ2bBwZ
1OUKtd2ogWTu3v0G6eNIvFyEws2NgBZ5J0EKJlAlQ6+1XbseXtxY07LedxLV
u6dtsmU1ACk5vP6n7xT6qXhQuOhKM7ScWdjAozuNeOYL1mxSaAGLFFJtKQ8L
aSw5Vlq8agXzKLTrZxoLtYarf2na0Q6fOq0uGsmykfT96fmXnA6QI+0Sv5vO
RtNzVEqvahcUyQYJJPFwUM7UuxahuG5Y37D6TrsDBwltziNGRnqAdjko6XUR
B91zq7iQKd8HlXNJzOBpDpo6VBQtsKMPTDd89PdjcZDBhtz8ayp9MAg1du5s
DuJpTuAYa/VBi6eOkCXBQQHyftfmTftATPfRHunvHHSBqhZpHtgH05TjVQm/
OeiwVUkuX1cfyEe+TFzkJ9DsoYIR15B+UPzhG0+WI1BNznSKf3g/DMy7OKXI
EyiMX8kiMqYf7ormvrRVIJBQR2Fd9qN+qGG3J/YoEkjR4VU6Ja8ftHk0pj5u
J5B1cOkpy45+eBJeXhStQqCKt1WtIDMAniuNpgu0COSn1lC+/uMA/LXPUnQ2
JdAF9S2ZD/4bgCLjI08FTxLolEbQ3dVfBoB3vbB/FfYBLXUnnsEB+K42eXml
OYF4dHOEOZwBeMF3yPS5JYHizcLdGyUGwcTtnESDLYHyvY5s8fMZBM1SjS0P
nAmU6pMpQPgPwv6H+Ru2nydQrN/fWbfgQQhxtQqtxfa6Xt7mED0IVcxl6WwX
AmmGygcapQ8CV0ed+GFXAjXE8/XJtmDLPdjZdplA1FcNdztlhsDOaZgn8CqB
Oth8LLWtQ1B4ubZpEbtW6ahxgtIQHJ3R5gu7RqDM/MbVNppDsIP8hBXpTyCn
502xZOMhmBtbvHYngEBjaf/Fj/sPwU7VzofXgwnEvtf6aKFtCARD3OhfwwlE
+bz6h333EJSZfpdyiSDQl1UnLGsHhmDjq6ihfuxX0W1it5lDoCRh2fouEo8n
/Esi//wQSEQKpwdHE+hHYMfjtfIk0BXes37yLoH+uPekbL9BApJzjJrjQwJZ
apx9oBxCglz9hU812IXcY5F7wkmgllD0fcMjAtknz3kfjCPB41vSi+3YdY0S
x8yekWDjmuav+xIJFLXl3I/rLSS4GfT+4uxjAq3tYxv/J0EGtb8XFLakEehy
1jXdNmky0FLmlD2xGy4vaXbJk0Hqg1fbe+xrvCJyZGUyBE+7f7JNJ9Cgqvo8
oUuG90Vp6F4GgTLu3sgVv0SGE7VPKyhZBNp5eMXihXdkcPlxwWDPcwKV5Bds
HaglA7U67PENbHWxk2bHm8hgpOZ0uQ5bezw5Z2cnGcYFUc6JPAKZxO4wmhkj
w4qbSuaOLwjkM3giOUB0GDLyoNQjH68H3W91U+LDcFSA2+YVdmBh0vTpzcNw
X7YujI0dHkLV0dk2DNYQddm9gEBJCt6jPDrDsElm2137QgK99U5Qu+c2DLVP
lPlUXxFIh7TvzILHMBRSNEVdseuPDEd4+A3DHGGdl4HdIq44eDJkGKLsxS8K
FhOI/L4qZF3iMFybd9BhYnOtIrWm1w6Drst92+ulBDJ4JnOxVJwChj178o6V
4/EmCyk2SVJAItRsyQN7S9yfkSEZCiy13icSsH8H9DrxKVFAePBpMhW7yCzG
3uYQBdT7RwS9KvB8cX+1WnClQGmwVmxwJf6+uWExUQ8K7FGuvZSGzWK1dCv6
4uMffjJqsJsGcsxOBlPggO/9lN/YASWnTmQ/oECYiL2GdxVeHw61R45XU8B7
VfcGozcEarUq4rVHFOBtp0Scx35j9LTep4ECnjZC94KxH2r6HUr9QgHWum/O
r7CPCm/TJhgUqNS+rivwlkBqy9b94Z2gwFyLSYAMttQf7uoNbApo7Qs4ron9
a4ykqTtHgXWt1Ipz2AUf4vckClBBZDwalWInlwd9e7mGCmFqCXUN2OH5bqUf
1lHhF1vybD+2fZKeyoQ0FbbHvnX8gy3iMbfjgDoVwjPTnupUE2jReWTSdD8V
hqzXuplgT9l2vjivQ4X9Uds7z2I3HC1QjDtGheRpfY9AbP/NDrL0M1SwVSwi
l2I7nVS1Jp+jwkjCVq0P2Ca3ue/0X6DCi5W2e1uwFSezv7Z5UWHiOYuPji0q
eVXh01UqDDpbDk5jL5jo2zbcwOeb3jSaxe4pn6itDqfCp17Zlave4bwZf/uj
IoYKbXrPLNdiF0jc3VYaR4XDMeyDkthhobvu5yVTIURrZlIJ2+P14sdnaVTQ
qy4oVMe2HWufS3tGBef9BwS1sVWNfRwSCqkQbTWcdxxbMkTvUXwpPq7/nW6K
vaJMrPlOJRVsKMy3VtjfRkZ/R7yjwsG7JSqnsSniVcq3aqnAnW2n54jdYhjt
FNRIhUhn5o/z2BXBtkn+LVQo/WZ0xA07s2RHi087FRztE3dfwb7H/LNwpYcK
N1Nra7ywr69v2+02SIXRO19GfbGdj6e7nKfg8eCouoZtEuT5xIFJhW3XE0UC
sLWKD7XZTVChtdpULBBbkSHCbc2mwsm9RHkQtsg6prrZNzxfJ/y+B2P/NSh3
NZ6jwj0zavtN7IkbEakGf6kg7q9qGII9Zb3TNYuLBnLki07/7DizlkealwZp
kREb/rkv5m9K6jIaeJ6PufzvfCO50b0S/DR4ZORr/+/6tTVt7Y9X0YA1r8v5
93s0rCvd1gnSwG/dr003sAuJdN5HwjTYpPRw3B9bNiYqbY0oDXpfrzG7ip0s
66UZJ0aDzFW+p3ywhWpOdQqI08Dp2psFD+xwq8OXYjbSYIMC7dAl7HnO9mUr
JGlQrzQpc/HffEeLZoRL0cD4blemE/aIzJ99PDI0KFZMeX8Wu8Oy9fKCAg0G
9jR2mGPrc8qXB26jQfi8XLMxdk1UWuavHTQgZZ85rY+dV+3R812FBkf1rc7u
+/d8WNp4eKvRQLlL5LMq9kM28BPqNLjintW3DfvmFhHtqf00uEbd3SyO/ePt
fO9FbRp8jVcuFMJ2t2B4jurQYM+Pn8rLsK0iX2fT9Ggg7U8S/IqfdyWWlUD/
CRqsCKlWbcB+Y2mM7pykwbeMxtlKbL33ur46FjQoT5E9/hLbLk6FlHuKBuzD
9Q/vYceorizwc6bBtm6ZtyewxZ4s2W+7QINnB/Xp2tiZ3LOiZFcaTJ15krjz
3/W7GDf0PGhwqqjq2QrsMb8aQ9EAGnyZOWRSjfPBZ7hssTGQhtfDsf5c7IWj
L8sCbtLgXbc56z62mHiSBP02DbLO2Fa7YOu99ZwqjqPBkn7g6ErszAXZOydy
aLC5dLOPNs47pQsbdbjzaCAWp/1mC3bVF+Fv5S/xeBM4MXzYXzL+2koW02B9
2HR7C87XhcN926ff0qDF4eyoGbZdZMyn6HYaPH9krWyI83iMExKs3UWD5OD7
27die9tc2z3TQ8Pr5XMxL3b0NucnNkM0CLgodfYdzv/KFm03xVEa7N4uoKXw
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
        "]]},
      Annotation[#, "Charting`Private`Tag$286809#3"]& ]}, {}}, 
   {Thickness[Large], {LineBox[CompressedData["
1:eJw1l2dYVFcXhVGMvaCxi0bB3jUiapT1Kd0GGiVRUZEgmqhoLGCwYsVYAFuI
LYgKiKCiCIrAAaQjMAzDwNA7DMzMvWKwB787czf3D896Zjj3nLP3Xu+aUc47
V27uqKenF9ZBT0/7t/2pqY/4dD5Pwr7cfyNd5myPqVvH+W0qySPtBE+7wXNv
hknZp8O/xe69tBU7WgbcObk1nz7fhYSbbS1/D5SxA/0fWld57kWrbbdbv8bI
6Pv7sZP7+Y9eDgXsD+XYGV3DDsJ/16X5jU0F9P9HYV5+W//dH3L2Q4Xd+b/c
jmFyhtXyt/qFtN4JDMh4s233mUIWY9uz46TTpxB0rqdZY/ciWt8bkevGLI30
LmJzI9Pd4//5Ex/fpYwaq6+g953DoEU99L08Fez5iJPNK55fwNnzct82jYLe
74sNvrXREqdidiN55OPdW/1gVxtkbCwppv1cxC8WfmsMF5Swko+6F6J75aIr
5cEltL/LmDXT1N3boJQNm1Y2urPXFcwffO9PE49S2u9V6HcsZW0lpWyti25F
ZA2fEP/JrIz274+j/WJmmQWUsWt/6x6cypINLv1aRue5howBmuK69eVMkfP+
x5p711Hqe/HStphyOt8NPFoUNOHggAo2pJND7ylPbmLvq0l7xuysoPPewr6U
Eyv2plWwn8UFYRnyzmVen0o6fwDep7n2GjKvki01PbPQqS4AXbZM37LOpZLu
4za+XD23ufOFSqZaoV3xNvo/7R4xIrqS7icQv/m8Dw+pqGRntzd8vv8mEBdd
ex8L6VJF93UHZyedG2I0rYpNOj1QOMIdfNshZtIQhyq6v7sYsFkPfgerWNZt
y6i3/93F0C9+YecDq+g+78H/RcydvulVTHtbgzsFYbFd+eSR6iq63yAMtJk2
ObZvNeteeGfXgu7B8Gwa69JoUk33HYx3ymSP4DXVLFR7XIMQ3Na/qfp8sJru
PwSexdGTG/+pZou1yw28D9+4Jd5uSdVUj/vYtHOFqV9tNdNdt2EovLw/rF3Z
uYbqE4oXgW1tT8fVMO3tSYweYKqhauhzmxqq1wMc4+dccvq1hk1w9ElqHR+G
T+Xr5j06U0P1C4NcnpJ3734NyxBWGzotHP9uz+pulVFD9QyHgebQab/GGrbV
T30QJg8R6bGv5EyXWqrvQ1xxPH9u+thaJmxOOPIjVH649O1pi1qq9yPMadOU
XnCuZauE5hFKCs8xJra2R2up/o+RODw+PPpmLbsr3F7hncdoOzBhdUlMLfXD
Y1g4lh15VljL/v1Ptl85NgKdHA65WP9bS/0RgdLVa6dfNKhjFroGiIBfdUmX
vybXUb9EIMy6pvNPNnVMKJ72QND0n7Aw/5c66p8nMF5zJannkTombu8J8lov
+nS6Vkf99ARlmzbcexlZx77XPU8xYKL9p5m5ddRfT2G/3/jwNmUdO56QKXTQ
UwyvnTPUVb+e+u0pkjMLIoyH17N8ofrCnWDXFieje7Prqf8i4Vjpb95sV8+M
dQtG4uQfuQ3vttZTP0Zi6NDBpele9WyPrgDPsHP5gcZN1+qpP59htHq0JOlJ
PXvVOl6o8DMEHPddocqsp36NgsmDp2MrqutZP3GDMHEd+82NT/XUv1Fgt21v
GfdrYLrdpUfh9/fb/nGf0ED9HI1h6aqIK/9rYE9ucsGpS6LxJnX9Aa+fGqi/
ozGvx52b89waWEfdgaPREts3OvFEA/X7cwTuPO886HoDWyk2DJwW3DWdH9FA
/f8cqU/uZ05Pa2CB2uPKniP0uiSstbSB5uEFzjHz7WdbGliLdrmfX2Dh9QWX
W7o00ny8gNOY78InDW9ki7TtX/IC2++fnG86s5HmJQZLUzamDLBuZLr23RCD
bpc7pKeta6T5iUFHgzlJy3Y1sipPbUFiMDVq3bSQE400Ty9xd4+zd6F/I5uh
a/CXSKjjzUvDGmm+XsKh9Td5VEIj87piLrTMS5jK9J9skTXSvMXC1yXbimto
ZHlGugKjwCCt4/LPjTR/sbg1VLXiRG8lG6V1f3UsMlwX3ro4SknzGIetr6vt
/pilZL9rx2NXHCar+mTPsVbSfMZhz5U5nnlrlCxRW923cciM6xpjvl1J8xqP
1D571T6HlcxAHEhsHZC4J8pXSfMbj4MdL4dGByqZ7vo+xuO10Uf1pUglzTND
T97Nf0mqkum2d5Chcz7XsaJQSfPNcO3S5xPLlUom0jwBSZ4Be699UtK8JyB4
womxr3o0sZDUJcJEJ6BpvEqdbthE8y/omamGYVOamL0wjUKPwvuHx/o7zJrI
DxLwvzl6LT3smtgHLX2SE1AfmmVyZmMT+UMC3N9ohtXtbGIBQ7UDkYhPjv35
7442kV8k4mvfl1/m+jYxG12BE+EQueDs9wFN5B+JMKssqun5uInxwdoNJiJ9
d8SyVNZEfiJ8fqe4t1NuE/PX7i4zEXO4dduLy5vIXxJhUDI71ETTxLTNZdsz
CVO9t/fY/V8T+U0SMo30pT49m5nWTaTLkrB/fA/4DGsm/0lCjffdi7smNjNt
twgtg7bb+j1nzW0mP0pC/yHuSoV1M9MdV5KEcL8tW50dmsmfkhBr7pqS7dLM
dMv1e4WS38fNN9zTTH71Ci0JZ7ss92pmOjv68RVm7r6z6RefZvKvV1h89Mlx
x5vNTIwPr8AHzAqa+6CZ/OwVLkyq0vv8vJnp7KDwFerrHmYGpDaTv71CVHTh
3EmyZnZEZzjJyLcsPX6tqpn8Lhlt+06XaTTNbJxugJIRVPLGc/yXZvK/ZIT1
Pulj3U3FcnXxIhlFqrZlSweqyA+T4Z66t3G2sYp5aMehLBl57g6+XaaryB+T
Yf3r7+7x81XsO207j0jBtbNvM9fZqsgvU+A9xS2uYrWKpWnbzykFo3OLDi52
VpF/puBi2SXTG24qtlNnkCmYuXHbsAJPFflpCi74/L269ZSKDdINfAqOb8vo
999FFflrKiZOHXJEdUvFdNsbnYrqeMPUV6Eq8ttUcAaV/Y5HqZir7klFv31K
n4lJKvLfVDwo+2FLTLaKacOT4LDYPGBN0kyFivw4FeuV5pmXalVM6477lanw
tDoWXMapyJ/TkLP4u2MGn1Vsg27BNFgsCfea3FlNfp2Ga9nW2TP6qllnnUGl
wcXjytmRhmry7zSMaMmo/jBWzbTV6P8wDU+Tgz/EzFCTn6ch3ehYi+t8NdOl
Oy4NXyLMWr9Yqcnf03HC8qcxh1aoWZt23GakY7RvSVDDOjX5fTqMsnffnO+q
ZkHadt6djoFO6ycf3KUm/xe+v93dPchTzZaLB8Y5Z5NbL0+oiQfp0DvzKOXl
BTV7py1Hazr+9fi7d7C/mviQAZWvzbVDgWp2S3tc0wyY74g8gzA18SIDGyz3
/6d6pmZWugvMwA172YBTTE38yMD0EY9aumeomUaHhwz0brj69IBUTTzJgL4i
yaOoRM2uau39cwYc1/XfMKpOTXzJRMvSwScdNGqms+cFmeg/v2uP/e/VxJtM
WPpn9Tqlp2E6ez2ciS9lH0KPdtMQfzIREiv/uqWfhon2lwnV7PUT5g/TEI8y
sTRutsV/xhqms5eOWfAxT9z+YLKG+JSFaPs+zMpEw3Tja54FeTelQ+4CDfEq
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
5dn5Cv79f+9MdoI=
      "],
      VertexColors->{
        RGBColor[0.00146159096, 0.000466127766, 0.01386552], 
        RGBColor[0.00166458348305, 0.0006774785347200001, 0.0150042546555], 
        RGBColor[0.0018675760061000002`, 0.00088882930344, 0.016142989311], 
        RGBColor[0.00207056852915, 0.00110018007216, 0.0172817239665], 
        RGBColor[0.0022780759130000003`, 0.001315145822, 0.01843868976], 
        RGBColor[0.0025386329112500002`, 0.0015725876, 0.019809871425], 
        RGBColor[0.0027991899095, 0.001830029378, 0.021181053090000002`], 
        RGBColor[0.00305974690775, 0.002087471156, 0.022552234755], 
        RGBColor[
        0.0033287470200000003`, 0.00235196378, 0.023958584172000003`], 
        RGBColor[0.00364312887, 0.0026543547012499997`, 0.025553960256], 
        RGBColor[0.00395751072, 0.0029567456225, 0.02714933634], 
        RGBColor[0.00427189257, 0.0032591365437499996`, 0.028744712424], 
        RGBColor[0.004598550279, 0.0035715250604, 0.030394603716], 
        RGBColor[0.00496510452975, 0.0039164057621, 0.032221669434], 
        RGBColor[0.0053316587805, 0.0042612864638, 0.034048735152], 
        RGBColor[0.00569821303125, 0.0046061671655, 0.035875800869999995`], 
        RGBColor[0.0060808271204, 0.0049639128976, 0.037757142131999995`], 
        RGBColor[0.006498572106050001, 0.0053498008837, 0.0397572111465], 
        RGBColor[
        0.006916317091699999, 0.0057356888697999995`, 0.041757280161], 
        RGBColor[0.00733406207735, 0.0061215768559, 0.0437573491755], 
        RGBColor[0.0077717913400000005`, 0.006522707604, 0.04576020527], 
        RGBColor[0.008240496232, 0.006947464633200001, 0.0477673813385], 
        RGBColor[0.008709201124, 0.007372221662399999, 0.049774557407], 
        RGBColor[0.009177906016, 0.007796978691600001, 0.051781733475500004`], 
        RGBColor[0.009670770676000001, 0.008238625836000001, 0.053792989928], 
        
        RGBColor[0.010190815075000002`, 0.00869927436, 0.055808836812500005`], 
        RGBColor[0.010710859473999999`, 0.009159922883999999, 0.057824683697], 
        RGBColor[
        0.011230903872999999`, 0.009620571408, 0.059840530581500004`], 
        RGBColor[0.011779332866000001`, 0.0101002335616, 0.061858010482], 
        RGBColor[0.012351077775500001`, 0.0105955140538, 0.06387683178850001], 
        RGBColor[0.012922822685, 0.011090794546, 0.065895653095], 
        RGBColor[0.0134945675945, 0.0115860750382, 0.0679144744015], 
        RGBColor[0.01409928036, 0.012101776148, 0.069936357372], 
        RGBColor[0.014723567790000001`, 0.0126296019995, 0.0719600582055], 
        RGBColor[0.015347855220000003`, 0.013157427851, 0.07398375903900001], 
        
        RGBColor[
        0.015972142650000003`, 0.013685253702500002`, 0.0760074598725], 
        RGBColor[0.016634486472, 0.014233936765999999`, 0.078039394266], 
        RGBColor[
        0.017312687123999998`, 0.014791310334499999`, 0.0800747593095], 
        RGBColor[0.017990887776, 0.015348683903, 0.082110124353], 
        RGBColor[0.018669088428, 0.0159060574715, 0.0841454893965], 
        RGBColor[0.0193906804, 0.016485045320000002`, 0.08618961276], 
        RGBColor[0.020124204985, 0.017069977095500004`, 0.08823614466150001], 
        
        RGBColor[0.02085772957, 0.017654908871, 0.090282676563], 
        RGBColor[0.021591254154999996`, 0.0182398406465, 0.09232920846449999], 
        RGBColor[0.022373900428, 0.018846951062, 0.094384504], 
        RGBColor[0.023164361515, 0.019457589897500002`, 0.09644119375], 
        RGBColor[0.023954822602, 0.020068228733, 0.0984978835], 
        RGBColor[0.024745283689000003`, 0.0206788675685, 0.10055457325], 
        RGBColor[0.02559122956, 0.021311461316, 0.10262229076], 
        RGBColor[0.02644064323, 0.021945427245500002`, 0.10469069750500001`], 
        
        RGBColor[
        0.027290056900000005`, 0.022579393175000004`, 0.10675910425000001`], 
        RGBColor[0.028140678975, 0.023213749338499998`, 0.10882784284], 
        RGBColor[0.0290517213, 0.023867617202, 0.11091317368], 
        RGBColor[0.029962763625, 0.0245214850655, 0.11299850452], 
        RGBColor[0.03087380595, 0.025175352929, 0.11508383536], 
        RGBColor[0.03179115331, 0.0258309246225, 0.11717083885], 
        RGBColor[0.032766506992000004`, 0.026502171552, 0.11927323072], 
        RGBColor[0.033741860674, 0.0271734184815, 0.12137562259000001`], 
        RGBColor[
        0.034717214356000003`, 0.027844665411000002`, 0.12347801446000001`], 
        RGBColor[0.035704408618, 0.028518601868999998`, 0.125583152005], 
        RGBColor[0.03674685892, 0.02920508946, 0.12770110269999999`], 
        RGBColor[0.037789309222, 0.029891577051, 0.129819053395], 
        RGBColor[0.038831759524000004`, 0.030578064642, 0.13193700409], 
        RGBColor[0.039882855307000004`, 0.0312676927145, 0.13405921066], 
        RGBColor[0.040959222496, 0.031966500656, 0.13619385748], 
        RGBColor[
        0.042035589685000006`, 0.0326653085975, 0.13832850430000002`], 
        RGBColor[0.043111956874000004`, 0.033364116539000004`, 0.14046315112], 
        RGBColor[0.044189263848500006`, 0.034066001336000004`, 0.1426037119], 
        
        RGBColor[0.04526845039400001, 0.034774039844, 0.1447561006], 
        RGBColor[0.04634763693950001, 0.035482078352000006`, 0.1469084893], 
        RGBColor[0.047426823485000005`, 0.03619011686, 0.149060878], 
        RGBColor[0.048508813068499995`, 0.0369006092495, 0.15122096278], 
        RGBColor[0.049594806991999994`, 0.037614607184, 0.15339204195999998`], 
        RGBColor[
        0.05068080091549999, 0.038328605118499996`, 0.15556312113999998`], 
        RGBColor[0.051766794839, 0.039042603052999995`, 0.15773420032], 
        RGBColor[0.052857246175, 0.0397507633125, 0.15991659587499998`], 
        RGBColor[0.05395233322, 0.040452852389999995`, 0.16211076046], 
        RGBColor[0.055047420265, 0.0411549414675, 0.164304925045], 
        RGBColor[0.05614250731, 0.041857030545, 0.16649908963], 
        RGBColor[0.057243399604, 0.0425419094855, 0.16870466209], 
        RGBColor[0.05834869588, 0.04321373246, 0.1709188888], 
        RGBColor[0.059453992156, 0.0438855554345, 0.17313311551000002`], 
        RGBColor[0.060559288432, 0.044557378409, 0.17534734222000004`], 
        RGBColor[
        0.0616722228715, 0.045210834788000004`, 0.17757467488000003`], 
        RGBColor[0.062789323582, 0.045854273024000004`, 0.17980915624000002`], 
        RGBColor[
        0.0639064242925, 0.046497711260000005`, 0.18204363760000003`], 
        RGBColor[0.06502352500299999, 0.047141149496, 0.18427811896], 
        RGBColor[0.0661503867575, 0.04776338669499999, 0.18652756867], 
        RGBColor[0.06728094188, 0.048377601879999996`, 0.18878268207999999`], 
        
        RGBColor[0.0684114970025, 0.048991817065, 0.19103779549], 
        RGBColor[0.069542052125, 0.049606032249999994`, 0.1932929089], 
        RGBColor[0.070684750648, 0.05019598015, 0.19556477163], 
        RGBColor[0.071830410976, 0.0507800092, 0.19784071956], 
        RGBColor[0.072976071304, 0.05136403825, 0.20011666749], 
        RGBColor[0.074121731632, 0.051948067300000005`, 0.20239261542], 
        RGBColor[0.075282175045, 0.0525045098875, 0.20468694472500001`], 
        RGBColor[0.076444589536, 0.053057274280000004`, 0.20698372488], 
        RGBColor[0.077607004027, 0.053610038672500006`, 0.209280505035], 
        RGBColor[0.07876941851800001, 0.054162803065, 0.21157728519000002`], 
        RGBColor[
        0.07994950723550001, 0.05468439191800001, 0.21389385228000002`], 
        RGBColor[
        0.08113031735000001, 0.05520470830000001, 0.21621122700000003`], 
        RGBColor[0.0823111274645, 0.05572502468200001, 0.21852860172000002`], 
        
        RGBColor[0.08349272271699999, 0.0562440186, 0.22084676412], 
        RGBColor[0.0846935538505, 0.05673061215, 0.22318422468], 
        RGBColor[0.085894384984, 0.0572172057, 0.22552168524], 
        RGBColor[0.0870952161175, 0.05770379925, 0.2278591458], 
        RGBColor[0.088298590552, 0.058186266606, 0.23019887274], 
        RGBColor[0.08952103974400001, 0.058637787507, 0.23255559753], 
        RGBColor[0.09074348893600001, 0.059089308408, 0.23491232232], 
        RGBColor[0.09196593812800001, 0.059540829309, 0.23726904711], 
        RGBColor[0.09319293068000001, 0.059985197935000005`, 0.23962931865], 
        RGBColor[0.09443855100800001, 0.060400242233500004`, 0.242004131865], 
        
        RGBColor[0.095684171336, 0.060815286532, 0.24437894508], 
        RGBColor[0.09692979166400001, 0.0612303308305, 0.24675375829500001`], 
        
        RGBColor[0.09818218165, 0.061634968873, 0.24913310366], 
        RGBColor[0.09945246287500001, 0.062012104667500005`, 0.25152442685], 
        RGBColor[0.10072274410000001`, 0.062389240462000006`, 0.25391575004], 
        
        RGBColor[0.10199302532500001`, 0.0627663762565, 0.25630707323], 
        RGBColor[0.10327250563, 0.063129628741, 0.25870350796999997`], 
        RGBColor[0.104568850915, 0.06346742849050001, 0.26110931388499997`], 
        RGBColor[0.1058651962, 0.06380522824, 0.2635151198], 
        RGBColor[0.107161541485, 0.0641430279895, 0.265920925715], 
        RGBColor[0.10847021392, 0.064462372016, 0.26833338795], 
        RGBColor[0.10979513578, 0.064757388044, 0.270754624425], 
        RGBColor[0.11112005764, 0.065052404072, 0.2731758609], 
        RGBColor[0.1124449795, 0.0653474201, 0.275597097375], 
        RGBColor[0.11378482692, 0.065620361855, 0.27802374613999997`], 
        RGBColor[0.11513902583999999`, 0.0658720783475, 0.28045559903], 
        RGBColor[0.11649322476, 0.06612379484, 0.28288745192], 
        RGBColor[0.11784742368, 0.0663755113325, 0.28531930481], 
        RGBColor[0.1192191774, 0.06660148213999999, 0.28775447225], 
        RGBColor[0.12060321948, 0.066809430968, 0.290191959875], 
        RGBColor[0.12198726156, 0.067017379796, 0.29262944750000003`], 
        RGBColor[0.12337130364000001`, 0.067225328624, 0.29506693512500004`], 
        
        RGBColor[0.12477573297000001`, 0.067403492755, 0.297505226], 
        RGBColor[0.126190355925, 0.0675667645375, 0.2999439185], 
        RGBColor[0.12760497888, 0.06773003632, 0.30238261099999997`], 
        RGBColor[0.129019601835, 0.0678933081025, 0.3048213035], 
        RGBColor[0.1304580867, 0.068021633546, 0.30725875320999996`], 
        RGBColor[0.13190473485, 0.068138003663, 0.309695777755], 
        RGBColor[0.13335138300000002`, 0.06825437378, 0.3121328023], 
        RGBColor[0.13479803115, 0.068370743897, 0.31456982684499996`], 
        RGBColor[0.13627229429999999`, 0.06844646595199999, 0.3170028175], 
        RGBColor[0.13775247494999998`, 0.068513477708, 0.31943494375], 
        RGBColor[0.13923265559999998`, 0.068580489464, 0.32186707], 
        RGBColor[0.14071283624999997`, 0.06864750121999999, 0.32429919625], 
        RGBColor[0.14222122685999997`, 0.068673428099, 0.32671653787], 
        RGBColor[0.14373268376999998`, 0.06869488923049999, 0.329132272465], 
        RGBColor[0.14524414067999997`, 0.068716350362, 0.33154800706], 
        RGBColor[0.14675559758999998`, 0.06873781149349999, 0.333963741655], 
        RGBColor[0.14829872974999997`, 0.0687128892, 0.33635944425], 
        RGBColor[0.14984249541499997`, 0.068687039238, 0.33875474620499996`], 
        
        RGBColor[0.15138626107999997`, 0.068661189276, 0.34115004816], 
        RGBColor[0.15293189140999996`, 0.068632617339, 0.34354370367], 
        RGBColor[0.15450735638, 0.068560493802, 0.34591101606], 
        RGBColor[0.15608282134999998`, 0.068488370265, 0.34827832845], 
        RGBColor[0.15765828632, 0.068416246728, 0.35064564084], 
        RGBColor[0.1592376827, 0.068338512124, 0.35300752193], 
        RGBColor[0.1608417908, 0.068225507956, 0.35533526342], 
        RGBColor[0.1624458989, 0.068112503788, 0.35766300491], 
        RGBColor[0.164050007, 0.06799949962, 0.3599907464], 
        RGBColor[0.16566040060999998`, 0.06787756404050001, 0.362308918055], 
        RGBColor[0.16729365061999998`, 0.06772315060100001, 0.36459229031], 
        RGBColor[0.16892690063, 0.0675687371615, 0.36687566256500004`], 
        RGBColor[0.17056015064, 0.067414323722, 0.36915903482000006`], 
        RGBColor[0.172200435275, 0.0672506120975, 0.3714253020500001], 
        RGBColor[0.17385760301, 0.067064584829, 0.37365051722000003`], 
        RGBColor[0.17551477074500002`, 0.0668785575605, 0.37587573239000005`], 
        RGBColor[0.17717193848, 0.066692530292, 0.37810094756], 
        RGBColor[0.178837698965, 0.066495687226, 0.38030231887000004`], 
        RGBColor[0.18051793145000003`, 0.06628062808, 0.38246353210000006`], 
        RGBColor[0.18219816393500002`, 0.066065568934, 0.38462474533], 
        RGBColor[0.18387839641999998`, 0.065850509788, 0.38678595856], 
        RGBColor[0.18556664682, 0.0656273158065, 0.38891314512999997`], 
        RGBColor[0.18726465815999996`, 0.065394218547, 0.39099890794], 
        RGBColor[0.18896266949999996`, 0.0651611212875, 0.39308467075], 
        RGBColor[0.19066068083999996`, 0.064928024028, 0.39517043356], 
        RGBColor[0.19236655781999995`, 0.064689282729, 0.39721266184], 
        RGBColor[0.19407942647999996`, 0.064445524506, 0.39921619276], 
        RGBColor[0.19579229514, 0.064201766283, 0.40121972368], 
        RGBColor[0.1975051638, 0.06395800806, 0.40322325459999997`], 
        RGBColor[0.199224367775, 0.06371426800300001, 0.40517227759999996`], 
        RGBColor[0.20094765905, 0.063470539666, 0.4070861342], 
        RGBColor[0.202670950325, 0.063226811329, 0.4089999908], 
        RGBColor[0.2043942416, 0.062983082992, 0.4109138474], 
        RGBColor[0.206121938325, 0.06274652367, 0.41276245489999996`], 
        RGBColor[0.20785164897, 0.062513241612, 0.41458123424], 
        RGBColor[0.20958135961500002`, 0.062279959554, 0.41640001358], 
        RGBColor[0.21131107026, 0.062046677496, 0.41821879291999997`], 
        RGBColor[0.21304279915500002`, 0.061829294919, 0.419962030625], 
        RGBColor[0.21477514905, 0.06161680449, 0.42168202475], 
        RGBColor[0.216507498945, 0.061404314061, 0.42340201887499995`], 
        RGBColor[0.21823984884, 0.061191823632, 0.42512201299999997`], 
        RGBColor[0.21997153503, 0.0610051306875, 0.426757055465], 
        RGBColor[0.22170309774000002`, 0.060823237275000004`, 0.42837629297], 
        
        RGBColor[0.22343466045000002`, 0.0606413438625, 0.429995530475], 
        RGBColor[0.22516622316000004`, 0.06045945045, 0.43161476798000004`], 
        RGBColor[0.22689403550500004`, 0.060314407082, 0.43314069803], 
        RGBColor[0.22862152867000002`, 0.060172499888, 0.43465868702], 
        RGBColor[0.23034902183500003`, 0.060030592694, 0.43617667601], 
        RGBColor[0.232076515, 0.0598886855, 0.437694665], 
        RGBColor[0.23379763138, 0.0597939154895, 0.43911280517], 
        RGBColor[0.23551874776, 0.059699145478999995`, 0.44053094534000004`], 
        
        RGBColor[0.23723986414, 0.0596043754685, 0.44194908551], 
        RGBColor[0.23896033467999997`, 0.0595137464, 0.44335959778], 
        RGBColor[0.24067321659999996`, 0.0594717734, 0.444680482225], 
        RGBColor[0.24238609851999998`, 0.0594298004, 0.44600136666999995`], 
        RGBColor[0.24409898043999997`, 0.0593878274, 0.44732225111499996`], 
        RGBColor[0.24581025807999995`, 0.05935492934, 0.44862840963999995`], 
        RGBColor[0.24751291271499998`, 0.059370809082499997`, 0.449855416345], 
        RGBColor[0.24921556734999997`, 0.059386688825, 0.45108242304999996`], 
        
        RGBColor[0.25091822198499997`, 0.0594025685675, 0.452309429755], 
        RGBColor[0.25261847511999996`, 0.059432165174, 0.4535154607], 
        RGBColor[0.25431092338, 0.0595063415885, 0.454653320425], 
        RGBColor[0.25600337164, 0.059580518003, 0.45579118015], 
        RGBColor[0.2576958199, 0.0596546944175, 0.456929039875], 
        RGBColor[0.2593844592, 0.059748101848, 0.45804035383999997`], 
        RGBColor[0.2610647664, 0.059883577126, 0.459093598955], 
        RGBColor[0.2627450736, 0.060019052404, 0.46014684407], 
        RGBColor[0.2644253808, 0.060154527682000004`, 0.461200089185], 
        RGBColor[0.2661014785, 0.06031254338, 0.46222230480000004`], 
        RGBColor[0.267771051475, 0.060505496729, 0.46319642469], 
        RGBColor[0.26944062445, 0.060698450078, 0.46417054458], 
        RGBColor[0.271110197425, 0.060891403427, 0.46514466447], 
        RGBColor[0.27277399432, 0.061111666208, 0.46608396936], 
        RGBColor[0.274431293125, 0.0613626521, 0.466984107375], 
        RGBColor[0.27608859193, 0.061613637992, 0.46788424539], 
        RGBColor[0.277745890735, 0.061864623884000006`, 0.468784383405], 
        RGBColor[0.27939739158, 0.062144387350000004`, 0.46964680514], 
        RGBColor[0.281044129815, 0.0624477895375, 0.470478245645], 
        RGBColor[0.28269086805, 0.062751191725, 0.47130968615], 
        RGBColor[0.284337606285, 0.0630545939125, 0.47214112665499997`], 
        RGBColor[0.2859774522, 0.0633893577, 0.47293268924], 
        RGBColor[0.2876132058, 0.0637427424375, 0.47370057431], 
        RGBColor[0.28924895940000006`, 0.064096127175, 0.47446845938], 
        RGBColor[0.290884713, 0.0644495119125, 0.47523634444999996`], 
        RGBColor[0.29251324428, 0.06483489562799999, 0.47596282502], 
        RGBColor[0.29413876625999996`, 0.065233612251, 0.476672053715], 
        RGBColor[0.29576428823999995`, 0.06563232887399999, 0.47738128241], 
        RGBColor[0.29738981021999994`, 0.066031045497, 0.478090511105], 
        RGBColor[0.29900851859999994`, 0.06646070359999999, 0.4787571], 
        RGBColor[0.30062535323999995`, 0.06689887061, 0.47941196295], 
        RGBColor[0.30224218787999996`, 0.06733703762, 0.4800668259], 
        RGBColor[0.30385902251999997`, 0.06777520462999999, 0.48072168885], 
        RGBColor[0.30546717992, 0.06824611413, 0.48133402096], 
        RGBColor[0.30707395685, 0.0687222326625, 0.4819395868], 
        RGBColor[0.30868073378, 0.069198351195, 0.48254515264], 
        RGBColor[0.31028751071, 0.0696744697275, 0.48315071847999996`], 
        RGBColor[0.31188735691999997`, 0.07017936882, 0.48371292136], 
        RGBColor[0.31348676996, 0.07068606669750001, 0.484272414055], 
        RGBColor[0.315086183, 0.071192764575, 0.48483190675], 
        RGBColor[0.31668545945500004`, 0.07169998931600001, 0.48539056885], 
        RGBColor[0.31827790666, 0.072233557232, 0.4859077012], 
        RGBColor[0.319870353865, 0.07276712514800002, 0.48642483355], 
        RGBColor[0.32146280107, 0.07330069306400001, 0.4869419659], 
        RGBColor[0.32305449880000003`, 0.07383668934250001, 0.487455358925], 
        RGBColor[0.32463930136, 0.07439502655600001, 0.48793435016000003`], 
        RGBColor[0.32622410392, 0.0749533637695, 0.48841334139500003`], 
        RGBColor[0.32780890648, 0.075511700983, 0.48889233263000004`], 
        RGBColor[0.32939274392499995`, 0.07607341493799999, 0.48936497666], 
        RGBColor[0.33097207749999996`, 0.07665088701999999, 0.4898080004], 
        RGBColor[0.33255141107499997`, 0.077228359102, 0.49025102414], 
        RGBColor[0.33413074465, 0.077805831184, 0.49069404788], 
        RGBColor[0.33570882743, 0.078387385721, 0.491128610505], 
        RGBColor[0.33728325404000004`, 0.078980873588, 0.49153844064], 
        RGBColor[0.33885768065000005`, 0.079574361455, 0.49194827077500003`], 
        
        RGBColor[
        0.34043210726000006`, 0.08016784932200001, 0.49235810091000004`], 
        RGBColor[0.342004816445, 0.08076604958050002, 0.49275793717], 
        RGBColor[0.34357409078000006`, 0.08137367462200001, 0.49313778568], 
        RGBColor[0.34514336511500004`, 0.08198129966350001, 0.49351763419], 
        RGBColor[0.3467126394500001, 0.08258892470500002, 0.4938974827], 
        RGBColor[0.3482801709950001, 0.08320111077850002, 0.494265841165], 
        RGBColor[0.34984521284000003`, 0.08381981261200001, 0.49461778528], 
        RGBColor[0.35141025468500003`, 0.0844385144455, 0.494969729395], 
        RGBColor[0.35297529653000004`, 0.085057216279, 0.49532167351], 
        RGBColor[0.3545387585, 0.0856799509375, 0.49566075037499996`], 
        RGBColor[0.3561005774, 0.086306879734, 0.49598644529999997`], 
        RGBColor[0.3576623963, 0.0869338085305, 0.49631214022500003`], 
        RGBColor[
        0.35922421520000003`, 0.08756073732700001, 0.49663783515000004`], 
        RGBColor[0.360784469115, 0.08819123045550001, 0.49694966764000004`], 
        RGBColor[0.3623435358, 0.08882442756000002, 0.49725098380000005`], 
        RGBColor[0.36390260248500006`, 0.08945762466450002, 0.49755229996], 
        RGBColor[0.36546166916999995`, 0.09009082176899999, 0.49785361612], 
        RGBColor[0.36701913370499994`, 0.090727081719, 0.498140367895], 
        RGBColor[
        0.36857572433999997`, 0.09136501231199999, 0.49841917546000003`], 
        RGBColor[0.370132314975, 0.092002942905, 0.498697983025], 
        RGBColor[0.37168890560999995`, 0.092640873498, 0.49897679059], 
        RGBColor[
        0.37324365826999994`, 0.09328150775499999, 0.49924077577000003`], 
        RGBColor[
        0.37479771547999996`, 0.09392316501999999, 0.49949915248000004`], 
        RGBColor[0.37635177269, 0.09456482228499997, 0.49975752919000005`], 
        RGBColor[0.37790582989999993`, 0.09520647954999997, 0.5000159059], 
        RGBColor[0.3794587710899999, 0.09584943095949998, 0.50025832418], 
        RGBColor[0.38101144007999993`, 0.09649269801399997, 0.50049685016], 
        RGBColor[0.38256410907, 0.09713596506849997, 0.50073537614], 
        RGBColor[0.38411677806, 0.09777923212299998, 0.5009739021199999], 
        RGBColor[0.3856685511, 0.09842293556499998, 0.5011959751999999], 
        RGBColor[0.38722020468, 0.09906669719199998, 0.5014158545599999], 
        RGBColor[0.38877185826, 0.099710458819, 0.5016357339199999], 
        RGBColor[0.39032351184, 0.100354220446, 0.50185561328], 
        RGBColor[0.391874526705, 0.10099753436, 0.50205860773], 
        RGBColor[0.39342551550000004`, 0.10164083, 0.502260913], 
        RGBColor[0.39497650429500003`, 0.10228412564, 0.50246321827], 
        RGBColor[0.39652747993000004`, 0.10292737071000001`, 0.50266487171], 
        RGBColor[0.398078133145, 0.103569376815, 0.502850555315], 
        RGBColor[0.39962878636, 0.10421138292, 0.5030362389199999], 
        RGBColor[0.40117943957499996`, 0.104853389025, 0.503221922525], 
        RGBColor[0.40273008825999995`, 0.10549516217999998`, 0.50340575171], 
        RGBColor[0.40428070296999996`, 0.10613518820999998`, 0.503575672745], 
        
        RGBColor[
        0.40583131767999997`, 0.10677521423999999`, 0.5037455937800001], 
        RGBColor[0.40738193239, 0.10741524026999999`, 0.5039155148150001], 
        RGBColor[
        0.40893251294999994`, 0.10805484129999998`, 0.5040826042500001], 
        RGBColor[0.41048295349499997`, 0.10869269982999999`, 0.504238084125], 
        
        RGBColor[0.41203339404, 0.10933055836, 0.504393564], 
        RGBColor[0.413583834585, 0.10996841689, 0.5045490438750001], 
        RGBColor[0.41513443851000004`, 0.11060540931000001`, 0.50470055944], 
        RGBColor[0.416685474225, 0.111240112725, 0.5048415979], 
        RGBColor[
        0.41823650994000006`, 0.11187481614000001`, 0.5049826363600001], 
        RGBColor[0.41978754565500004`, 0.112509519555, 0.5051236748200001], 
        RGBColor[
        0.42133887972000006`, 0.11314296432000001`, 0.5052598150300001], 
        RGBColor[
        0.42289076076000004`, 0.11377410156000001`, 0.5053869751150001], 
        RGBColor[0.4244426418, 0.1144052388, 0.5055141352], 
        RGBColor[0.42599452284, 0.11503637604, 0.505641295285], 
        RGBColor[0.42754686896, 0.11566582818999999`, 0.50576267872], 
        RGBColor[0.42909982814, 0.116293059085, 0.50587644748], 
        RGBColor[0.43065278732, 0.11692028998, 0.5059902162400001], 
        RGBColor[0.4322057465, 0.11754752087499999`, 0.506103985], 
        RGBColor[0.43375936569, 0.11817261951, 0.5062111393600001], 
        RGBColor[0.435313619505, 0.118795667895, 0.50631193372], 
        RGBColor[0.43686787332000004`, 0.11941871628, 0.50641272808], 
        RGBColor[0.438422127135, 0.12004176466500001`, 0.50651352244], 
        RGBColor[
        0.43997726130000003`, 0.12066222255000002`, 0.5066068930000001], 
        RGBColor[0.44153301171000003`, 0.12128086708500002`, 0.5066950669], 
        RGBColor[0.44308876212000003`, 0.12189951162000003`, 0.5067832408], 
        RGBColor[0.44464451253000004`, 0.12251815615500002`, 0.5068714147], 
        RGBColor[0.44620138494, 0.12313375021000002`, 0.50695137284], 
        RGBColor[
        0.44775881835000003`, 0.12374781902500001`, 0.5070272230999999], 
        RGBColor[0.44931625176, 0.12436188784, 0.5071030733599999], 
        RGBColor[0.45087368517, 0.12497595665499998`, 0.5071789236199999], 
        RGBColor[0.45243250083, 0.12558651959, 0.5072457728199999], 
        RGBColor[0.453991789365, 0.126195883145, 0.50730954271], 
        RGBColor[0.45555107790000005`, 0.1268052467, 0.5073733126000001], 
        RGBColor[0.457110366435, 0.127414610255, 0.5074370824900001], 
        RGBColor[0.45867131376000003`, 0.12802002413000002`, 0.50749106596], 
        RGBColor[0.46023261654000003`, 0.128624591645, 0.50754295234], 
        RGBColor[0.46179391931999997`, 0.12922915916, 0.50759483872], 
        RGBColor[0.46335522209999996`, 0.12983372667499998`, 0.5076467251], 
        RGBColor[0.46491847229, 0.13043391683, 0.5076880301], 
        RGBColor[0.466481934155, 0.131033631185, 0.5077281849499999], 
        RGBColor[0.46804539601999995`, 0.13163334554, 0.5077683398], 
        RGBColor[0.46960885788499995`, 0.132233059895, 0.50780849465], 
        RGBColor[0.47117456625, 0.13282798925, 0.5078372597499999], 
        RGBColor[0.47274031954499995`, 0.133422822905, 0.507865797055], 
        RGBColor[0.4743060728399999, 0.13401765655999998`, 0.50789433436], 
        RGBColor[0.47587196210999994`, 0.13461220834999996`, 0.50792220274], 
        RGBColor[
        0.47744002697999993`, 0.13520225029999997`, 0.5079393683200001], 
        RGBColor[
        0.47900809184999993`, 0.13579229224999997`, 0.5079565339000001], 
        RGBColor[0.48057615672, 0.13638233419999998`, 0.50797369948], 
        RGBColor[0.48214456802, 0.136971708945, 0.50798928698], 
        RGBColor[0.48371515688, 0.13755688983, 0.50799495512], 
        RGBColor[0.48528574574, 0.13814207071499998`, 0.5080006232600001], 
        RGBColor[0.4868563346, 0.1387272516, 0.5080062914], 
        RGBColor[0.48842749172, 0.139311390895, 0.508009477445], 
        RGBColor[0.49000071524, 0.13989174259, 0.50800363769], 
        RGBColor[0.49157393876, 0.14047209428500002`, 0.507997797935], 
        RGBColor[0.49314716228, 0.14105244598, 0.50799195818], 
        RGBColor[0.494721185075, 0.14163139727500001`, 0.5079827311999999], 
        RGBColor[0.49629712613, 0.14220698761, 0.50796537488], 
        RGBColor[0.49787306718499996`, 0.142782577945, 0.50794801856], 
        RGBColor[0.49944900823999994`, 0.14335816828, 0.50793066224], 
        RGBColor[0.501025988025, 0.14393201650499998`, 0.50790900356], 
        RGBColor[0.50260471725, 0.14450293065, 0.5078800988000001], 
        RGBColor[0.504183446475, 0.145073844795, 0.50785119404], 
        RGBColor[0.5057621756999999, 0.14564475894, 0.50782228928], 
        RGBColor[0.50734218959, 0.14621361033, 0.50778815225], 
        RGBColor[0.50892376742, 0.14677995054, 0.5077476455], 
        RGBColor[0.51050534525, 0.14734629075, 0.5077071387500001], 
        RGBColor[0.5120869230799999, 0.14791263096, 0.5076666320000001], 
        RGBColor[0.51367003505, 0.148476612045, 0.50761994468], 
        RGBColor[0.5152545107000001, 0.14903849613, 0.50756776352], 
        RGBColor[0.51683898635, 0.14960038021500002`, 0.5075155823599999], 
        RGBColor[0.5184234620000001, 0.15016226430000001`, 0.5074634012], 
        RGBColor[0.5200097221650001, 0.15072152005, 0.5074040692699999], 
        RGBColor[0.52159713363, 0.15127908010000002`, 0.5073401239399999], 
        RGBColor[0.523184545095, 0.15183664015, 0.50727617861], 
        RGBColor[0.52477195656, 0.1523942002, 0.50721223328], 
        RGBColor[0.526361402225, 0.15294889305, 0.5071401423999999], 
        RGBColor[0.52795177781, 0.15350227518, 0.50706432784], 
        RGBColor[0.529542153395, 0.15405565731, 0.5069885132799999], 
        RGBColor[0.53113252898, 0.15460903943999998`, 0.50691269872], 
        RGBColor[0.5327251845050001, 0.15515934837, 0.50682771721], 
        RGBColor[0.53431854155, 0.1557087117, 0.5067399150999999], 
        RGBColor[0.5359118985950001, 0.15625807503, 0.50665211299], 
        RGBColor[0.5375052556400001, 0.15680743836, 0.5065643108800001], 
        RGBColor[0.5391011320550001, 0.15735355863, 0.50646629197], 
        RGBColor[0.54069747719, 0.15789907554000002`, 0.50636637226], 
        RGBColor[0.542293822325, 0.15844459245000003`, 0.50626645255], 
        RGBColor[0.5438901674600001, 0.15899010936000002`, 0.50616653284], 
        RGBColor[0.545489263035, 0.15953225143500002`, 0.50605531621], 
        RGBColor[0.54708859269, 0.16007410629000002`, 0.5059431381399999], 
        RGBColor[0.548687922345, 0.160615961145, 0.50583096007], 
        RGBColor[0.550287252, 0.161157816, 0.505718782], 
        RGBColor[0.5518895524049999, 0.161696205915, 0.50559419614], 
        RGBColor[0.55349185281, 0.16223459583000002`, 0.50546961028], 
        RGBColor[0.555094153215, 0.16277298574500002`, 0.50534502442], 
        RGBColor[0.55669668468, 0.1633111203, 0.5052194531], 
        RGBColor[0.5583019311, 0.163846254375, 0.505082302625], 
        RGBColor[0.55990717752, 0.16438138845000003`, 0.50494515215], 
        RGBColor[0.5615124239399999, 0.164916522525, 0.5048080016750001], 
        RGBColor[0.56311812704, 0.1654511806, 0.50466885464], 
        RGBColor[0.564726284795, 0.165983280175, 0.504518976095], 
        RGBColor[0.56633444255, 0.16651537975, 0.50436909755], 
        RGBColor[0.567942600305, 0.167047479325, 0.504219219005], 
        RGBColor[0.56955143234, 0.16757891998, 0.5040663060199999], 
        RGBColor[0.571162455785, 0.168108219145, 0.503903531105], 
        RGBColor[0.57277347923, 0.16863751830999998`, 0.50374075619], 
        RGBColor[0.574384502675, 0.16916681747499998`, 0.503577981275], 
        RGBColor[
        0.5759964075599999, 0.16969531527999998`, 0.5034111063600001], 
        RGBColor[0.577610240595, 0.17022206011, 0.5032352626950001], 
        RGBColor[0.57922407363, 0.17074880494, 0.5030594190300001], 
        RGBColor[0.580837906665, 0.17127554976999998`, 0.5028835753650001], 
        RGBColor[0.5824528151, 0.1718013944, 0.5027025377000001], 
        RGBColor[0.584069390405, 0.17232584371999998`, 0.502513449335], 
        RGBColor[0.58568596571, 0.17285029304, 0.50232436097], 
        RGBColor[0.587302541015, 0.17337474235999997`, 0.502135272605], 
        RGBColor[0.58892037044, 0.17389823959999998`, 0.5019398682799999], 
        RGBColor[0.59053961075, 0.17442066574999998`, 0.5017373585], 
        RGBColor[0.59215885106, 0.1749430919, 0.50153484872], 
        RGBColor[0.59377809137, 0.17546551805, 0.50133233894]}], 
     LineBox[CompressedData["
1:eJwdVA1UjmcY/nznG+ZEfqIfSunDN51YjE9T7vPRD2tRYqU1a0kzRZ/kZ0lK
oqQ1ajZFIb75aXQ6ac3f7TejKCmm5rT2Po+y5nlq+VQoe5/3Puc973nOec71
XPd9XdftFBG7ZJVapVItlz/xzzCE09oJEiTfe5s3NZrjigsLLdQuEuxy2WVO
+IbjDKUk0LyvD7j+NcfBxeNCI+dIMNTCaNJEcXyqHZjyw3wJznSndhkiOZYe
5j9X+kngm//r9IQIjrvHPLnfHSRB/TXDl7+EcwzLvm7WhUlQ6ugX37SCo5sC
KN/3YTGaLzgKtMwYCb5P13vpPufY1Ju05lK8BB91ac0+yzmWxK3e9yJRguiZ
poTwYI5p7YEVDmkSVGYfqolfxlEm17w4S4Ksa40sNYjjNIWgBM/M2odZgRw1
nw1zLT0sQVXJh5v3L+aosDshgeni8YZ9/hzP+rYkWJ2V4NII2+eZfhxTr949
6l0uQVD1mOLkhRxD3Mt+33RFAuMwG1ujL0dXpWEJdnTsnhLqzVHtIjqW4Hz0
9ca58zk+LjJ6DnksQbOXldbBwFEZX7MEi7svqHrmclTabZXAq5CsqfbgqNDj
8rzJubD8jzkqcN0S1LW41EbO5qhSikD8qBDUzeLYsOX5JLfBBNLnaLWtMzie
7qzzjxhOIMrf2FPoxnG7PL0cGwLPllnMCprGcal0Iv+mI4FTKyseqVw5fqAI
QmBmrLb+5BSO/fUCkEDRvI7JfjqOD2W0EHcCw786U9U6kePJSj99hoGA6UV9
RZIzx20wU7YMgdj9TW2WThyXyGq0BxIoibJflu/AcbIiMAGbhtZXjuM4vj0l
CBIITtl8+4gtxwcThMIETrv2oJ01R5PMriSOwIPCnU++s+K41UooQqAybdLQ
vhEcA7J+XDcylcD40EdBqyw5TlQMQ+CF71bTbQuOr4VdcgisG9be5zyEY42Q
N58AkOdLEgZxPC7kKJL7DZ1ScFfD8VsxvmICjZ7+f1ipOS4S7ZYRSNra0hvy
jqGzYkAC5ncr3xx4y7BHwN0kcOsgNNzvZXivWhQBl8bq7apuhse8y7v66glk
mgO7XF4y3Hyl0G7aUwJbitS6wE6Gn+pF4giE9r8bbWQMnRRDE7gcEXI+vZ3h
K50QhIDlokH9eW0Mq44KQPl9D3OriTI8YiccTcGQ0b2m+G+GG3NsZEtTiPSt
TTrTzPATC+FA+ew8dezxPxmOVwJCIdezWH/gCcOXfUJgChsH1lWlPGJ4Z5Mg
SCHOblRN1EOGBSK+egpq+5rZ3rUMN4i4AQV9TqDK/h7DBSIevhReX34wjt1h
aK8EjsK5DXFpFZUM/xP2C6GwoNfglniD4W0/pWHobHS3dr/K8JCQdzWF6Tfn
TuWXGK4XchgprA92XFvwG0MfMb4tFAa8d/CuTznDsUqAKZxt8fdsK2XYIehl
UMhMvH9xxzmGtwTcPgrRZbkeY4oZ5h0UJd/fqyk/dpJh7EiRYAoxA2IcdCcY
eslpe3OKgrZJHWM6ytBWWQgUKlP+ybUvYMgShaEp2NS4ZmflMbxhFoLI7/11
NeDVAYY/rROAFLa1JdcE5zBcK6N11lEo658xoDSb4TyxTpsohHWkN2n2MrRW
FgwFD0vrpQHpDP8V66qdQpRqRXjuTobXxHrpojB6zy1zbTLD/wEGxA5T
      "],
      VertexColors->{
        RGBColor[0.8660021527899999, 0.28568861198, 0.41088394437000003`], 
        RGBColor[0.8673977603949999, 0.28670840849, 0.410093473185], 
        RGBColor[0.868793368, 0.287728205, 0.409303002], 
        RGBColor[0.87016602637, 0.28878147587, 0.408513112725], 
        RGBColor[0.8715386847400001, 0.28983474674000004`, 0.40772322345], 
        RGBColor[0.8729113431100001, 0.29088801761000005`, 0.406933334175], 
        RGBColor[0.8742820940400001, 0.29194399734000004`, 0.40614364974], 
        RGBColor[0.8756304325500001, 0.293031806175, 0.405356372175], 
        RGBColor[0.8769787710600001, 0.29411961501000006`, 0.40456909461], 
        RGBColor[0.87832710957, 0.29520742384500004`, 0.403781817045], 
        RGBColor[0.8796714192000001, 0.29630081576000006`, 0.40299519504], 
        RGBColor[0.8809940736, 0.29742421673, 0.40221209667], 
        RGBColor[0.8823167279999999, 0.2985476177, 0.4014289983], 
        RGBColor[0.8836393824, 0.29967101866999996`, 0.40064589993000005`], 
        RGBColor[
        0.8849556596399999, 0.30080301361999995`, 0.39986432994000004`], 
        RGBColor[
        0.8862512111099999, 0.30196293900499993`, 0.3990877271850001], 
        RGBColor[
        0.8875467625799999, 0.30312286438999997`, 0.39831112443000005`], 
        RGBColor[
        0.8888423140499999, 0.30428278977499995`, 0.39753452167500003`], 
        RGBColor[0.89012892008, 0.30545438723999996`, 0.39676100500000006`], 
        RGBColor[
        0.8913959579599999, 0.30665151737999996`, 0.39599423912500004`], 
        RGBColor[0.89266299584, 0.30784864751999996`, 0.39522747325], 
        RGBColor[0.89393003372, 0.30904577765999997`, 0.39446070737500005`], 
        RGBColor[0.895185363, 0.310257743, 0.39369883800000005`], 
        RGBColor[0.89642254395, 0.3114927029, 0.3929445582], 
        RGBColor[0.8976597249, 0.3127276628, 0.3921902784], 
        RGBColor[0.8988969058499999, 0.31396262269999997`, 0.3914359986], 
        RGBColor[0.90011941356, 0.31521565172, 0.3906886998], 
        RGBColor[0.901325413875, 0.3164890085, 0.38994925462499996`], 
        RGBColor[0.90253141419, 0.31776236528, 0.38920980945], 
        RGBColor[0.903737414505, 0.31903572205999997`, 0.388470364275], 
        RGBColor[0.9049256087800001, 0.3203303013, 0.38774084566], 
        RGBColor[
        0.9060991766650001, 0.32164231327500004`, 0.38701948100499994`], 
        RGBColor[0.9072727445500001, 0.32295432525, 0.38629811634999994`], 
        RGBColor[
        0.9084463124350001, 0.32426633722500003`, 0.38557675169499994`], 
        RGBColor[0.90959881472, 0.32560261736000007`, 0.38486887295999994`], 
        RGBColor[
        0.9107388093050001, 0.32695330671500006`, 0.38416900148999994`], 
        RGBColor[
        0.9118788038900001, 0.32830399607000005`, 0.38346913001999994`], 
        RGBColor[0.913018798475, 0.3296546854250001, 0.38276925854999994`], 
        RGBColor[0.91413434798, 0.33103260878000007`, 0.38208672431999996`], 
        RGBColor[
        0.9152397120350001, 0.3324218796350001, 0.38141141393999994`], 
        RGBColor[0.91634507609, 0.3338111504900001, 0.3807361035599999], 
        RGBColor[
        0.9174504401450001, 0.33520042134500005`, 0.38006079317999997`], 
        RGBColor[
        0.9185279190000001, 0.33661967680000004`, 0.3794073057999999], 
        RGBColor[0.9195977294250001, 0.33804717802, 0.37875981974499995`], 
        RGBColor[0.9206675398499999, 0.33947467924, 0.37811233368999997`], 
        RGBColor[0.9217373502749999, 0.34090218046, 0.377464847635], 
        RGBColor[0.9227758282999999, 0.34236213806, 0.376844259], 
        RGBColor[0.923809321625, 0.34382725917499996`, 0.3762279495], 
        RGBColor[0.92484281495, 0.34529238029, 0.37561163999999997`], 
        RGBColor[0.925876308275, 0.346757501405, 0.3749953305], 
        RGBColor[0.92687501912, 0.34825731668, 0.37441126164], 
        RGBColor[0.92787155606, 0.34975930034, 0.37382920782], 
        RGBColor[0.9288680930000001, 0.351261284, 0.37324715399999997`], 
        RGBColor[0.92986389682, 0.3527639698, 0.37266583485], 
        RGBColor[0.93082304464, 0.3543017626, 0.3721212492], 
        RGBColor[0.93178219246, 0.3558395554, 0.37157666354999996`], 
        RGBColor[0.93274134028, 0.35737734820000006`, 0.3710320779], 
        RGBColor[0.9336968145, 0.35891850037500006`, 0.37049152404999997`], 
        RGBColor[0.9346184916, 0.3604905588000001, 0.36998806275999996`], 
        RGBColor[0.9355401687, 0.36206261722500005`, 0.36948460146999995`], 
        RGBColor[0.9364618458, 0.36363467565000007`, 0.36898114017999994`], 
        RGBColor[0.937376869605, 0.36521258052000005`, 0.36848530782999994`], 
        
        RGBColor[0.9382608447, 0.36681776880000005`, 0.36802507719999994`], 
        RGBColor[0.939144819795, 0.3684229570800001, 0.36756484657], 
        RGBColor[0.94002879489, 0.3700281453600001, 0.36710461594], 
        RGBColor[0.940903178325, 0.3716413848650001, 0.36665604988499995`], 
        RGBColor[0.9417495246, 0.3732781587200001, 0.36624158028], 
        RGBColor[
        0.9425958708750001, 0.3749149325750001, 0.36582711067499996`], 
        RGBColor[0.9434422171500001, 0.37655170643000013`, 0.36541264107], 
        RGBColor[0.9442761598, 0.3781983627250001, 0.36501433616999995`], 
        RGBColor[
        0.9450852952000001, 0.3798647839000001, 0.36464836067999995`], 
        RGBColor[
        0.9458944306000001, 0.3815312050750001, 0.36428238518999995`], 
        RGBColor[
        0.9467035660000002, 0.38319762625000015`, 0.36391640969999994`], 
        RGBColor[0.9474977433100001, 0.38487524956000013`, 0.36357161922], 
        RGBColor[0.9482705519200001, 0.3865688759200001, 0.36325709304], 
        RGBColor[0.94904336053, 0.38826250228000003`, 0.36294256686], 
        RGBColor[0.94981616914, 0.38995612864, 0.36262804068], 
        RGBColor[0.950571265875, 0.39166246450000003`, 0.362339036125], 
        RGBColor[0.9513079422599999, 0.39338201824, 0.36207657406], 
        RGBColor[0.952044618645, 0.39510157198, 0.361814111995], 
        RGBColor[0.95278129503, 0.39682112572, 0.36155164993], 
        RGBColor[0.9534978502, 0.398554305255, 0.361319624525], 
        RGBColor[0.954199141, 0.40029782160000005`, 0.361110689], 
        RGBColor[0.9549004318000001, 0.4020413379450001, 0.360901753475], 
        RGBColor[0.9556017226, 0.40378485429000005`, 0.36069281794999997`], 
        RGBColor[0.95628068593, 0.40554258274500005`, 0.36051927674], 
        RGBColor[0.9569474706400001, 0.4073080632600001, 0.36036504152], 
        RGBColor[0.95761425535, 0.40907354377500005`, 0.36021080629999996`], 
        RGBColor[0.95828104006, 0.4108390242900001, 0.36005657108]}], 
     LineBox[CompressedData["
1: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
AD03/r/pzLSXxS/Q8zegrb30Ye+L5+T/urD7bw==
      "],
      VertexColors->{
        RGBColor[0.98343110674, 0.5129457397299999, 0.37409295699999995`], 
        RGBColor[
        0.9837241383099999, 0.5148409667799999, 0.37472264484999995`], 
        RGBColor[0.984014050615, 0.51673636087, 0.375360319525], 
        RGBColor[0.98430396292, 0.5186317549599999, 0.37599799419999996`], 
        RGBColor[0.984593875225, 0.52052714905, 0.376635668875], 
        RGBColor[0.98486854221, 0.52242292379, 0.37731288124], 
        RGBColor[0.985141552095, 0.524318739905, 0.37799439118], 
        RGBColor[0.98541456198, 0.52621455602, 0.37867590112], 
        RGBColor[0.985687571865, 0.528110372135, 0.37935741106000004`], 
        RGBColor[0.9859446980000001, 0.53000617625, 0.3800805115], 
        RGBColor[0.98620150646, 0.531901980125, 0.38080444375], 
        RGBColor[0.98645831492, 0.533797784, 0.381528376], 
        RGBColor[0.986714207315, 0.535693566545, 0.38225472181], 
        RGBColor[0.98695544267, 0.5375890078100001, 0.38301968458], 
        RGBColor[0.987196678025, 0.539484449075, 0.38378464735], 
        RGBColor[0.98743791338, 0.5413798903400001, 0.38454961012], 
        RGBColor[0.987677087725, 0.5432752441750001, 0.38532001808500005`], 
        RGBColor[0.98790330715, 0.54517004845, 0.38612465299000004`], 
        RGBColor[0.988129526575, 0.5470648527250002, 0.38692928789500003`], 
        RGBColor[0.988355746, 0.5489596570000002, 0.3877339228], 
        RGBColor[0.98857883224, 0.5508542793350002, 0.388546830035], 
        RGBColor[0.98879052508, 0.5527482400700001, 0.38938981847000004`], 
        RGBColor[0.98900221792, 0.5546422008050002, 0.39023280690500006`], 
        RGBColor[0.98921391076, 0.5565361615400002, 0.3910757953400001], 
        RGBColor[0.9894214555, 0.5584298315000001, 0.39192968997500005`], 
        RGBColor[0.9896190448000001, 0.5603228036000001, 0.39280975949], 
        RGBColor[0.9898166341, 0.5622157757, 0.393689829005], 
        RGBColor[0.9900142234, 0.5641087478, 0.39456989852], 
        RGBColor[0.990207836665, 0.5660004225799999, 0.39546332683999996`], 
        RGBColor[0.99039475345, 0.5678899124, 0.3963792542], 
        RGBColor[0.990581670235, 0.56977940222, 0.39729518156], 
        RGBColor[0.9907685870199999, 0.57166889204, 0.39821110892], 
        RGBColor[0.990950208055, 0.5735573244350001, 0.39914258600499997`], 
        RGBColor[0.99112538209, 0.5754444695300001, 0.40009299319], 
        RGBColor[0.991300556125, 0.577331614625, 0.401043400375], 
        RGBColor[0.99147573016, 0.57921875972, 0.40199380756], 
        RGBColor[0.9916442360050001, 0.5811051365300001, 0.40296185209], 
        RGBColor[0.9918068145700001, 0.58299083042, 0.40394557426000005`], 
        RGBColor[0.991969393135, 0.58487652431, 0.40492929643000003`], 
        RGBColor[0.9921319717, 0.5867622182, 0.40591301860000006`], 
        RGBColor[0.992287013855, 0.58864706021, 0.40691634052000003`], 
        RGBColor[0.99243719381, 0.59053135262, 0.40793230744000003`], 
        RGBColor[0.992587373765, 0.5924156450300001, 0.40894827436000003`], 
        RGBColor[0.9927375537199999, 0.5942999374400001, 0.4099642412800001], 
        
        RGBColor[0.9928793251, 0.5961833245750001, 0.41100164535000006`], 
        RGBColor[0.99301725256, 0.5980662978700001, 0.41204884926000007`], 
        RGBColor[0.99315518002, 0.5999492711650002, 0.41309605317000003`], 
        RGBColor[0.99329310748, 0.6018322444600002, 0.41414325708000005`], 
        RGBColor[0.993424786945, 0.6037121043850001, 0.41521325278500004`], 
        RGBColor[0.99355454395, 0.6055910063500002, 0.4162902613500001], 
        RGBColor[0.993684300955, 0.6074699083150001, 0.41736726991500006`], 
        RGBColor[0.99381405796, 0.6093488102800001, 0.41844427848000004`], 
        RGBColor[0.99393634393, 0.6112249537950001, 0.4195455579650001], 
        RGBColor[0.99405723994, 0.6131005841100001, 0.42065135297000006`], 
        RGBColor[0.99417813595, 0.6149762144250002, 0.4217571479750001], 
        RGBColor[0.99429903196, 0.6168518447400001, 0.4228629429800001], 
        RGBColor[0.99440937224, 0.6187263684400001, 0.42399474026500006`], 
        RGBColor[0.99451881416, 0.6206007979600001, 0.42512875051000004`], 
        RGBColor[0.99462825608, 0.6224752274800001, 0.426262760755], 
        RGBColor[0.994737698, 0.624349657, 0.427396771], 
        RGBColor[0.99483565778, 0.626223070345, 0.428558224855], 
        RGBColor[0.99493361756, 0.62809648369, 0.42971967871], 
        RGBColor[0.99503157734, 0.629969897035, 0.430881132565], 
        RGBColor[0.9951290263, 0.6318429804, 0.43204460534], 
        RGBColor[0.995220473125, 0.6337121865, 0.43323180042500004`], 
        RGBColor[0.99531191995, 0.6355813926, 0.43441899551], 
        RGBColor[0.995403366775, 0.6374505987000001, 0.43560619059500005`], 
        RGBColor[0.9954936472, 0.63931928804, 0.43679731068000005`], 
        RGBColor[0.995577658225, 0.6411851997950001, 0.43800952764000006`], 
        RGBColor[0.99566166925, 0.64305111155, 0.4392217446000001], 
        RGBColor[0.995745680275, 0.644917023305, 0.4404339615600001], 
        RGBColor[0.99582707074, 0.64678278854, 0.44165207520000005`], 
        RGBColor[
        0.9958999443850001, 0.6486480775849999, 0.44288935304999993`], 
        RGBColor[0.99597281803, 0.6505133666299999, 0.44412663089999993`], 
        RGBColor[0.996045691675, 0.6523786556749999, 0.4453639087499999], 
        RGBColor[0.99611535924, 0.65424360584, 0.4466087953999999], 
        RGBColor[0.996178013505, 0.6561078147049999, 0.44787032629999995`], 
        RGBColor[0.99624066777, 0.65797202357, 0.44913185719999993`], 
        RGBColor[
        0.9963033220349999, 0.6598362324349999, 0.45039338809999996`], 
        RGBColor[0.9963652457, 0.6616980031999999, 0.4516633622999999], 
        RGBColor[0.996426036935, 0.66355599491, 0.452946423615], 
        RGBColor[0.99648682817, 0.66541398662, 0.45422948493], 
        RGBColor[0.996547619405, 0.66727197833, 0.455512546245], 
        RGBColor[0.9966032007200001, 0.66912992456, 0.45680649527999995`], 
        RGBColor[0.996652920875, 0.670987819625, 0.45811269299999996`], 
        RGBColor[0.99670264103, 0.67284571469, 0.45941889072], 
        RGBColor[0.996752361185, 0.674703609755, 0.46072508844], 
        RGBColor[0.9967958740199999, 0.67656158966, 0.46204377234], 
        RGBColor[0.996834287985, 0.6784196392549999, 0.46337271274499997`], 
        RGBColor[0.99687270195, 0.68027768885, 0.46470165314999995`], 
        RGBColor[
        0.9969111159149999, 0.6821357384449999, 0.46603059355499993`], 
        RGBColor[0.99694970828, 0.6839895440399998, 0.4673714125199999], 
        RGBColor[0.99698840657, 0.6858408297599998, 0.4687192843799999], 
        RGBColor[0.99702710486, 0.6876921154799999, 0.4700671562399999], 
        RGBColor[0.9970658031499999, 0.6895434011999998, 0.4714150280999999], 
        
        RGBColor[0.99709681724, 0.6913948939199999, 0.4727781088799999], 
        RGBColor[
        0.9971246295799999, 0.6932464728899999, 0.47414752670999993`], 
        RGBColor[0.99715244192, 0.69509805186, 0.47551694453999993`], 
        RGBColor[0.99718025426, 0.6969496308299999, 0.4768863623699999], 
        RGBColor[0.9971997988, 0.698801351, 0.47827231179999996`], 
        RGBColor[0.997217069695, 0.70065311, 0.47966280741999995`], 
        RGBColor[0.99723434059, 0.702504869, 0.48105330304], 
        RGBColor[0.9972516114850001, 0.704356628, 0.48244379866], 
        RGBColor[0.9972696455600001, 0.70620291406, 0.48384899028], 
        RGBColor[0.99728780105, 0.708048329425, 0.48525651989999996`], 
        RGBColor[0.99730595654, 0.70989374479, 0.48666404952], 
        RGBColor[0.99732411203, 0.711739160155, 0.48807157913999993`], 
        RGBColor[0.99733137272, 0.7135856512000001, 0.48949844459999997`], 
        RGBColor[0.997337952485, 0.7154322094750001, 0.49092651854999997`], 
        RGBColor[
        0.9973445322500001, 0.7172787677500001, 0.49235459249999997`], 
        RGBColor[0.997350981, 0.71912529548, 0.49378303153499997`], 
        RGBColor[0.997350879, 0.7209702959600001, 0.49522972482], 
        RGBColor[0.997350777, 0.7228152964400001, 0.496676418105], 
        RGBColor[0.997350675, 0.72466029692, 0.49812311139000004`], 
        RGBColor[0.9973503499, 0.7265049214, 0.499571443675], 
        RGBColor[0.99734797228, 0.72834608668, 0.5010348547600001], 
        RGBColor[0.9973455946600001, 0.73018725196, 0.502498265845], 
        RGBColor[0.9973432170400001, 0.73202841724, 0.50396167693], 
        RGBColor[0.99733871335, 0.7338698959900001, 0.5054285811400001], 
        RGBColor[0.9973242880000001, 0.7357128376000001, 0.5069117866], 
        RGBColor[0.99730986265, 0.7375557792099999, 0.50839499206], 
        RGBColor[0.9972954373, 0.7393987208199999, 0.50987819752], 
        RGBColor[0.99728102807, 0.7412404565499999, 0.511365274055], 
        RGBColor[0.99726666596, 0.7430786674, 0.51286366604], 
        RGBColor[0.99725230385, 0.74491687825, 0.514362058025], 
        RGBColor[0.9972379417399999, 0.7467550891, 0.51586045001], 
        RGBColor[0.9972207266049999, 0.7485933525649999, 0.51736484053], 
        RGBColor[0.99719780542, 0.75043172126, 0.5188812281199999], 
        RGBColor[0.997174884235, 0.752270089955, 0.52039761571], 
        RGBColor[0.9971519630500001, 0.75410845865, 0.5219140032999999], 
        RGBColor[0.9971259705100001, 0.7559466952549999, 0.523437547795], 
        RGBColor[0.9970955903200001, 0.75778474316, 0.52497131644], 
        RGBColor[0.99706521013, 0.759622791065, 0.526505085085], 
        RGBColor[0.99703482994, 0.7614608389699999, 0.52803885373], 
        RGBColor[0.997004206, 0.7632970195, 0.52957972075], 
        RGBColor[0.99697332856, 0.76513125796, 0.53112797008], 
        RGBColor[0.99694245112, 0.76696549642, 0.5326762194100001], 
        RGBColor[0.9969115736799999, 0.76879973488, 0.5342244687400001], 
        RGBColor[0.99687340216, 0.770635538325, 0.5357835443500001], 
        RGBColor[0.9968296972, 0.772472529, 0.5373508330000001], 
        RGBColor[0.99678599224, 0.7743095196750001, 0.5389181216500001], 
        RGBColor[0.99674228728, 0.77614651035, 0.5404854103000001], 
        RGBColor[0.9967010861950001, 0.7779798319200001, 0.5420606504650001], 
        
        RGBColor[0.99666125086, 0.7798111521600001, 0.54364022782], 
        RGBColor[0.996621415525, 0.7816424724000001, 0.545219805175], 
        RGBColor[0.99658158019, 0.78347379264, 0.54679938253], 
        RGBColor[0.9965333527, 0.78530681303, 0.548392192195], 
        RGBColor[0.9964819498, 0.7871404767200001, 0.5499900086800001], 
        RGBColor[0.9964305469, 0.7889741404100001, 0.5515878251650002], 
        RGBColor[0.996379144, 0.7908078041000002, 0.5531856416500002], 
        RGBColor[0.99632668002, 0.7926393204150001, 0.55479468332], 
        RGBColor[0.99627395724, 0.79447031298, 0.5564064628400001], 
        RGBColor[0.99622123446, 0.796301305545, 0.55801824236], 
        RGBColor[0.99616851168, 0.79813229811, 0.55963002188], 
        RGBColor[0.996110590275, 0.799963077825, 0.561255633725], 
        RGBColor[0.99605197572, 0.80179382916, 0.5628830898799999], 
        RGBColor[0.995993361165, 0.803624580495, 0.564510546035], 
        RGBColor[0.99593474661, 0.80545533183, 0.56613800219], 
        RGBColor[0.995870624455, 0.807285894515, 0.567780351895], 
        RGBColor[0.9958062775000001, 0.8091164495000001, 0.5694233095], 
        RGBColor[0.995741930545, 0.810947004485, 0.571066267105], 
        RGBColor[0.99567754566, 0.8127774682900001, 0.57270974835], 
        RGBColor[0.99561223149, 0.8146056981850001, 0.574366058775], 
        RGBColor[0.99554691732, 0.81643392808, 0.5760223692], 
        RGBColor[0.99548160315, 0.818262157975, 0.577678679625], 
        RGBColor[0.99541519245, 0.8200905961300001, 0.5793369699900001], 
        RGBColor[0.995340557775, 0.821920596235, 0.581010109905], 
        RGBColor[0.9952659231, 0.82375059634, 0.5826832498200001], 
        RGBColor[0.9951912884249999, 0.825580596445, 0.584356389735], 
        RGBColor[0.9951172780499999, 0.8274098256500001, 0.5860317445000001], 
        
        RGBColor[0.9950458273049999, 0.8292358941650001, 0.58771618015], 
        RGBColor[0.99497437656, 0.8310619626800001, 0.5894006158], 
        RGBColor[0.994902925815, 0.8328880311950001, 0.59108505145], 
        RGBColor[0.99482816939, 0.8347149914400002, 0.5927743937500001], 
        RGBColor[0.994744676525, 0.8365443084000002, 0.594476703625], 
        RGBColor[0.99466118366, 0.8383736253600002, 0.5961790135000001], 
        RGBColor[0.9945776907949999, 0.8402029423200001, 0.5978813233750001], 
        
        RGBColor[0.9944965070599999, 0.8420304650400001, 0.5995869956500001], 
        
        RGBColor[0.9944195567299999, 0.8438546983200002, 0.6012988323250001], 
        
        RGBColor[0.9943426063999999, 0.8456789316000002, 0.6030106690000001], 
        
        RGBColor[0.99426565607, 0.8475031648800002, 0.6047225056750002], 
        RGBColor[0.99418272537, 0.8493292360400001, 0.6064423514500001], 
        RGBColor[0.994091911455, 0.8511577298600002, 0.6081727546750001], 
        RGBColor[0.99400109754, 0.8529862236800001, 0.6099031579], 
        RGBColor[0.993910283625, 0.8548147175, 0.611633561125], 
        RGBColor[0.9938241043399999, 0.85664025304, 0.61336807326], 
        RGBColor[0.9937423814299999, 0.85846294408, 0.61510653627], 
        RGBColor[0.99366065852, 0.86028563512, 0.61684499928], 
        RGBColor[0.99357893561, 0.86210832616, 0.61858346229], 
        RGBColor[0.9934889259499999, 0.86393368915, 0.62033282445], 
        RGBColor[0.993393115565, 0.865760922505, 0.622089816015], 
        RGBColor[0.9932973051799999, 0.86758815586, 0.6238468075800001], 
        RGBColor[0.993201494795, 0.8694153892150001, 0.6256037991450001], 
        RGBColor[0.99311199685, 0.87123893629, 0.6273658094500001], 
        RGBColor[0.993025655125, 0.8730606402250001, 0.6291303291250001], 
        RGBColor[0.9929393134, 0.8748823441600001, 0.6308948488], 
        RGBColor[0.992852971675, 0.876704048095, 0.632659368475], 
        RGBColor[0.99275665742, 0.8785290490999998, 0.6344373082299999], 
        RGBColor[0.99265693151, 0.88035517805, 0.6362198390649999], 
        RGBColor[0.9925572056, 0.882181307, 0.6380023698999999], 
        RGBColor[0.99245747969, 0.88400743595, 0.6397849007349999], 
        RGBColor[0.99236629133, 0.88582906355, 0.64157294176], 
        RGBColor[0.992276932445, 0.887649726575, 0.64336216354], 
        RGBColor[0.9921875735600001, 0.8894703895999999, 0.6451513853199999], 
        
        RGBColor[0.992098214675, 0.891291052625, 0.6469406070999999], 
        RGBColor[0.9919970607, 0.89311577423, 0.6487456912899999], 
        RGBColor[0.99189462465, 0.894940936985, 0.650552499655], 
        RGBColor[0.9917921886000001, 0.89676609974, 0.65235930802], 
        RGBColor[0.99168975255, 0.898591262495, 0.654166116385], 
        RGBColor[0.9915987902500001, 0.9004109745, 0.65597836775], 
        RGBColor[0.991508057425, 0.90223057749, 0.657790727975], 
        RGBColor[0.9914173246, 0.90405018048, 0.6596030882], 
        RGBColor[0.99132589534, 0.90587003193, 0.66141642443], 
        RGBColor[0.99122332312, 0.90769385874, 0.66324537674], 
        RGBColor[0.9911207509, 0.9095176855499999, 0.66507432905], 
        RGBColor[0.99101817868, 0.9113415123599998, 0.6669032813599999], 
        RGBColor[0.990917093015, 0.9131646891149998, 0.6687329696849998], 
        RGBColor[0.99082535141, 0.9149837798099998, 0.6705672843899998], 
        RGBColor[0.990733609805, 0.9168028705049999, 0.6724015990949999], 
        RGBColor[0.9906418682, 0.9186219611999998, 0.6742359137999999], 
        RGBColor[0.990548173765, 0.9204417792149998, 0.67607339755], 
        RGBColor[0.9904473781300001, 0.9222642420299999, 0.6779224050999999], 
        
        RGBColor[0.990346582495, 0.9240867048449999, 0.6797714126499999], 
        RGBColor[0.99024578686, 0.9259091676599999, 0.6816204201999999], 
        RGBColor[0.99014765215, 0.9277305815999999, 0.6834710463999999], 
        RGBColor[0.99005590366, 0.9295494782399999, 0.6853255573599999], 
        RGBColor[0.98996415517, 0.9313683748799999, 0.6871800683199999], 
        RGBColor[0.98987240668, 0.9331872715199999, 0.68903457928], 
        RGBColor[0.989778634215, 0.9350070123299999, 0.69089363523], 
        RGBColor[0.98968145295, 0.9368281748999999, 0.6927603459], 
        RGBColor[0.989584271685, 0.93864933747, 0.69462705657], 
        RGBColor[0.9894870904199999, 0.94047050004, 0.69649376724], 
        RGBColor[0.98939276173, 0.942290732145, 0.6983631754649999], 
        RGBColor[0.98930190574, 0.94410983151, 0.70023586767], 
        RGBColor[0.98921104975, 0.9459289308750001, 0.702108559875], 
        RGBColor[0.98912019376, 0.9477480302400001, 0.70398125208], 
        RGBColor[0.98902878751, 0.949567631805, 0.705858780255], 
        RGBColor[0.98893689214, 0.95138767977, 0.70774060707], 
        RGBColor[0.98884499677, 0.9532077277350001, 0.709622433885], 
        RGBColor[0.9887531014000001, 0.9550277757000001, 0.7115042607000001], 
        
        RGBColor[0.98866280842, 0.9568476784300001, 0.7133902232250001], 
        RGBColor[0.98857354924, 0.9586674874600001, 0.7152788539500001], 
        RGBColor[0.98848429006, 0.9604872964900001, 0.717167484675], 
        RGBColor[0.98839503088, 0.9623071055200001, 0.7190561154], 
        RGBColor[0.988308552975, 0.9641265437250001, 0.72094855255], 
        RGBColor[0.98822334651, 0.96594581241, 0.72284272978], 
        RGBColor[0.988138140045, 0.9677650810949999, 0.7247369070099999], 
        RGBColor[0.98805293358, 0.9695843497799999, 0.7266310842399999], 
        RGBColor[0.987966159315, 0.9714050675099999, 0.7285313622399999], 
        RGBColor[0.98787890265, 0.9732262310999998, 0.7304335174], 
        RGBColor[0.987791645985, 0.9750473946899999, 0.73233567256], 
        RGBColor[0.9877043893199999, 0.97686855828, 0.73423782772], 
        RGBColor[0.987625368875, 0.9786878969499999, 0.7361412535299999], 
        RGBColor[0.98754788075, 0.9805068961, 0.73804491574], 
        RGBColor[0.987470392625, 0.98232589525, 0.7399485779499999], 
        RGBColor[0.9873929045000001, 0.9841448944, 0.74185224016], 
        RGBColor[0.98730826227, 0.98596787962, 0.7437646676349999], 
        RGBColor[0.98722301118, 0.98779120408, 0.7456778410899999], 
        RGBColor[0.98713776009, 0.98961452854, 0.747591014545], 
        RGBColor[0.987052509, 0.991437853, 0.749504188]}]}, 
    {GrayLevel[0], Dashing[{0, Small}], 
     LineBox[{{0.427, -1.0172274701922022`}, {0.598, -0.9818337466335123}}], 
     LineBox[{{0.686, -0.953224639914256}, {0.741, -0.9278944329779358}}]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"Molar Gibbs Energy, \\!\\(\\*UnderscriptBox[\\(G\\), \\(_\\)]\\)\"", 
      TraditionalForm], None}, {
     FormBox[
     "\"Mole Fraction B, \\!\\(\\*SubscriptBox[\\(x\\), \\(B\\)]\\)\"", 
      TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->550,
  LabelStyle->Directive[
    GrayLevel[0], 16],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-1.0221040894217768`, 0.45474552129504703`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.856885060782975*^9, 3.85688511179187*^9}, 
   3.856885763910048*^9, 3.8568858738601933`*^9, {3.856886056505313*^9, 
   3.856886061895351*^9}, 3.856886106010511*^9},
 CellLabel->"Out[455]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
2We4tgW0aKrEZy/xuBGjU+oI2PA0nXae6dXfi4oE8CDac4IJfq5/P37uVpEG
9OPnkQaKNKjf8vOD+yaEzg/py3xF+ej+FkOH4mZohbomGbpOMCSSsKDrxWfA
YkukHe0yp40WiSpJvl5kAsDHFDf+LQZlMJuZTlp+AC0BmxbLgsipR5/tB6/o
HxJ4d57rLy1AiCJQi0BmYVa4E/iFwX0FNReG9OUXh1Ia1nfZb8P7hS6O6Bta
d+2VKNE/jJuGpepasfZlQqFrM+44dG367eLd16bfISQGLdertFOk0Tdk3sku
VVbSi7AhfS5SkmLiB8NChoo0n1pfRNoPRr3oc7oNhLKWKtcx5wf2DZ0f1B/p
pwsard+NNoH/Olwonq+75goUisvQmUfFTVEhl2UM78TNwv1KE11bp9+2vE3G
ZN4m/XaZrrHY8J2+Lv3O0PUZU+peL4yBuh9LU1hdA216UADcRHANshFJARnD
GqIF2bDWqlgfe35on5DAiHRGwOQyjegrwVavXp2/8847VtWyQoUKHzVo0KAz
KHwrbrCLlDcWa13mtlDrjMmHBGjeOn0yvzodwCdr4DuvSb9DgJ1cW+mm1NGj
RzWuz6zqsn+rARcYH7A1vlVX5Ujcz+g2CfcSdV8ds1JPraYd4lmrGpilws/H
houduf322/ny5cs1jaCBd+jQweylWYr7FyxYgCmDmPv3atzs3Kvggp3lLTMm
8Zbpk3ir9NsSBEW3iXcJkn66Om3ymDZpk1lNYsbAYDPj20aXZDVzk9MKfoxE
iz6Jw4CrTXv7EaN2XI+gT58+HRZhNC6S+b333itr+i+88AKuLKW8Mo8fP47p
g9jJhL0QNx/kwl2uSp/08VXpE7lIgmTBipC/leJmp7AeWEp1davmYzW8gsg4
QUJIMnYSGd98800kMmBtVH0KjDAKb6RHbbvwfWL8xgorooqLKqoVA2iYuZ4R
r1iKuu+MSai2JZBXo0YN/u6771puVq5cOd6xY8f/HbFbepkff/wxhrKwlpXt
i5vMe5TFdGmRPv7jFukT+JUqJUhWfT+1TJs0pnWaHCDVdeCSRNIquxriP2FY
R02R9qpba9IlLz632RVF32GDS42nu1lNVzHed2n4fYGfDc40L/QuP1qzvEiR
Ivyll176UFwhu+0oPjH3XO6ssjtuqu5S8bDoNWVHh1pkjPv48vTxXNDGr5BJ
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
KcrACAAk9XzE\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"e79d5130-3a8e-45ed-ba9d-4a90a2257c5d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let\[CloseCurlyQuote]s see how this looks as a function of \
temperature", "Item",
 CellChangeTimes->{{3.85688526990528*^9, 
  3.856885278614648*^9}},ExpressionUUID->"23a47cfc-8fc1-4aed-b601-\
dc1fb44c68ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"phase", "[", "\"\<A\>\"", "]"}], "[", "T", "]"}], "[", 
          "xB", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"phase", "[", "\"\<B\>\"", "]"}], "[", "T", "]"}], "[", 
          "xB", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"phase", "[", "\"\<C\>\"", "]"}], "[", "T", "]"}], "[", 
          "xB", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"xB", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "LightGray"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "->", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "550"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Mole Fraction B, \!\(\*SubscriptBox[\(x\), \(B\)]\)\>\"", ",", 
          "\"\<Molar Gibbs Energy, \!\(\*UnderscriptBox[\(G\), \
\(_\)]\)\>\""}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"freeEnergyLineGraphicAndMiscibilityGaps", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"phase", "[", "\"\<A\>\"", "]"}], "[", "T", "]"}], ",", 
         RowBox[{
          RowBox[{"phase", "[", "\"\<B\>\"", "]"}], "[", "T", "]"}], ",", 
         RowBox[{
          RowBox[{"phase", "[", "\"\<C\>\"", "]"}], "[", "T", "]"}]}], "}"}], 
       ",", "1000"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T", ",", "0.3", ",", "\"\<Temperature\>\""}], "}"}], ",", 
     "0.1", ",", "0.75"}], "}"}], ",", 
   RowBox[{"Paneled", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.856885141655686*^9, 3.856885150021247*^9}, {
   3.856885188793992*^9, 3.8568852062881823`*^9}, {3.8568852440112553`*^9, 
   3.8568852442244387`*^9}, {3.856885790204144*^9, 3.8568857905528927`*^9}, {
   3.856885876874773*^9, 3.856885887844623*^9}, {3.856886068028297*^9, 
   3.856886068847427*^9}, 3.8568861084827414`*^9},
 CellLabel->
  "In[456]:=",ExpressionUUID->"cd677105-d558-4084-88b8-8d464d707c56"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`T$$ = 0.3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`T$$], 0.3, "Temperature"}, 0.1, 0.75}}, 
    Typeset`size$$ = {550., {173., 177.1763039109009}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`T$$ = 0.3}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Plot[{
          $CellContext`phase["A"][$CellContext`T$$][$CellContext`xB], 
          $CellContext`phase["B"][$CellContext`T$$][$CellContext`xB], 
          $CellContext`phase[
          "C"][$CellContext`T$$][$CellContext`xB]}, {$CellContext`xB, 0, 1}, 
         PlotStyle -> LightGray, Frame -> True, LabelStyle -> 
         Directive[Black, 16], ImageSize -> 550, 
         FrameLabel -> {
          "Mole Fraction B, \!\(\*SubscriptBox[\(x\), \(B\)]\)", 
           "Molar Gibbs Energy, \!\(\*UnderscriptBox[\(G\), \(_\)]\)"}], 
        $CellContext`freeEnergyLineGraphicAndMiscibilityGaps[{
          $CellContext`phase["A"][$CellContext`T$$], 
          $CellContext`phase["B"][$CellContext`T$$], 
          $CellContext`phase["C"][$CellContext`T$$]}, 1000]], 
      "Specifications" :> {{{$CellContext`T$$, 0.3, "Temperature"}, 0.1, 
         0.75}}, "Options" :> {Paneled -> False}, "DefaultOptions" :> {}],
     ImageSizeCache->{570., {207.6875, 213.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.856885208825625*^9, 3.856885244673283*^9, {3.856885766567688*^9, 
   3.856885816542863*^9}, {3.856885877886517*^9, 3.8568859132317553`*^9}, 
   3.856886069203109*^9, 3.856886108768944*^9},
 CellLabel->
  "Out[456]=",ExpressionUUID->"3e3ec791-3d7e-432b-96ec-f8c882afda41"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Phase Diagram", "Section",
 CellChangeTimes->{{3.856885986414109*^9, 
  3.856885987928773*^9}},ExpressionUUID->"d8c91b63-8c3c-4f59-a7b1-\
75ce4dd721c5"],

Cell[CellGroupData[{

Cell["\<\
Similar to the miscibility gap above, we can put all this together to plot a \
binary phase diagram as a function of temperature \
\>", "Item",
 CellChangeTimes->{{3.856885989139861*^9, 
  3.856886030165559*^9}},ExpressionUUID->"6dcf6d06-50f3-4481-b6bb-\
6e6d527b0eae"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"backgroundGraphic", "=", 
   RowBox[{"First", "[", 
    RowBox[{"DensityPlot", "[", 
     RowBox[{"x", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0.1", ",", "0.75"}], "}"}], ",", 
      RowBox[{"ColorFunction", "->", 
       RowBox[{"MPLColorMap", "[", "\"\<Magma\>\"", "]"}]}]}], "]"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"miscibilityGaps", "[", 
   RowBox[{"functionList_", ",", "temperature_", ",", "numPts_"}], "]"}], " ",
   ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"convexHullPoints", " ", "=", " ", 
       RowBox[{"getConvexHullVertices", "[", 
        RowBox[{"minimumPoints", "[", 
         RowBox[{
          RowBox[{"Through", "[", 
           RowBox[{"functionList", "[", "temperature", "]"}], "]"}], ",", " ",
           "numPts"}], "]"}], "]"}]}], ",", "singlePhasePoints", ",", 
      "miscibilityGaps", ",", 
      RowBox[{"cf", "=", 
       RowBox[{"MPLColorMap", "[", "\"\<Magma\>\"", "]"}]}], ",", "cols"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"singlePhasePoints", "=", 
      RowBox[{"Split", "[", 
       RowBox[{"convexHullPoints", ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "#2", "]"}], "-", 
           RowBox[{"First", "[", "#1", "]"}]}], "<", 
          RowBox[{"1.001", "/", "numPts"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"miscibilityGaps", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Last", "[", "#1", "]"}], ",", 
          RowBox[{"First", "[", "#2", "]"}]}], "}"}], "&"}], "@@@", 
       RowBox[{"Partition", "[", 
        RowBox[{"singlePhasePoints", ",", "2", ",", "1"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Line", "/@", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{"{", 
           RowBox[{"#", ",", "temperature"}], "}"}], "]"}], "&"}], ",", 
        RowBox[{"miscibilityGaps", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.856886119855144*^9, 3.8568861895052032`*^9}, {
  3.856886226982751*^9, 3.856886339599931*^9}, {3.856886380524205*^9, 
  3.8568864384377832`*^9}, {3.8568869905736647`*^9, 3.8568869910330133`*^9}},
 CellLabel->
  "In[534]:=",ExpressionUUID->"9212a1eb-b17f-45a3-9499-c39ca919e6a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"backgroundGraphic", ",", "White", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"miscibilityGaps", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"phase", "[", "\"\<A\>\"", "]"}], ",", 
           RowBox[{"phase", "[", "\"\<B\>\"", "]"}], ",", 
           RowBox[{"phase", "[", "\"\<C\>\"", "]"}]}], "}"}], ",", "#", ",", 
         "1000"}], "]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"0.1", ",", "0.75", ",", "0.005"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.75"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Mole Fraction B, \!\(\*SubscriptBox[\(x\), \(B\)]\)\>\"", ",", 
      "\"\<Temperature, T\>\""}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRangeClipping", "->", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", "18"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.856886454003705*^9, 3.856886636776368*^9}, {
  3.856886735179454*^9, 3.856886736852499*^9}, {3.856886784408937*^9, 
  3.856886976760796*^9}, {3.856887157185964*^9, 3.856887165557973*^9}},
 CellLabel->
  "In[537]:=",ExpressionUUID->"15856a4c-7f3c-47e7-924f-df6d456ef2a6"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJxl17FqFFEUgOGDTbr4BAqiVintRAhWYhd8BMFKxEpfwC6d22kVUtlFBAVB
EriVIFgMKmpAZaOJRowpY6PuzuY74UyGCcOXw52Zn91Mds9cv33txomI+DP5
mR5tDx9Mt+eLo3NXJ/uTxeqW3nx2a7K/Gsy7dD/efJf+OPtF+u+/6fY5fb9f
P06fnXL0Nf20X76dvtJf8Ef6Q3/+n+mb/Q3+Ss/q9geO2FpYHy+st+ytbmm9
dd6l9bJe1st6WS/rZb2sl/Wy3urJ6728drC89jJ7q1tab513ab2sl/WyXtbL
elkv62W9rLc64uTuyvzuyuvsrW5pvXXepfWyXtbLelkv62W9rJf1st7qCPet
t/rofau3zo+Oelkv62W9rJf1sl7Wy3pZb3XEqTeXJ/vb7K1uab113qX1sl7W
y3pZL+tlvayX9bLe6ohH9y5O9vfZW93Seuu8S+tlvayX9bJe1st6WS/rZb3V
ERf6bTN7q1tab513ab2sl/WyXtbLelkv62W9rLc6Yvq0Hi98yt7qltZb511a
L+tlvayX9bJe1st6WS/rrY7oLzv6kr3VLa23zru0XtbLelkv62W9rJf1sl7W
Wx3RP67nx9lb3dJ667xL62W9rJf1sl7Wy3pZL+tlvdURjw+m/5C3sre6pfXW
eZfWy3pZL+tlvayX9bJe1st6qyPuLs3dWZr7lr3VLa23zru0XtbLelkv62W9
rJf1sl7WWx1xqX9gb2dvdUvrrfMurZf1sl7Wy3pZL+tlvayX9VbbvmdvdUvr
rfMurZf1sl7Wy3pZL+tlvayX9db7XT18f28M/p43Du9/bzDfT1t/uv/8spPr
2fqhh9ev3yf3Bt83V4/dv/PN5qPF8/3hxeHr8TttPvv8vJNzdr/D9fX6o2PX
t958+P3T+Zx/eH3n+w/+glDz
     "], {
      {GrayLevel[0.8], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
         
         "]]]}, {}, {}, {}, {}},
     VertexColors->CompressedData["
1:eJxTTMoPSmViYGD4CcTMQByx4El49Kdwe1eu/U3BPXb2Ip6d09tSe+z76pmO
qQmvtF/sbjtnH89i+6Nal1ZuqjxsH209e8vHWQftGQ49P1vRudH+3AKj72+z
r9i7rzFV88i6YK94J2SibMs6++XV0yKZDO/at+iGPS47dN3+4KP37HGrt9s/
1Ntj/e7tffuTP3S+K96/Z/+p4bsNe/dBe/3epqISxwf2bI93mUqKPrZv+vvr
RO2EY/Y5mh9O6HE8sP+0JtYh+NIze/v3H7x3J5y2v8m10ehc1T17YcUSV4+K
V/aLptQFB+68YP9ip+7ahLm37ZXtb12cV/vW/u1mKy6Gc1ftxZb89HimecN+
kTqLyDv19/ZK7Yuads+6az81Zus1Gd3r9vcyxSorj723d7kYuO6z3GP7u/lW
RtJRt+w5yxfOcHj13p7h/lzHm/HP7ePPnV+tK/bAXsN3V8P60+/tM6svMfzr
f23fPu8hT+jRx/ZG9zepvJ/63n7njZAHt3e+t38y86vJh9/P7UfDeTScR8N5
NJxHw3k0nEfDeTScR8N5NJxHw3k0nEfDeTScR8N5NJxHw3k0nEfDefCEs1dz
56arVyfYqx3/2GFwucf+C0eLq/uVzTjD335Jdeft9e/tH8997Riw9K29zlzW
ds0rT2luPi5xXOaTqh6X+29ebRTZKlpjP6HAzLHBpdx+n8vsxkPWS+1b96s5
ei16b1/bKLakY/07+8+FJ3yOPX1Gsnpc4UCq+aS6n9R8h8s9AKVNA8c=
      "]], {}}, 
   {GrayLevel[1], LineBox[{{0.026, 0.1}, {0.977, 0.1}}], 
    LineBox[{{0.032, 0.10500000000000001`}, {0.972, 0.10500000000000001`}}], 
    LineBox[{{0.038, 0.11}, {0.966, 0.11}}], 
    LineBox[{{0.045, 0.115}, {0.96, 0.115}}], 
    LineBox[{{0.053, 0.12000000000000001`}, {0.953, 0.12000000000000001`}}], 
    LineBox[{{0.061, 0.125}, {0.946, 0.125}}], 
    LineBox[{{0.071, 0.13}, {0.939, 0.13}}], 
    LineBox[{{0.081, 0.135}, {0.931, 0.135}}], 
    LineBox[{{0.091, 0.14}, {0.922, 0.14}}], 
    LineBox[{{0.103, 0.14500000000000002`}, {0.913, 0.14500000000000002`}}], 
    LineBox[{{0.115, 0.15000000000000002`}, {0.904, 0.15000000000000002`}}], 
    LineBox[{{0.128, 0.155}, {0.895, 0.155}}], 
    LineBox[{{0.142, 0.16}, {0.885, 0.16}}], 
    LineBox[{{0.156, 0.165}, {0.875, 0.165}}], 
    LineBox[{{0.171, 0.17}, {0.865, 0.17}}], 
    LineBox[{{0.187, 0.175}, {0.855, 0.175}}], 
    LineBox[{{0.203, 0.18}, {0.845, 0.18}}], 
    LineBox[{{0.22, 0.185}, {0.835, 0.185}}], 
    LineBox[{{0.237, 0.19}, {0.825, 0.19}}], 
    LineBox[{{0.253, 0.195}, {0.816, 0.195}}], 
    LineBox[{{0.27, 0.2}, {0.807, 0.2}}], 
    LineBox[{{0.286, 0.20500000000000002`}, {0.799, 0.20500000000000002`}}], 
    LineBox[{{0.302, 0.21000000000000002`}, {0.791, 0.21000000000000002`}}], 
    LineBox[{{0.317, 0.21500000000000002`}, {0.784, 0.21500000000000002`}}], 
    LineBox[{{0.331, 0.22}, {0.777, 0.22}}], 
    LineBox[{{0.344, 0.225}, {0.77, 0.225}}], 
    LineBox[{{0.356, 0.23}, {0.764, 0.23}}], 
    LineBox[{{0.367, 0.23500000000000001`}, {0.759, 0.23500000000000001`}}], 
    LineBox[{{0.377, 0.24000000000000002`}, {0.754, 0.24000000000000002`}}], 
    LineBox[{{0.386, 0.245}, {0.749, 0.245}}], 
    LineBox[{{0.394, 0.25}, {0.744, 0.25}}], 
    LineBox[{{0.401, 0.255}, {0.74, 0.255}}], 
    LineBox[{{0.408, 0.26}, {0.736, 0.26}}], 
    LineBox[{{0.414, 0.265}, {0.733, 0.265}}], 
    LineBox[{{0.42, 0.27}, {0.73, 0.27}}], 
    LineBox[{{0.425, 0.275}, {0.727, 0.275}}], 
    LineBox[{{0.429, 0.28}, {0.724, 0.28}}], 
    LineBox[{{0.434, 0.28500000000000003`}, {0.721, 0.28500000000000003`}}], {
     LineBox[{{0.434, 0.29000000000000004`}, {0.628, 0.29000000000000004`}}], 
     LineBox[{{0.649, 0.29000000000000004`}, {0.724, 
      0.29000000000000004`}}]}, {
     LineBox[{{0.431, 0.29500000000000004`}, {0.613, 0.29500000000000004`}}], 
     LineBox[{{0.668, 0.29500000000000004`}, {0.733, 
      0.29500000000000004`}}]}, {
     LineBox[{{0.427, 0.30000000000000004`}, {0.598, 0.30000000000000004`}}], 
     LineBox[{{0.686, 0.30000000000000004`}, {0.741, 
      0.30000000000000004`}}]}, {
     LineBox[{{0.424, 0.30500000000000005`}, {0.583, 0.30500000000000005`}}], 
     LineBox[{{0.703, 0.30500000000000005`}, {0.75, 
      0.30500000000000005`}}]}, {LineBox[{{0.42, 0.31}, {0.569, 0.31}}], 
     LineBox[{{0.718, 0.31}, {0.76, 0.31}}]}, {
     LineBox[{{0.415, 0.315}, {0.555, 0.315}}], 
     LineBox[{{0.734, 0.315}, {0.769, 0.315}}]}, {
     LineBox[{{0.411, 0.32}, {0.541, 0.32}}], 
     LineBox[{{0.749, 0.32}, {0.779, 0.32}}]}, {
     LineBox[{{0.406, 0.325}, {0.527, 0.325}}], 
     LineBox[{{0.763, 0.325}, {0.789, 0.325}}]}, {
     LineBox[{{0.401, 0.33}, {0.514, 0.33}}], 
     LineBox[{{0.777, 0.33}, {0.8, 0.33}}]}, {
     LineBox[{{0.395, 0.335}, {0.501, 0.335}}], 
     LineBox[{{0.791, 0.335}, {0.81, 0.335}}]}, {
     LineBox[{{0.39, 0.33999999999999997`}, {0.489, 0.33999999999999997`}}], 
     LineBox[{{0.805, 0.33999999999999997`}, {0.821, 
      0.33999999999999997`}}]}, {LineBox[{{0.384, 0.345}, {0.476, 0.345}}], 
     LineBox[{{0.818, 0.345}, {0.832, 0.345}}]}, {
     LineBox[{{0.378, 0.35}, {0.464, 0.35}}], 
     LineBox[{{0.831, 0.35}, {0.843, 0.35}}]}, {
     LineBox[{{0.372, 0.355}, {0.453, 0.355}}], 
     LineBox[{{0.844, 0.355}, {0.854, 0.355}}]}, {
     LineBox[{{0.366, 0.36}, {0.441, 0.36}}], 
     LineBox[{{0.857, 0.36}, {0.865, 0.36}}]}, {
     LineBox[{{0.36, 0.365}, {0.43, 0.365}}], 
     LineBox[{{0.87, 0.365}, {0.876, 0.365}}]}, {
     LineBox[{{0.354, 0.37}, {0.419, 0.37}}], 
     LineBox[{{0.882, 0.37}, {0.887, 0.37}}]}, {
     LineBox[{{0.347, 0.375}, {0.408, 0.375}}], 
     LineBox[{{0.895, 0.375}, {0.899, 0.375}}]}, {
     LineBox[{{0.341, 0.38}, {0.397, 0.38}}], 
     LineBox[{{0.907, 0.38}, {0.91, 0.38}}]}, {
     LineBox[{{0.334, 0.385}, {0.386, 0.385}}], 
     LineBox[{{0.92, 0.385}, {0.922, 0.385}}]}, {
     LineBox[{{0.327, 0.39}, {0.376, 0.39}}], 
     LineBox[{{0.932, 0.39}, {0.934, 0.39}}]}, 
    LineBox[{{0.32, 0.395}, {0.366, 0.395}}], 
    LineBox[{{0.313, 0.4}, {0.356, 0.4}}], 
    LineBox[{{0.306, 0.405}, {0.345, 0.405}}], 
    LineBox[{{0.299, 0.41000000000000003`}, {0.336, 0.41000000000000003`}}], 
    LineBox[{{0.292, 0.41500000000000004`}, {0.326, 0.41500000000000004`}}], 
    LineBox[{{0.285, 0.42000000000000004`}, {0.316, 0.42000000000000004`}}], 
    LineBox[{{0.277, 0.42500000000000004`}, {0.306, 0.42500000000000004`}}], 
    LineBox[{{0.27, 0.43000000000000005`}, {0.297, 0.43000000000000005`}}], 
    LineBox[{{0.263, 0.43500000000000005`}, {0.287, 0.43500000000000005`}}], 
    LineBox[{{0.255, 0.44000000000000006`}, {0.278, 0.44000000000000006`}}], 
    LineBox[{{0.248, 0.44500000000000006`}, {0.269, 0.44500000000000006`}}], 
    LineBox[{{0.24, 0.45000000000000007`}, {0.259, 0.45000000000000007`}}], 
    LineBox[{{0.232, 0.45499999999999996`}, {0.25, 0.45499999999999996`}}], 
    LineBox[{{0.225, 0.45999999999999996`}, {0.241, 0.45999999999999996`}}], 
    LineBox[{{0.217, 0.46499999999999997`}, {0.232, 0.46499999999999997`}}], 
    LineBox[{{0.209, 0.47}, {0.223, 0.47}}], 
    LineBox[{{0.202, 0.475}, {0.214, 0.475}}], 
    LineBox[{{0.194, 0.48}, {0.205, 0.48}}], 
    LineBox[{{0.186, 0.485}, {0.196, 0.485}}], 
    LineBox[{{0.178, 0.49}, {0.187, 0.49}}], 
    LineBox[{{0.17, 0.495}, {0.178, 0.495}}], 
    LineBox[{{0.162, 0.5}, {0.17, 0.5}}], 
    LineBox[{{0.154, 0.505}, {0.161, 0.505}}], 
    LineBox[{{0.146, 0.51}, {0.152, 0.51}}], 
    LineBox[{{0.138, 0.515}, {0.143, 0.515}}], 
    LineBox[{{0.13, 0.52}, {0.135, 0.52}}], 
    LineBox[{{0.122, 0.525}, {0.126, 0.525}}], 
    LineBox[{{0.114, 0.53}, {0.117, 0.53}}], 
    LineBox[{{0.106, 0.535}, {0.109, 0.535}}], 
    LineBox[{{0.098, 0.54}, {0.1, 0.54}}], 
    LineBox[{{0.09, 0.545}, {0.092, 0.545}}], {}, 
    LineBox[{{0.073, 0.555}, {0.075, 
     0.555}}], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
  BaseStyle->18,
  Frame->True,
  FrameLabel->{
    FormBox[
    "\"Mole Fraction B, \\!\\(\\*SubscriptBox[\\(x\\), \\(B\\)]\\)\"", 
     TraditionalForm], 
    FormBox["\"Temperature, T\"", TraditionalForm]},
  ImageSize->500,
  PlotRange->{{0, 1}, {0.1, 0.75}},
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{
  3.8568864503791428`*^9, {3.8568864903198423`*^9, 3.856886559310007*^9}, 
   3.8568866401973257`*^9, {3.8568867961675*^9, 3.8568868466091003`*^9}, {
   3.856886895272884*^9, 3.856886979493726*^9}, {3.856887160324581*^9, 
   3.856887168321094*^9}},
 CellLabel->"Out[537]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
g9cQ/yRTalzvCfyJ+Zd9Co12AD2eQY95L82JGV6Z8on4U95GxXOzDRv5HcbK
ZEKFAFPg7zRr/v2sov+8QnnFHBr+HSVzxqYwO9yaNEcQeJJsH93l+ZWub8W7
X57nSte3OrryMCPxeJnlXyVhwO0CTIg1NNpMKuN61NnKa9gI0mVTeye8Edi8
LAtlj+xUtTwel2mE1bH6nbqGk07+8Cw1K2pa/a0jrNpOEdbdXyJU3YfX+g1v
kiJO7Fk/1/zJt7rWzTHhT84/Jm6V+G4nfnLJfXLV4HwiTkdu/+F9zod3gtPB
TpPMGFc5B39qq23dn5bf0krUEtaZ8spvur8Zb37W9uncbNryeNVzssQ6aPtv
xSD16Flq7/K3WSqVGr/MR9b8E4ywfrb7ivy7cr6iu926Pl9Rr8ZEszLdsHC+
Iv+YeOs/K6uG5pGDagYcZ/1OcgAX4ftwLsjpaMGhASKHnbe6yrkFTb4K72q4
iJPrzlf5R5arv0aiOY5MkB2/HuMQM16V3Yp8bG7VqZzWa4a3Z5uD8Z7c3ET1
zC+uT64HM1AQqaCnWXNMP+7bwIs7if6nRi6+yhTzAmZK84rlQ4drIxf3r3Xe
fIzMluODvN1qnreMzQd3bF8u5iO2Gt7S7PWsU8yGwv4pFvg6O79fsk3KmBHn
1A6vyG9gcijcG6LOaa8w4wXp+RfOb0jG4yR7D4KQ+YwR3kPM5ST69FRyjM3o
qPwRXFqv9/Be7Po9s0TMbsa+Td6G61TnYzdk0fDa4qOp31zT8lEWz29fdnpD
Fo2U8VHaRNnFOh1t2N+6CY8xdaUZz8kH6c48/siLwRvlxzF7Sutk/S+Jd2Af
yeh8VMuN4jNdO33dlSacQ6nyJez6zeIyPXqis8tnL3NNNCrb9CdzjqG4A0xt
m1OklE2VzemSer9PVJvU5Y22wPhQz2nu52O7+2Q2H8nb8epj4zd0gcnbtaPK
wskM88bMabThMq9t2eGMSz22Nbsen6zK9uZ1jmc4L8FH+nL8ym/6rUx5cTgf
czU95T4E/whX8dHOIc0Uc8XNaORf7gWV+Q8f/7ic4+iXs6v2Oov0pk/LnEtl
N+7XR+r691u53V28o++oJxkowXVHzZtfIyy/JTLaZirnbyFzYESucvRE/xt3
+Tm9jjhVcFC47+IJsp3xS9wU9a+aN8Hqy8hT/89nXrNOMlO2py/8p2TOwglD
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
fnWnOCPNTK+dtqa3XsnUqVPVkiVLOCylH/HgQP1cv1rZRy+Zh+2qvH2UKc4I
b2/5Vbdux9OcvKqV5aPwq1atOAIeGiRYCTRMVJ5WSSY8yRQpFK2V7Wmjzvhb
L48aPLiIB8N4MNyj7ho8ggZ3jbQCNByl7tYxWg0ceLP+f/fdY9Q9d4+h3+Q9
d4/lwTh6yyF3j1dD7uGYIDFRDb1noocGkzyq6J7JNBhyr0cNG3IfD6Z41PAh
99N0w4dMVSM4hk5TNw0aTP+nq5FDp3toMINeHjn0ATVKx0wdo4fOUqOLZnlo
8CB92TFFD1HMlnhYjS16mD7W2KJHPGrcsEd58JhHjR/2OH2T8cPmqAkUt91Y
RP/nqok65qlJw+bRJJOGzacd/uRh8ykWcFDZvcMWetR9wxbRgr2vaJGaUrRY
otij7i8qpuL7i5aoqTqWqmlFSz00WEYfenrRMorlOgYPGqNmFK2gWOlRD/Bg
ZtEqmnRm0Wo1qzLW2OrBojUe9VDRGvoYs4etoVjLQc8eHrbWVo/w4NHh6+j5
Y8PXqaE3jleP0zMPDz1qzvD1tDDmjFiv5rpi3oj1NMK8ERs8av6IDfSeC0Zs
UAtGmlg4kooXjiyx1aKRJTTXxSNL1OJROmiiYhp61aibJ6glVKZjNI26lAfL
Rpd41PIx9GjFGHq0ckwpjbpybKlaFQ5brR5bSnNdQ0/XjNNBc107jkcdf+tE
tY7KdIynUdePL/WoDTwoGc8jlEwoVaXhsNXGCTyvTfR000Qd9OyJifTCk/rh
U5NKKUrUvbdPoDd5ehJ9ss2T+Ds9Q4XPTNZBz56dTC88N5k+8vP30qMXePDi
vfzKf+4rodjAQTN46T5eVtPumKBepjKOV+6jZfXKlA22enUKPXptynqPen3K
ehrr9fvXqzfCYas3719PM3yLnr41VQfN8O2p62z1zlRed+9OXadmFY5X707j
dfceDb00XKvel/hg2lqP+mD6Wir+cPpaijU6PppO28ZHM2jw8Yw19NrHM1ar
/zrxwGqP+uSB1bTdffrAaopVOj7jmLlKPXLXWFt9PnOVR30xcyX9DL6YtVL9
zxVf6lihvpq1gj7fVw/y8OsHV6ivH1rOQZ/ym4eW02A2Db6dvYw2s28fXqa+
c8XcIaNomu8foc3/h0eX0sMfHl2ifuR4bAlNzkNb/fTYEvXT48UcVPbz4/QT
+nkODbbMWUyz3DJ3sfrFFb/OXURj/TpvEQ3m8+9v4fAR6rcFi5zwqN8WLqK5
/rZokfrdBD37fbEeFi9Sf3AsWUjzoKGt/lhKP+Q/l9GjP5cvpLf7c8VCtVVi
8ZgRautKHnXrqoX0TttWLVTbVjuxwKO2rVlAc922dqEqM0Gjlq2jGZatpxmW
baAPU1bCb1xWuohiMQePsnExl21arMopiieNpLLyJ+gblz/Jg6eKbVX+9BJ6
tJkHz/AyKn9mqSp/dqmqeHYpjVzxHC/Liufp+fPLOLjshWVU9OJy+g4V/1lO
sUItmTpGVby0gmIlj/DySp7olZUUq1TFq6u47FVa+RWvreYXXl9NsYaDX3iD
djsVb9IWV/EW7UQq3qbNtOId2rYr3t1AIy+ZNUFVvLeBgvcIFe/Tz6XiA/qR
Vny4kd//o40Um0x8zPEEj/XfJ2jwyZP8Xp88pSo+1cHPPnuaXvh8M22lFV9s
pnhGLXn0PlXxv2conlUVXz5LL3/5HM/4q+conlcVXzvxAs/4mxdoJt++SI++
+w89+v4levTDy/Tox1fo0U+v8nv8/JpaMn86/+cptrxOg1/e4Bd+fYPiTVX+
65u8Fn57y0pS5b+/RfG2iT/eUWW/Pq3KtiyjWK7KfllBz1eqst9oyZX9zj+t
sj/WqLI/16qyretU2bb1FBtUcfGEqnV4nY0tTVSH2562HmXbqTT1GWecyxU5
1+Ooy1GXoy5HXY66HHV5y6/Ly7Y8pcp+XKLKflqqyn5e1uC6vM629qauy21d
j8sfTaTfTb399tuVZZ0jlO1Zy3g6I1HLtPUtc8+vtvfdkfnV97s15fdNlCFT
sY5NzKrPNhZVi79ppai9A0FjbnYXKq/djqI9RQfl9e6mfN6OFLsrv68TxR4U
e6qAr7MK+LuoBB17qYTA3ioxsA/FviopsJ9KStif4gCVnHCgSk48SKUkdqU4
mOIQ1TrpUIrDVJukw1XbpCMojlSpyX+hOEq1Sz6a4hjVPvlY1T7lONUhpRtF
d7VbyvGqY0oP1bH1CWr31idSnKQ6tT6Z4hS1R5tTKXqqPdv8leI01bnN6apL
m7+pLm3PUHu1/TvFP9Tebc+kOEvtk/pPirPVvqnnqP1Se1Gcq/Zvdx7F+eqA
dhdQXKgObHcRxcXqoHaXqK7tLlUH60hTh7S7TB3a7nJ1WLsrKP6lDqc4ot2V
6sh2V1H8W/2lXW91VLs+HnV0u6utLuqY1HR1bGpfigx1XGqm6pYaVN11ZKnj
U7NVj9SQOiE1hyJXnZiap06iODk1n6KfuvCUXHVq6jUU16qebfurv1Kc1nYA
xXXq9LbXq7+1HajO0HGD+nvqDbTV/YOGier/UgepMynOasdxo/onxdkc7W9U
57S/SfVqfxONey4Nfeq8Djer8yUuoLiwwy302kW73UKvXbzbLeqS3W7VcWnH
W1Vax9votctomKwu73ibumL323X8i+JKiqt2v0Nd1ekO9W+K3jruVH063UnT
XL3HnTS/9D3uVH0pMvbkKFSZe/J1rIKdC2ljzepcqLI5uhSqUJdCj8rpUkiT
5O5VqPIk8vcuVP325kkK9uZJrtmnUF27z2Ad/fcd7FED9h1M2/d1+w5W1+9n
YiDFDRz7D1aDKG7cn0a76YDBNPXNBwxWt3AcOFjdeuBdHnXbgYPpDW8/aLC6
g+JOicKug+kNB3fl1+7qOljdfbCJeyiGHMyvDT2EZ1d0yGA1jOPQwWr4ofQu
Iw7lSUYeNliNOqxQ3XzW9Wo0/R9zGH/+sYcX0gcdd3ihGk8x4QgTEykmcRxZ
qCYfSYvg3iML6ed7318K1RSK+3XcqaYedaeadtSdHjX9KF6oM46+Uz1w9B06
ZlLMOvoOeocHj7mDNoSHjrlDzT7mdjX72NvVwxSPUDzKcdzt6rHjblOPH8cr
dA4NfWput9vUPIn53W5VC7rfSq8tpKFPLep+q1p8vIni429RS47njWRpj1us
7mpZj1vUcooVPW5WK064Wa2kWMVx4k1qNcUairUn3qjWnnSjWkexnuPkQWoD
RQnHKYNU6Sk3qI0UmzhOHaieoHiSo+dA9VTP69XTFJs5/nqdeobiWY7TrlPP
nTZAPc9x+gD1AsWLp/dX/+H4W3/10t+uVS9znHGteoXi1TOuUa9x/P0a9frf
C9Tr/yhQb3D8Xz/1JsVbZ3Lkk+3PyidMvPPPPPUux9l56r2zc9V75+Sq9yke
vCKkPuiVoz48lyNEhj8vRCvp4/Oz1X85LshWn1yQpT65MEt9emGWR312UdBq
rT6/OEiRqb64xMT/Ls1QX3KkZaiv0vqqry7rq76m+OaydPXN5RRXpNMC/vZf
6fRJvr0yXX13FcW/TXzf+2r1fR+Kq69WP3CkU/S9mliecTV9kh8zr1Y/BSmy
+uj4OZsiRPujn3P60MtbcvuoLXkU+X3ULxz9KAp6k8qv6U0/61+v7a1+608x
wMTv11FcTzGwt/pj4L/VHzdQDKK4sTd9wD9v6k2b/p8391F/3kJxK8Vt9E5/
3n41F99xtdp6Z7raWkgxOJ00fldf2pa23t1Xbb0nQ20dkqG2DaUoyqA5bRuW
yVIfnqm2jQiqbSMpRgWpFh2dZe2vysZkqbKx2apsHMV4igkcIVU2MaTKJ1FM
zlHl91Lcx5GryqdQ3E8xNU+VT8tX5dM5+qnyGRQPFKjiu+i1WddQXKsqHqR4
qL+qmE3x8ABV8QjHdariUYrHrlcVjw9UFXMGsj7n3sDwnDdIVcynWHAjly28
iT52xaKbVcViiuJbVMWSW6h46a086rLbVMXy21XFitt51JV3WLupilV3qorV
FGsKVcXawapiHcddqmL93apiA0XJPaqidAjFUFWxkWJTkap4YpiqeJLiqeEU
I1TF0yNVxWaKZ0bRbJ8dbXWgIws6ZHh+LB1NjKODCY7xdChB2H+J4uWJdOgw
iWIyHThQvHYvHS0Q1N+geHMKxf2q/K2pqvxtinemMaffnW4doMrfm6HK339A
lX8wU5V/yDFLlX/0oCr/+CFV/t/ZqvwTjodV+aePqPLPHlXlnz+myr/geFyV
/2+OKv9yrir/ap4q/5rim/kUC1TZt3S89R0dVH1P8QMdWP1Q3Dhcl6bKOvvZ
iaNq7bPXuKm4ao5ypeJsdyqOFjsPvU4qjhNxjZ2MM9HEyTgTOy0Z99iMZY2Z
jPNwLs5ukhSczSk4D2feaKIlo0s49ebEjqfgbE7BeTjzRuOvG1/KqTcnYiwF
Z3PmjV54hfNvU3RYDcy/eTj9RhO9O20dp94k1no480bFH3D+bbqJD6dT8YfT
ef1/xPm3GTqsWvNv3ur5Nw8n4Jo4+fbyvKVNlnyzOflmNzjfZrvzbZxnW7mw
aZNt5U8sbqJk29uly5oi2ebhPBtP8V4J59k4rEZOtulotGSbzrW5Umxt3Sm2
+tbZUeY/pNKus8+0VNq19r9u0kpbVf6Z5FNKUyIm2q7EclZyxE7JSAW1sFTQ
KakFSAW1jFTQaAmkgppFKshfUyrIw3kgK8nJBHEiSAdSQc0oFVQ+swCpoJaV
Cjq4HqfitIl8Nk9j8impTj5JFshGAii6BJDtTgDRbGYU8UH2jKKVnP/hsJAE
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
+AP+gD/gDxq/wB/wB/wBf8Af8Af8AX/AH/AH/AF/wB/wB/wBf8CfWvlzqP7n
tdPS0g4PhUKn5OTk7EexN1QEFUFFUBFUBBVBRVBRfKnoEP3PDmZnZ39BoSjo
A/LQ/g8Ne2RmZho3mfFekXEmk6AsnymbL2VDeKpkcAqcAqfAKXAKnAKnwKn4
4tTB+l/iICFROcUiilEUz0vZL1lZWd2CwWBtpLpXyh4CqUAqkAqkAqlAKpAK
pIpDUnU1+aeuxKOtxKEy4tMFxCePLvZ5CgsLJ1MRa+llCn5u2UZRV9PzgTTZ
P+h1R1bXybibuAyygqwgK8gKsoKsICvIKi5lZY+SZNMDnGwySSmvnxj1qZSf
kZOTY6Tk/Ttpiou2UHhplCQACoACoAAoAAqAAqAAqLgE1OsCpV4MKMkzTRYp
jQq34HlbZ2RkbJNxj83MzISeoCfoCXqCnqAn6Al6ijM9HWRUlJiWllYmrXJd
cnJyBFDZAqj13FCXYso2y2g3clcp6Al6gp6gJ+gJeoKeoKf41FNXYVIZBV/a
QPTUS9JM77n0dJvo6RlOSUFP0BP0BD1BT9AT9AQ9xaWe7BOEST8yk/ym7FQp
+y5MJ62sCirjOJQiMcJ95Lp166G6U3TpvC/0BD1BT9AT9AQ9QU/QU6zoKSVq
Pb352iOqeNE4D99Ejj6J3EZOqye1iqB6BoNB1tK3nFTyV1UV9xK3WpuyTZJ8
GsNliUg+gU/gE/gEPoFP4BP41Dz41MjJpxNzc3OZRD+4kk8nC5N+DNPJm+Yk
qShS+/fvn1CDnlpFrSef8tnb6YleIz9Z5zZMTwkHkqDiSk/AE/AEPAFPwBPw
BDztLDwdIVDa5so7nSlQ+pRB1Tp8u5e3ZNxCCoMnXxhPViWe6HsSn+h5dTzZ
ntYaTm0shlTbKnjyVaaenPST4Mmn8eRhPVlnGj9Vt1NgP5efYCfYCXaCnWAn
2Al2amF2st124rIvHqcdTxR2spqk0zhnkZRgqVMwGJRO432kL/mz7Kc2ZtRL
xE4/yagBXZwRyU8UCa4EVBU/OQko7Sfvdn4KN9/5XX4K6OSTOwEVBlSiBtS+
ABQABUABUAAUAAVANT9AJbgBRXzimOUGVOP4yXb7icu2LKetsB5+sqpe8cl9
aUznik9DRUrTWU9tTVmJu8zQyVudTh6de0qpIiePS052dTnZWk4eppN1fmQ4
+fYUPBk4JdQCpyTACXACnAAnwAlwApziAE62G05c9vV8WkgRG+0a202zxE0j
XFfKfEmMdBFbyrjJy+fY/cbn29FrpweDQX9tdPJK4qmSTh62E41h9BSWk9du
ZzGb2nMHKCfn5DV08vs60WuEJ3qtOp0SAnvTa4Qn62/Cp7imkwU7wU6wE+wE
O8FOzdFOreuyE9GJ4+GYwpP3FAKS0w98P3ps7nLnzRA/fca9m9LT0835ed48
Kf6Y/rfLzc311UYoO0yoVkncD8qTrP2UUt1Quh9UO+vCyrY7X1VDVWm7C7gN
5d+7Wgoqrg0FQoFQIBQIBUKBUPFGqAgNd9/Mr0fDne02FJf9vpq23No7Ph2s
/yXOlvwTW+kazjkRjiaEQqEyyTVdxu105uoEdlsqGy9h+fXQ/kFQtTqcv6qH
qLxhUXnakKraejSpfEyqKqDyeTtafDbe7vSav0qbngaVxb3K97L+zokpgApJ
KYgKooKoICqIKk5F1SYaUZGnOIrdomooqGxOOM2WC2PSfPSQG+5CFIZcZrzO
/fr1c3qc035Sj8c3EOZX9Rie+mPKEwlTKRpT3qqYUn7v7pUZKr8LUwF/F1gK
loKlYClYCpaCpVqGpfbeEUuRpOSyBjtmqQZkpw41FyU4Micnpx/R6LZQKJSe
lZXF59vJvYPt1oMGDSqUaxhYiXpoexoEKNsNKCqz9YWhpJ8URaWgdJ+pjlav
7QXl04Jy95MCoUAoEAqEAqFAKBCqGRPqgF1BKAKUXN0gTKjoBHV2ffWTWDV9
ZFJIVfTj9XbQ8tnNOteVQzL68UM/6N0E/AA/wA/wA/wAPzGBH/fd6Dp33qdm
/FweET+2Gz92hyoNaD7gB6kf6Af6gX6gH+gH+olSP/Mq9VPWOPopXjzeuRvd
jqZ+otOPF/qBfqAf6Af6gX6gH+gnFvTTCA1fgdr0Y3En6vbW+Vo/XugHDV/A
D/AD/AA/wA/w03D8LGoe+LGBH+AH+AF+gB/gB/gBfmIXP7bGj2XwY7F8/LSf
Dd+NTeun8p4ioh+PPuXLrsSPDfwAP8AP8AP8AD/AD/DTjPHTuxp+Eqvgx6NT
P62rpH5s3evH3fMH+kGvH/AH/AF/wB/wB/yJUf4ku/lD4WcAVfKnlcMfnf9J
1i1gKZz0qWz9amvxVX9SrQvBHyR/oB/oB/qBfqAf6KdZ6Mdfk344D5TAlzeM
gB8P8AP8AD/AD/AD/AA/wE/LxI+T/SH8tEqu1vil8QP7wD6wD+wD+8A+sA/s
00LtU73jD+wD+8A+sA/sA/vAPrAP7AP7wD6wD+wD+8A+sA/sE9P2qXaDC9jn
/9u7f5aE4iiM49fGhGhtqa2tlsAIK+wPNQQZTUIIiXVDERSvREZE1ODm4FK0
1RA0BCq+hpbmqHfzq18YhGhFeE/c43d5ljOe5cNzhoN9sA/2wT7YB/tgHwX2
6fXegt5HjX22ohnso8M+5XUP+wTHPsO97GNuEgeWP5/4GbLyeV8S9gmQfRrn
GewTZPtw88I+2Af7YB/sg32wD/b5H/tMjE+L22dxLi5qn8hkYhDsszNf8Mk+
4W72sfIx+1PlTvs4f8bPyE/4sfYxpZljJfoZ7aYfU1s4sv75jX76hZ/b5ZI4
fq62c/rx85RMyeHnIZsSxs/zaVolfsa+4sc0q0XLn37jx/lOP6+tirh+Xh4v
B00/s5El9fpZiybRj0/6iXnS+smveqr1c7FRlNZPdbOAfvzQz/1uWrN+6od7
6McX/TSvT8T107iroB/0g37QD/pBP+gH/aAfIf2YM9d1P2LFRnvkhN4AYIAs
rQ==\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"f059a26e-a42f-419c-877a-35424996c35c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440., 850.5},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"13.0 for Linux x86 (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a6978902-320a-4b34-9993-1c2efaab4843"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "eq:van-der-waals"->{
  Cell[3872, 96, 2912, 60, 63, "DisplayFormulaNumbered",ExpressionUUID->"4ce60f54-1605-4e9c-baa2-5fedc8dfa8ed",
   CellTags->"eq:van-der-waals"],
  Cell[7751, 187, 3412, 70, 68, "DisplayFormulaNumbered",ExpressionUUID->"a1d22062-7550-43e8-8711-41b5831d420d",
   CellTags->"eq:van-der-waals"],
  Cell[13606, 332, 2788, 57, 36, "DisplayFormulaNumbered",ExpressionUUID->"a6e3f743-95dd-46d3-b698-8a4ef29dd9d1",
   CellTags->"eq:van-der-waals"],
  Cell[29124, 717, 3173, 72, 88, "DisplayFormulaNumbered",ExpressionUUID->"272d3e93-cf45-4f63-9290-6aeda2a5d4c1",
   CellTags->"eq:van-der-waals"],
  Cell[57976, 1425, 2216, 46, 102, "DisplayFormulaNumbered",ExpressionUUID->"f3850064-f889-4a66-a338-cf3891c98532",
   CellTags->"eq:van-der-waals"],
  Cell[60414, 1480, 2740, 60, 93, "DisplayFormulaNumbered",ExpressionUUID->"a2a49258-ecef-4e99-878d-be1e73350fc3",
   CellTags->"eq:van-der-waals"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"eq:van-der-waals", 355846, 6832}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 825, 11, 85, "Subtitle",ExpressionUUID->"85a29b7c-63a2-48ec-8ebe-120fbc1cd92d"],
Cell[CellGroupData[{
Cell[1408, 35, 825, 12, 69, "Chapter",ExpressionUUID->"e7fd79cd-4443-4448-a8c7-e2715a29613c"],
Cell[CellGroupData[{
Cell[2258, 51, 286, 7, 32, "Item",ExpressionUUID->"0a8145a1-7bd3-4650-ae08-5377d29566cf"],
Cell[2547, 60, 352, 7, 26, "Subitem",ExpressionUUID->"99e12831-c739-4803-9af6-9a31259a7d72"]
}, Open  ]],
Cell[2914, 70, 391, 8, 32, "Item",ExpressionUUID->"39066005-caf0-48c4-96df-1479c43c26ef"],
Cell[CellGroupData[{
Cell[3330, 82, 270, 4, 68, "Section",ExpressionUUID->"5063ea6c-044f-485d-9578-67111fcdfbb3"],
Cell[3603, 88, 266, 6, 32, "Item",ExpressionUUID->"c49fdc5e-4e09-4ab1-af8a-02a5759e8b20"],
Cell[3872, 96, 2912, 60, 63, "DisplayFormulaNumbered",ExpressionUUID->"4ce60f54-1605-4e9c-baa2-5fedc8dfa8ed",
 CellTags->"eq:van-der-waals"],
Cell[6787, 158, 688, 19, 29, "Input",ExpressionUUID->"952e7a9f-4988-448a-a7a9-4577a6eba8e2"],
Cell[7478, 179, 270, 6, 32, "Item",ExpressionUUID->"0e6317c5-ecb1-46cc-87d7-b327d4b8e8b7"],
Cell[7751, 187, 3412, 70, 68, "DisplayFormulaNumbered",ExpressionUUID->"a1d22062-7550-43e8-8711-41b5831d420d",
 CellTags->"eq:van-der-waals"],
Cell[CellGroupData[{
Cell[11188, 261, 1237, 34, 28, "Subitem",ExpressionUUID->"508c0a86-85ca-49e1-9763-26fe938e5253"],
Cell[12428, 297, 890, 24, 29, "Input",ExpressionUUID->"90e171ba-23fb-4445-b101-84409817598d"]
}, Open  ]],
Cell[13333, 324, 270, 6, 32, "Item",ExpressionUUID->"8955f43a-7af7-4c27-a9bf-a41a9ab1679c"],
Cell[13606, 332, 2788, 57, 36, "DisplayFormulaNumbered",ExpressionUUID->"a6e3f743-95dd-46d3-b698-8a4ef29dd9d1",
 CellTags->"eq:van-der-waals"],
Cell[CellGroupData[{
Cell[16419, 393, 320, 7, 26, "Subitem",ExpressionUUID->"d9765f0e-e0bf-475c-8395-720c7fbb6cf5"],
Cell[16742, 402, 989, 28, 29, "Input",ExpressionUUID->"ad989793-3ec0-452f-a7be-8ed4c9146224"],
Cell[CellGroupData[{
Cell[17756, 434, 3035, 78, 381, "Input",ExpressionUUID->"e53b4186-7418-4599-8cd3-7fd17c38e566"],
Cell[20794, 514, 5599, 123, 545, "Output",ExpressionUUID->"0a53e441-8ad2-45e7-aece-a3f9ba4b6018"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26451, 644, 174, 3, 68, "Section",ExpressionUUID->"d463c09f-8e72-4701-b936-94a195265394"],
Cell[CellGroupData[{
Cell[26650, 651, 374, 7, 74, "Item",ExpressionUUID->"8f5a63ad-71a6-4836-8f73-1997ba9ee3e3"],
Cell[27027, 660, 268, 6, 26, "Subitem",ExpressionUUID->"15aee468-c3d8-48d2-8ff5-a0c790ed141d"]
}, Open  ]],
Cell[27310, 669, 424, 8, 74, "Item",ExpressionUUID->"982d49c1-e597-4c1b-9788-12c07bbf7325"],
Cell[27737, 679, 372, 7, 53, "Item",ExpressionUUID->"8975b716-77c8-4871-b0f2-105e439b924e"],
Cell[CellGroupData[{
Cell[28134, 690, 331, 7, 53, "Item",ExpressionUUID->"74e66a60-969e-4446-a2a0-12a8b1fd75ff"],
Cell[28468, 699, 358, 7, 45, "Subitem",ExpressionUUID->"8c3c7ef6-4386-4be9-aa3f-d95e23c14696"]
}, Open  ]],
Cell[28841, 709, 280, 6, 32, "Item",ExpressionUUID->"577be190-c649-4dd7-bed1-bfe8c6701d7e"],
Cell[29124, 717, 3173, 72, 88, "DisplayFormulaNumbered",ExpressionUUID->"272d3e93-cf45-4f63-9290-6aeda2a5d4c1",
 CellTags->"eq:van-der-waals"],
Cell[CellGroupData[{
Cell[32322, 793, 743, 20, 28, "Subitem",ExpressionUUID->"a7428b92-000b-451d-95d1-0b637329f94c"],
Cell[33068, 815, 906, 24, 29, "Input",ExpressionUUID->"64ce45f7-a48f-40bd-ae5e-60ed5232683d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34011, 844, 212, 5, 32, "Item",ExpressionUUID->"2102d5f5-0a5c-4712-a36a-9abfc12e1d67"],
Cell[CellGroupData[{
Cell[34248, 853, 216, 4, 26, "Subitem",ExpressionUUID->"83d6ee52-dc29-4be8-ad37-d7b67710b253"],
Cell[34467, 859, 612, 17, 29, "Input",ExpressionUUID->"c336990b-229e-48c5-b58f-94d8ca381ef2"],
Cell[CellGroupData[{
Cell[35104, 880, 316, 6, 29, "Input",ExpressionUUID->"9f1fc54b-2205-4c34-8010-1a85b9846e37"],
Cell[35423, 888, 178, 2, 33, "Output",ExpressionUUID->"9de05b55-9b40-43e3-89b2-acbac407bc4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35638, 895, 371, 7, 29, "Input",ExpressionUUID->"44538659-e63e-4633-9e09-cc057aad1f9b"],
Cell[36012, 904, 202, 3, 33, "Output",ExpressionUUID->"44600bf0-9bff-4696-8ca4-5390506bd01a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36275, 914, 228, 5, 32, "Item",ExpressionUUID->"21d599f4-006c-41f5-a1de-326eba90d05f"],
Cell[CellGroupData[{
Cell[36528, 923, 246, 6, 26, "Subitem",ExpressionUUID->"03cf4e0c-f7e8-4ea0-a6fa-3ee2bc202f94"],
Cell[36777, 931, 5733, 144, 546, "Input",ExpressionUUID->"bd97a70e-8bb0-4ce5-9a68-cc6a39da8128"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42559, 1081, 200, 3, 32, "Item",ExpressionUUID->"5dd09e11-019e-4619-a3de-baceac3dcaa3"],
Cell[CellGroupData[{
Cell[42784, 1088, 3472, 87, 381, "Input",ExpressionUUID->"82e95d8b-597b-4a53-a7bf-b041a618c2a2"],
Cell[46259, 1177, 3216, 59, 537, "Output",ExpressionUUID->"06cb2f22-698f-4f3d-a9ea-ce19d8bf2935"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[49521, 1242, 187, 3, 32, "Item",ExpressionUUID->"ca9f1c27-e7cb-485d-ad4b-6488952925f9"],
Cell[CellGroupData[{
Cell[49733, 1249, 271, 6, 26, "Subitem",ExpressionUUID->"32356a42-1a4e-4511-ae98-bb29857a1dd4"],
Cell[CellGroupData[{
Cell[50029, 1259, 1674, 45, 71, "Input",ExpressionUUID->"8776d7b8-f8e4-47d2-94bb-d45b3d8c2a3d"],
Cell[51706, 1306, 5468, 87, 289, "Output",ExpressionUUID->"81cc762d-7ef5-4fe7-9263-6c08017c6353"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[57213, 1398, 241, 6, 32, "Item",ExpressionUUID->"91c0b20a-9aaa-45ea-ada5-a6306b563acc"],
Cell[CellGroupData[{
Cell[57479, 1408, 234, 6, 32, "Item",ExpressionUUID->"193efc5f-8ed8-4424-9684-d3c7bf65f57d"],
Cell[57716, 1416, 245, 6, 26, "Subitem",ExpressionUUID->"b95f76c7-d249-402e-9764-49901ccb11dc"]
}, Open  ]],
Cell[57976, 1425, 2216, 46, 102, "DisplayFormulaNumbered",ExpressionUUID->"f3850064-f889-4a66-a338-cf3891c98532",
 CellTags->"eq:van-der-waals"],
Cell[60195, 1473, 216, 5, 26, "Subitem",ExpressionUUID->"d278ba34-4aa4-4a56-9c38-378d4a03364f"],
Cell[60414, 1480, 2740, 60, 93, "DisplayFormulaNumbered",ExpressionUUID->"a2a49258-ecef-4e99-878d-be1e73350fc3",
 CellTags->"eq:van-der-waals"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63191, 1545, 222, 4, 68, "Section",ExpressionUUID->"bb4c77dc-d8ca-4c38-aaa6-9c773bf42b43"],
Cell[63416, 1551, 382, 8, 32, "Item",ExpressionUUID->"cb79b95a-3818-4a7a-bb76-edcf61e5f0e8"],
Cell[CellGroupData[{
Cell[63823, 1563, 338, 7, 32, "Item",ExpressionUUID->"b2dfdc35-2988-49a8-b665-9b207e3a122d"],
Cell[64164, 1572, 376, 7, 26, "Subitem",ExpressionUUID->"8363a011-4ca9-41b3-a81a-9db32d2b5bb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64577, 1584, 289, 7, 32, "Item",ExpressionUUID->"0bcac79a-1eb7-4691-be99-279e0391b0da"],
Cell[64869, 1593, 1865, 51, 133, "Input",ExpressionUUID->"9e11c622-f367-4f45-8840-3104cee8955e"],
Cell[CellGroupData[{
Cell[66759, 1648, 2176, 56, 154, "Input",ExpressionUUID->"43bc71d5-de70-443d-ae77-76b6faf19ec7"],
Cell[68938, 1706, 2564, 47, 438, "Output",ExpressionUUID->"bfc66aa7-56e3-4ae7-90b6-e35d8cba18d7"]
}, Open  ]],
Cell[71517, 1756, 205, 3, 26, "Subitem",ExpressionUUID->"f66a87a9-8199-4852-9f1d-4b8e31fc3420"],
Cell[CellGroupData[{
Cell[71747, 1763, 191, 3, 26, "Subitem",ExpressionUUID->"0489fa35-1c9b-455f-bb6b-48756bbc97f2"],
Cell[71941, 1768, 3443, 116, 174, "Input",ExpressionUUID->"82e938c9-411c-4607-931f-94f3ecd5e128"],
Cell[75387, 1886, 213, 4, 29, "Input",ExpressionUUID->"e79a92db-3c5b-4a0e-9494-22b4fd096c5e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75649, 1896, 231, 6, 32, "Item",ExpressionUUID->"b7cb42a9-0575-49de-82c4-c586e80e2bf6"],
Cell[CellGroupData[{
Cell[75905, 1906, 290, 7, 26, "Subitem",ExpressionUUID->"d6821476-f979-48e3-b171-e46774c6411b"],
Cell[76198, 1915, 622, 16, 29, "Input",ExpressionUUID->"ee52b4bd-ccc8-4fa1-a39b-a2d34cb45a7c"],
Cell[76823, 1933, 1426, 37, 154, "Input",ExpressionUUID->"617a3651-0207-4dda-8425-18baf6324daf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[78298, 1976, 216, 4, 32, "Item",ExpressionUUID->"c5c5ed7c-b9e2-480d-bf89-7920158f5194"],
Cell[CellGroupData[{
Cell[78539, 1984, 2417, 61, 154, "Input",ExpressionUUID->"e077511b-85e1-4bef-825f-433375672296"],
Cell[80959, 2047, 37154, 644, 367, "Output",ExpressionUUID->"72091e7d-aa27-4c0c-baeb-8d892cb4c1db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118150, 2696, 305, 7, 26, "Subitem",ExpressionUUID->"7c8630ec-977c-43f4-b3c3-777454a2dafd"],
Cell[118458, 2705, 505, 9, 43, "Subsubitem",ExpressionUUID->"fb8c72f0-ae53-46b0-9f9f-62fff504e327"],
Cell[CellGroupData[{
Cell[118988, 2718, 332, 7, 25, "Subsubitem",ExpressionUUID->"f85fce00-9864-4064-aa94-f604c1a907e0"],
Cell[CellGroupData[{
Cell[119345, 2729, 3077, 77, 175, "Input",ExpressionUUID->"4ef9ecf9-dc93-46a3-ad99-dec83b7f3758"],
Cell[122425, 2808, 38274, 667, 367, "Output",ExpressionUUID->"0b608d4e-09fa-4cb0-8dc1-07bdd59b1228"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[160772, 3483, 235, 6, 32, "Item",ExpressionUUID->"5b851260-b213-4f1b-8342-4428299aa98d"],
Cell[CellGroupData[{
Cell[161032, 3493, 203, 3, 26, "Subitem",ExpressionUUID->"abb49580-018e-4d9f-8ece-492152240709"],
Cell[161238, 3498, 244, 6, 51, "Input",ExpressionUUID->"1500abb2-390f-47a7-b9d5-1aa13c1a6250"],
Cell[161485, 3506, 2780, 69, 195, "Input",ExpressionUUID->"55d76443-fc05-48c0-bac0-0740c0e5bbeb"],
Cell[CellGroupData[{
Cell[164290, 3579, 1991, 48, 154, "Input",ExpressionUUID->"c13989c0-6523-4981-9e7e-c3e3ae194045"],
Cell[166284, 3629, 130792, 2114, 367, 94438, 1517, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"e79d5130-3a8e-45ed-ba9d-4a90a2257c5d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[297137, 5750, 213, 4, 32, "Item",ExpressionUUID->"23a47cfc-8fc1-4aed-b601-dc1fb44c68ff"],
Cell[CellGroupData[{
Cell[297375, 5758, 2518, 58, 195, "Input",ExpressionUUID->"cd677105-d558-4084-88b8-8d464d707c56"],
Cell[299896, 5818, 2574, 50, 440, "Output",ExpressionUUID->"3e3ec791-3d7e-432b-96ec-f8c882afda41"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[302531, 5875, 158, 3, 68, "Section",ExpressionUUID->"d8c91b63-8c3c-4f59-a7b1-75ce4dd721c5"],
Cell[CellGroupData[{
Cell[302714, 5882, 279, 6, 32, "Item",ExpressionUUID->"6dcf6d06-50f3-4481-b6bb-6e6d527b0eae"],
Cell[302996, 5890, 2691, 69, 174, "Input",ExpressionUUID->"9212a1eb-b17f-45a3-9499-c39ca919e6a2"],
Cell[CellGroupData[{
Cell[305712, 5963, 1501, 37, 51, "Input",ExpressionUUID->"15856a4c-7f3c-47e7-924f-df6d456ef2a6"],
Cell[307216, 6002, 48225, 813, 349, 10577, 194, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"f059a26e-a42f-419c-877a-35424996c35c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

